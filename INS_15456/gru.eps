%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: gru.pdf
%%Creator: Adobe Acrobat 18.9.0
%%For: Lavender
%%CreationDate: 2020/3/8, 13:52:54
%%BoundingBox: 0 0 476 299
%%HiResBoundingBox: 0 0 475.7714 298.3268
%%CropBox: 0 0 475.7714 298.3268
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 607 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2020-03-08T05:47:04Z"
   xmp:CreatorTool="WPS 演示"
   xmp:ModifyDate="2020-03-08T05:47:04Z"
   pdf:Producer="macOS 版本 10.14.1（版号 18B75） Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -298.327 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
3.05176e-5 0 mo
3.05176e-5 298.327 li
475.771 298.327 li
475.771 0 li
cp
clp
gsave
-344.273 -135.934 mo
615.727 -135.934 li
615.727 404.066 li
-344.273 404.066 li
-344.273 -135.934 li
eclp
gsave
-344.273 404.066 mo
615.727 404.066 li
615.727 -135.934 li
-344.273 -135.934 li
-344.273 404.066 li
clp
-344.273 -135.934 mo
615.727 -135.934 li
615.727 404.066 li
-344.273 404.066 li
-344.273 -135.934 li
false sop
0 0 0 0 cmyk
ef
393.559 243.06 mo
397.059 237.06 li
396.195 237.06 li
399.695 243.06 li
399.794 243.181 li
399.926 243.266 li
400.077 243.306 li
400.233 243.297 li
400.379 243.24 li
400.5 243.141 li
400.585 243.01 li
400.624 242.858 li
400.616 242.702 li
400.559 242.556 li
396.627 235.816 li
392.695 242.556 li
392.638 242.702 li
392.629 242.858 li
392.669 243.01 li
392.754 243.141 li
392.875 243.24 li
393.021 243.297 li
393.177 243.306 li
393.328 243.266 li
393.46 243.181 li
393.559 243.06 li
cp
397.127 262.816 mo
397.127 236.808 li
396.127 236.808 li
396.127 262.816 li
397.127 262.816 li
.750271 .679713 .654902 .901946 cmyk
f
149.859 244.71 mo
153.359 238.71 li
152.495 238.71 li
155.995 244.71 li
156.094 244.831 li
156.226 244.916 li
156.377 244.956 li
156.533 244.947 li
156.679 244.89 li
156.8 244.791 li
156.885 244.66 li
156.925 244.508 li
156.916 244.352 li
156.859 244.206 li
152.927 237.466 li
148.995 244.206 li
148.938 244.352 li
148.93 244.508 li
148.969 244.66 li
149.054 244.791 li
149.175 244.89 li
149.321 244.947 li
149.477 244.956 li
149.628 244.916 li
149.76 244.831 li
149.859 244.71 li
cp
153.427 264.466 mo
153.427 238.458 li
152.427 238.458 li
152.427 264.466 li
153.427 264.466 li
f
76.7087 244.71 mo
80.2087 238.71 li
79.3448 238.71 li
82.8448 244.71 li
82.9438 244.831 li
83.0757 244.916 li
83.2267 244.956 li
83.3828 244.947 li
83.5287 244.89 li
83.6497 244.791 li
83.7347 244.66 li
83.7737 244.508 li
83.7657 244.352 li
83.7087 244.206 li
79.7767 237.466 li
75.8448 244.206 li
75.7878 244.352 li
75.7787 244.508 li
75.8188 244.66 li
75.9037 244.791 li
76.0247 244.89 li
76.1707 244.947 li
76.3268 244.956 li
76.4778 244.916 li
76.6097 244.831 li
76.7087 244.71 li
cp
80.2767 264.466 mo
80.2767 238.458 li
79.2767 238.458 li
79.2767 264.466 li
80.2767 264.466 li
f
390.509 44.71 mo
394.009 38.71 li
393.145 38.71 li
396.645 44.71 li
396.744 44.8311 li
396.876 44.916 li
397.027 44.9561 li
397.183 44.947 li
397.329 44.89 li
397.45 44.791 li
397.535 44.66 li
397.574 44.5079 li
397.566 44.3519 li
397.509 44.206 li
393.577 37.4661 li
389.645 44.206 li
389.588 44.3519 li
389.579 44.5079 li
389.619 44.66 li
389.704 44.791 li
389.825 44.89 li
389.971 44.947 li
390.127 44.9561 li
390.278 44.916 li
390.41 44.8311 li
390.509 44.71 li
394.077 98.4661 mo
394.077 38.4579 li
393.077 38.4579 li
393.077 98.4661 li
394.077 98.4661 li
f
284.523 44.677 mo
280.959 38.715 li
281.822 38.706 li
278.387 44.743 li
278.29 44.865 li
278.159 44.951 li
278.008 44.993 li
277.852 44.985 li
277.706 44.93 li
277.583 44.833 li
277.497 44.702 li
277.456 44.551 li
277.463 44.395 li
277.518 44.249 li
281.377 37.466 li
285.382 44.163 li
285.44 44.309 li
285.45 44.465 li
285.412 44.616 li
285.329 44.749 li
285.209 44.849 li
285.064 44.907 li
284.908 44.918 li
284.756 44.88 li
284.624 44.797 li
284.523 44.677 li
cp
281.227 69.821 mo
280.888 38.464 li
281.888 38.453 li
282.227 69.811 li
281.227 69.821 li
f
76.7086 44.9599 mo
80.2087 38.96 li
79.3448 38.96 li
82.8449 44.9599 li
82.9436 45.0811 li
83.0758 45.1659 li
83.2267 45.206 li
83.3827 45.1969 li
83.5288 45.1399 li
83.6497 45.0409 li
83.7348 44.91 li
83.7737 44.7581 li
83.7658 44.6021 li
83.7088 44.456 li
79.7766 37.716 li
75.8447 44.456 li
75.7877 44.6021 li
75.7788 44.7581 li
75.8187 44.91 li
75.9038 45.0409 li
76.0247 45.1399 li
76.1708 45.1969 li
76.3268 45.206 li
76.4777 45.1659 li
76.6099 45.0811 li
76.7086 44.9599 li
80.2768 98.7161 mo
80.2768 38.7081 li
79.2768 38.7081 li
79.2768 98.7161 li
80.2768 98.7161 li
f
27.0067 264.506 mo
26.9767 261.21 29.6707 258.516 33.0067 258.506 cv
107.527 258.506 li
110.883 258.516 113.577 261.21 113.527 264.506 cv
113.527 288.626 li
113.577 291.922 110.883 294.616 107.527 294.626 cv
33.0067 294.626 li
29.6707 294.616 26.9767 291.922 27.0067 288.626 cv
27.0067 264.506 li
.14023 .106905 .111513 0 cmyk
ef
26.4847 264.198 mo
26.5097 263.867 li
26.5518 263.541 li
26.6087 263.22 li
26.6817 262.905 li
26.7697 262.595 li
26.8717 262.292 li
26.9887 261.996 li
27.1198 261.707 li
27.2637 261.426 li
27.4207 261.153 li
27.5898 260.889 li
27.7718 260.633 li
27.9648 260.387 li
28.1697 260.151 li
28.3857 259.925 li
28.6118 259.709 li
28.8477 259.504 li
29.0938 259.311 li
29.3497 259.129 li
29.6137 258.96 li
29.8867 258.803 li
30.1678 258.659 li
30.4568 258.528 li
30.7527 258.411 li
31.0558 258.309 li
31.3658 258.221 li
31.6808 258.148 li
32.0017 258.091 li
32.3278 258.049 li
32.6588 258.024 li
32.9868 258.016 li
107.567 258.016 li
107.895 258.024 li
108.226 258.049 li
108.552 258.091 li
108.873 258.148 li
109.188 258.221 li
109.498 258.309 li
109.801 258.411 li
110.097 258.528 li
110.386 258.659 li
110.667 258.803 li
110.94 258.96 li
111.204 259.129 li
111.46 259.311 li
111.706 259.504 li
111.942 259.709 li
112.168 259.925 li
112.384 260.151 li
112.589 260.387 li
112.782 260.633 li
112.964 260.889 li
113.133 261.153 li
113.29 261.426 li
113.434 261.707 li
113.565 261.996 li
113.682 262.292 li
113.784 262.595 li
113.872 262.905 li
113.945 263.22 li
114.002 263.541 li
114.044 263.867 li
114.069 264.198 li
114.077 264.526 li
114.077 288.606 li
114.069 288.934 li
114.044 289.265 li
114.002 289.591 li
113.945 289.912 li
113.872 290.227 li
113.784 290.537 li
113.682 290.84 li
113.565 291.136 li
113.434 291.425 li
113.29 291.706 li
113.133 291.979 li
112.964 292.243 li
112.782 292.499 li
112.589 292.745 li
112.384 292.981 li
112.168 293.207 li
111.942 293.423 li
111.706 293.628 li
111.46 293.821 li
111.204 294.003 li
110.94 294.172 li
110.667 294.329 li
110.386 294.473 li
110.097 294.604 li
109.801 294.721 li
109.498 294.823 li
109.188 294.911 li
108.873 294.984 li
108.552 295.041 li
108.226 295.083 li
107.895 295.108 li
107.567 295.116 li
32.9868 295.116 li
32.6588 295.108 li
32.3278 295.083 li
32.0017 295.041 li
31.6808 294.984 li
31.3658 294.911 li
31.0558 294.823 li
30.7527 294.721 li
30.4568 294.604 li
30.1678 294.473 li
29.8867 294.329 li
29.6137 294.172 li
29.3497 294.003 li
29.0938 293.821 li
28.8477 293.628 li
28.6118 293.423 li
28.3857 293.207 li
28.1697 292.981 li
27.9648 292.745 li
27.7718 292.499 li
27.5898 292.243 li
27.4207 291.979 li
27.2637 291.706 li
27.1198 291.425 li
26.9887 291.136 li
26.8717 290.84 li
26.7697 290.537 li
26.6817 290.227 li
26.6087 289.912 li
26.5518 289.591 li
26.5097 289.265 li
26.4847 288.934 li
26.4767 288.606 li
26.4767 264.526 li
26.4847 264.198 li
cp
27.4767 264.545 mo
27.4767 264.533 li
27.4767 288.599 li
27.4767 288.587 li
27.4847 288.896 li
27.4828 288.871 li
27.5067 289.176 li
27.5038 289.151 li
27.5417 289.452 li
27.5388 289.428 li
27.5908 289.724 li
27.5858 289.699 li
27.6537 289.99 li
27.6468 289.966 li
27.7278 290.252 li
27.7207 290.228 li
27.8157 290.508 li
27.8067 290.485 li
27.9147 290.758 li
27.9048 290.735 li
28.0258 291.002 li
28.0147 290.98 li
28.1477 291.239 li
28.1367 291.218 li
28.2817 291.47 li
28.2687 291.449 li
28.4247 291.693 li
28.4117 291.673 li
28.5797 291.909 li
28.5648 291.89 li
28.7437 292.117 li
28.7288 292.099 li
28.9178 292.317 li
28.9017 292.3 li
29.1007 292.509 li
29.0837 292.492 li
29.2928 292.691 li
29.2758 292.675 li
29.4937 292.864 li
29.4757 292.849 li
29.7028 293.028 li
29.6837 293.013 li
29.9197 293.181 li
29.8997 293.167 li
30.1437 293.324 li
30.1227 293.311 li
30.3748 293.456 li
30.3538 293.445 li
30.6127 293.578 li
30.5908 293.567 li
30.8578 293.688 li
30.8347 293.678 li
31.1078 293.786 li
31.0847 293.777 li
31.3647 293.872 li
31.3408 293.864 li
31.6267 293.946 li
31.6028 293.939 li
31.8937 294.007 li
31.8687 294.002 li
32.1647 294.054 li
32.1407 294.051 li
32.4417 294.089 li
32.4167 294.086 li
32.7217 294.11 li
32.6967 294.108 li
33.0057 294.116 li
32.9937 294.116 li
107.56 294.116 li
107.548 294.116 li
107.857 294.108 li
107.832 294.11 li
108.137 294.086 li
108.112 294.089 li
108.413 294.051 li
108.389 294.054 li
108.685 294.002 li
108.66 294.007 li
108.951 293.939 li
108.927 293.946 li
109.213 293.864 li
109.189 293.872 li
109.469 293.777 li
109.446 293.786 li
109.719 293.678 li
109.696 293.688 li
109.963 293.567 li
109.941 293.578 li
110.2 293.445 li
110.179 293.456 li
110.431 293.311 li
110.41 293.324 li
110.654 293.167 li
110.635 293.181 li
110.87 293.013 li
110.851 293.028 li
111.079 292.849 li
111.06 292.864 li
111.278 292.675 li
111.261 292.691 li
111.47 292.492 li
111.453 292.509 li
111.652 292.3 li
111.636 292.317 li
111.825 292.099 li
111.81 292.117 li
111.989 291.89 li
111.974 291.909 li
112.142 291.673 li
112.128 291.693 li
112.285 291.449 li
112.272 291.47 li
112.417 291.218 li
112.406 291.239 li
112.539 290.98 li
112.528 291.002 li
112.649 290.735 li
112.639 290.758 li
112.747 290.485 li
112.738 290.508 li
112.833 290.228 li
112.826 290.252 li
112.907 289.966 li
112.9 289.99 li
112.968 289.699 li
112.963 289.724 li
113.015 289.428 li
113.012 289.452 li
113.05 289.151 li
113.047 289.176 li
113.071 288.871 li
113.069 288.896 li
113.077 288.587 li
113.077 288.599 li
113.077 264.533 li
113.077 264.545 li
113.069 264.236 li
113.071 264.261 li
113.047 263.955 li
113.05 263.981 li
113.012 263.679 li
113.015 263.704 li
112.963 263.408 li
112.968 263.433 li
112.9 263.142 li
112.907 263.166 li
112.826 262.88 li
112.833 262.904 li
112.738 262.624 li
112.747 262.647 li
112.639 262.374 li
112.649 262.397 li
112.528 262.13 li
112.539 262.152 li
112.406 261.893 li
112.417 261.914 li
112.272 261.662 li
112.285 261.683 li
112.128 261.439 li
112.142 261.458 li
111.974 261.223 li
111.989 261.242 li
111.81 261.014 li
111.825 261.033 li
111.636 260.815 li
111.652 260.832 li
111.453 260.623 li
111.47 260.64 li
111.261 260.441 li
111.278 260.457 li
111.06 260.268 li
111.079 260.283 li
110.851 260.104 li
110.87 260.119 li
110.635 259.951 li
110.654 259.964 li
110.41 259.808 li
110.431 259.821 li
110.179 259.676 li
110.2 259.687 li
109.941 259.554 li
109.963 259.565 li
109.696 259.444 li
109.719 259.454 li
109.446 259.346 li
109.469 259.355 li
109.189 259.26 li
109.213 259.267 li
108.927 259.186 li
108.951 259.193 li
108.66 259.125 li
108.685 259.13 li
108.389 259.078 li
108.413 259.081 li
108.112 259.043 li
108.137 259.046 li
107.832 259.022 li
107.857 259.024 li
107.548 259.016 li
107.56 259.016 li
32.9937 259.016 li
33.0057 259.016 li
32.6967 259.024 li
32.7217 259.022 li
32.4167 259.046 li
32.4417 259.043 li
32.1407 259.081 li
32.1647 259.078 li
31.8687 259.13 li
31.8937 259.125 li
31.6028 259.193 li
31.6267 259.186 li
31.3408 259.267 li
31.3647 259.26 li
31.0847 259.355 li
31.1078 259.346 li
30.8347 259.454 li
30.8578 259.444 li
30.5908 259.565 li
30.6127 259.554 li
30.3538 259.687 li
30.3748 259.676 li
30.1227 259.821 li
30.1437 259.808 li
29.8997 259.964 li
29.9197 259.951 li
29.6837 260.119 li
29.7028 260.104 li
29.4757 260.283 li
29.4937 260.268 li
29.2758 260.457 li
29.2928 260.441 li
29.0837 260.64 li
29.1007 260.623 li
28.9017 260.832 li
28.9178 260.815 li
28.7288 261.033 li
28.7437 261.014 li
28.5648 261.242 li
28.5797 261.223 li
28.4117 261.458 li
28.4247 261.439 li
28.2687 261.683 li
28.2817 261.662 li
28.1367 261.914 li
28.1477 261.893 li
28.0147 262.152 li
28.0258 262.13 li
27.9048 262.397 li
27.9147 262.374 li
27.8067 262.647 li
27.8157 262.624 li
27.7207 262.904 li
27.7278 262.88 li
27.6468 263.166 li
27.6537 263.142 li
27.5858 263.433 li
27.5908 263.408 li
27.5388 263.704 li
27.5417 263.679 li
27.5038 263.981 li
27.5067 263.955 li
27.4828 264.261 li
27.4847 264.236 li
27.4767 264.545 li
.113375 .0942092 .259953 0 cmyk
f
31.3268 10.106 mo
31.3268 7.07101 33.7817 4.616 36.8467 4.586 cv
120.247 4.586 li
123.322 4.616 125.777 7.07101 125.767 10.106 cv
125.767 32.066 li
125.777 35.061 123.322 37.516 120.247 37.466 cv
36.8467 37.466 li
33.7817 37.516 31.3268 35.061 31.3268 32.066 cv
31.3268 10.106 li
.14023 .106905 .111513 0 cmyk
ef
30.8347 9.79202 mo
30.8578 9.48801 li
30.8958 9.189 li
30.9478 8.89401 li
31.0147 8.604 li
31.0957 8.32001 li
31.1898 8.04202 li
31.2968 7.77002 li
31.4167 7.505 li
31.5518 7.242 li
31.8488 6.75302 li
32.1927 6.293 li
32.5787 5.86801 li
33.0038 5.48199 li
33.4637 5.138 li
33.9528 4.841 li
34.2158 4.70602 li
34.4807 4.586 li
34.7527 4.479 li
35.0307 4.38501 li
35.3148 4.30402 li
35.6047 4.237 li
35.8997 4.185 li
36.1987 4.147 li
36.5027 4.12402 li
36.8037 4.116 li
120.3 4.116 li
120.601 4.12402 li
120.905 4.147 li
121.204 4.185 li
121.499 4.237 li
121.789 4.30402 li
122.073 4.38501 li
122.351 4.479 li
122.623 4.586 li
122.888 4.70602 li
123.151 4.841 li
123.64 5.138 li
124.1 5.48199 li
124.525 5.86801 li
124.911 6.293 li
125.255 6.75302 li
125.552 7.242 li
125.687 7.505 li
125.807 7.77002 li
125.914 8.04202 li
126.008 8.32001 li
126.089 8.604 li
126.156 8.89401 li
126.208 9.189 li
126.246 9.48801 li
126.269 9.79202 li
126.277 10.093 li
126.277 32.039 li
126.269 32.34 li
126.246 32.644 li
126.208 32.943 li
126.156 33.238 li
126.089 33.528 li
126.008 33.812 li
125.914 34.09 li
125.807 34.362 li
125.687 34.627 li
125.552 34.89 li
125.255 35.379 li
124.911 35.839 li
124.525 36.264 li
124.1 36.65 li
123.64 36.994 li
123.151 37.291 li
122.888 37.426 li
122.623 37.546 li
122.351 37.653 li
122.073 37.747 li
121.789 37.828 li
121.499 37.895 li
121.204 37.947 li
120.905 37.985 li
120.601 38.008 li
120.3 38.016 li
36.8037 38.016 li
36.5027 38.008 li
36.1987 37.985 li
35.8997 37.947 li
35.6047 37.895 li
35.3148 37.828 li
35.0307 37.747 li
34.7527 37.653 li
34.4807 37.546 li
34.2158 37.426 li
33.9528 37.291 li
33.4637 36.994 li
33.0038 36.65 li
32.5787 36.264 li
32.1927 35.839 li
31.8488 35.379 li
31.5518 34.89 li
31.4167 34.627 li
31.2968 34.362 li
31.1898 34.09 li
31.0957 33.812 li
31.0147 33.528 li
30.9478 33.238 li
30.8958 32.943 li
30.8578 32.644 li
30.8347 32.34 li
30.8268 32.039 li
30.8268 10.093 li
30.8347 9.79202 li
cp
31.8268 10.112 mo
31.8268 10.099 li
31.8268 32.033 li
31.8268 32.02 li
31.8337 32.302 li
31.8327 32.277 li
31.8538 32.555 li
31.8507 32.53 li
31.8857 32.805 li
31.8817 32.78 li
31.9308 33.05 li
31.9258 33.025 li
31.9868 33.291 li
31.9807 33.266 li
32.0547 33.527 li
32.0468 33.503 li
32.1328 33.758 li
32.1248 33.735 li
32.2227 33.984 li
32.2137 33.961 li
32.3228 34.204 li
32.3127 34.182 li
32.4337 34.418 li
32.4157 34.387 li
32.6907 34.839 li
32.6638 34.799 li
32.9797 35.221 li
32.9487 35.184 li
33.3027 35.574 li
33.2687 35.54 li
33.6588 35.894 li
33.6217 35.863 li
34.0437 36.179 li
34.0038 36.152 li
34.4557 36.427 li
34.4247 36.409 li
34.6607 36.53 li
34.6387 36.52 li
34.8817 36.629 li
34.8587 36.62 li
35.1078 36.718 li
35.0847 36.71 li
35.3398 36.796 li
35.3157 36.788 li
35.5768 36.862 li
35.5527 36.856 li
35.8177 36.917 li
35.7928 36.912 li
36.0627 36.961 li
36.0378 36.957 li
36.3127 36.992 li
36.2878 36.989 li
36.5657 37.01 li
36.5407 37.009 li
36.8228 37.016 li
36.8098 37.016 li
120.294 37.016 li
120.281 37.016 li
120.563 37.009 li
120.538 37.01 li
120.816 36.989 li
120.791 36.992 li
121.066 36.957 li
121.041 36.961 li
121.311 36.912 li
121.286 36.917 li
121.552 36.856 li
121.527 36.862 li
121.788 36.788 li
121.764 36.796 li
122.019 36.71 li
121.996 36.718 li
122.245 36.62 li
122.222 36.629 li
122.465 36.52 li
122.443 36.53 li
122.679 36.409 li
122.648 36.427 li
123.1 36.152 li
123.06 36.179 li
123.482 35.863 li
123.445 35.894 li
123.835 35.54 li
123.801 35.574 li
124.155 35.184 li
124.124 35.221 li
124.44 34.799 li
124.413 34.839 li
124.688 34.387 li
124.67 34.418 li
124.791 34.182 li
124.781 34.204 li
124.89 33.961 li
124.881 33.984 li
124.979 33.735 li
124.971 33.758 li
125.057 33.503 li
125.05 33.527 li
125.123 33.266 li
125.117 33.291 li
125.178 33.025 li
125.173 33.05 li
125.222 32.78 li
125.218 32.805 li
125.253 32.53 li
125.25 32.555 li
125.271 32.277 li
125.27 32.302 li
125.277 32.02 li
125.277 32.033 li
125.277 10.099 li
125.277 10.112 li
125.27 9.83002 li
125.271 9.85501 li
125.25 9.577 li
125.253 9.60202 li
125.218 9.327 li
125.222 9.35202 li
125.173 9.082 li
125.178 9.10699 li
125.117 8.841 li
125.123 8.866 li
125.05 8.60501 li
125.057 8.629 li
124.971 8.37402 li
124.979 8.397 li
124.881 8.14801 li
124.89 8.17102 li
124.781 7.92801 li
124.791 7.95001 li
124.67 7.71402 li
124.688 7.745 li
124.413 7.293 li
124.44 7.33301 li
124.124 6.91101 li
124.155 6.948 li
123.801 6.55801 li
123.835 6.59201 li
123.445 6.23801 li
123.482 6.26901 li
123.06 5.953 li
123.1 5.98001 li
122.648 5.70502 li
122.679 5.72302 li
122.443 5.60202 li
122.465 5.612 li
122.222 5.50302 li
122.245 5.51202 li
121.996 5.414 li
122.019 5.422 li
121.764 5.336 li
121.788 5.34402 li
121.527 5.27002 li
121.552 5.276 li
121.286 5.215 li
121.311 5.22 li
121.041 5.17102 li
121.066 5.17502 li
120.791 5.14001 li
120.816 5.14301 li
120.538 5.12201 li
120.563 5.12302 li
120.281 5.116 li
120.294 5.116 li
36.8098 5.116 li
36.8228 5.116 li
36.5407 5.12302 li
36.5657 5.12201 li
36.2878 5.14301 li
36.3127 5.14001 li
36.0378 5.17502 li
36.0627 5.17102 li
35.7928 5.22 li
35.8177 5.215 li
35.5527 5.276 li
35.5768 5.27002 li
35.3157 5.34402 li
35.3398 5.336 li
35.0847 5.422 li
35.1078 5.414 li
34.8587 5.51202 li
34.8817 5.50302 li
34.6387 5.612 li
34.6607 5.60202 li
34.4247 5.72302 li
34.4557 5.70502 li
34.0038 5.98001 li
34.0437 5.953 li
33.6217 6.26901 li
33.6588 6.23801 li
33.2687 6.59201 li
33.3027 6.55801 li
32.9487 6.948 li
32.9797 6.91101 li
32.6638 7.33301 li
32.6907 7.293 li
32.4157 7.745 li
32.4337 7.71402 li
32.3127 7.95001 li
32.3228 7.92801 li
32.2137 8.17102 li
32.2227 8.14801 li
32.1248 8.397 li
32.1328 8.37402 li
32.0468 8.629 li
32.0547 8.60501 li
31.9807 8.866 li
31.9868 8.841 li
31.9258 9.10699 li
31.9308 9.082 li
31.8817 9.35202 li
31.8857 9.327 li
31.8507 9.60202 li
31.8538 9.577 li
31.8327 9.85501 li
31.8337 9.83002 li
31.8268 10.112 li
.113375 .0942092 .259953 0 cmyk
f
374.167 89.066 mo
416.527 89.066 li
416.527 110.786 li
374.167 110.786 li
374.167 89.066 li
0 0 0 0 cmyk
ef
417.277 88.366 mo
417.277 111.516 li
373.377 111.516 li
373.377 88.366 li
417.277 88.366 li
cp
374.127 89.866 mo
374.877 89.116 li
374.877 110.766 li
374.127 110.016 li
416.527 110.016 li
415.777 110.766 li
415.777 89.116 li
416.527 89.866 li
374.127 89.866 li
.750271 .679713 .654902 .901946 cmyk
f
142.207 225.026 mo
142.227 219.013 147.197 214.166 153.327 214.166 cv
159.457 214.166 164.427 219.013 164.427 224.991 cv
164.427 230.969 159.457 235.816 153.327 235.816 cv
147.197 235.816 142.227 230.969 142.207 225.026 cv
0 0 0 0 cmyk
ef
141.742 224.408 mo
141.787 223.832 li
141.861 223.265 li
141.963 222.707 li
142.093 222.158 li
142.25 221.62 li
142.432 221.093 li
142.64 220.578 li
142.873 220.076 li
143.13 219.588 li
143.409 219.113 li
143.712 218.654 li
144.035 218.21 li
144.38 217.782 li
144.745 217.372 li
145.129 216.979 li
145.532 216.604 li
145.953 216.248 li
146.391 215.912 li
146.846 215.597 li
147.316 215.303 li
147.802 215.031 li
148.302 214.781 li
148.816 214.554 li
149.342 214.352 li
149.881 214.174 li
150.431 214.022 li
150.992 213.895 li
151.563 213.796 li
152.143 213.724 li
152.731 213.681 li
153.327 213.666 li
153.923 213.681 li
154.511 213.724 li
155.091 213.796 li
155.662 213.895 li
156.223 214.022 li
156.773 214.174 li
157.312 214.352 li
157.838 214.554 li
158.352 214.781 li
158.852 215.031 li
159.338 215.303 li
159.808 215.597 li
160.263 215.912 li
160.701 216.248 li
161.122 216.604 li
161.525 216.979 li
161.909 217.372 li
162.274 217.782 li
162.619 218.21 li
162.942 218.654 li
163.245 219.113 li
163.524 219.588 li
163.781 220.076 li
164.014 220.578 li
164.222 221.093 li
164.404 221.62 li
164.561 222.158 li
164.691 222.707 li
164.793 223.265 li
164.867 223.832 li
164.912 224.408 li
164.927 224.991 li
164.912 225.574 li
164.867 226.15 li
164.793 226.717 li
164.691 227.275 li
164.561 227.824 li
164.404 228.362 li
164.222 228.889 li
164.014 229.404 li
163.781 229.906 li
163.524 230.394 li
163.245 230.869 li
162.942 231.328 li
162.619 231.772 li
162.274 232.2 li
161.909 232.61 li
161.525 233.004 li
161.122 233.378 li
160.701 233.734 li
160.263 234.07 li
159.808 234.385 li
159.338 234.679 li
158.852 234.951 li
158.352 235.201 li
157.838 235.428 li
157.312 235.63 li
156.773 235.808 li
156.223 235.96 li
155.662 236.087 li
155.091 236.186 li
154.511 236.258 li
153.923 236.301 li
153.327 236.316 li
152.731 236.301 li
152.143 236.258 li
151.563 236.186 li
150.992 236.087 li
150.431 235.96 li
149.881 235.808 li
149.342 235.63 li
148.816 235.428 li
148.302 235.201 li
147.802 234.951 li
147.316 234.679 li
146.846 234.385 li
146.391 234.07 li
145.953 233.734 li
145.532 233.378 li
145.129 233.004 li
144.745 232.61 li
144.38 232.2 li
144.035 231.772 li
143.712 231.328 li
143.409 230.869 li
143.13 230.394 li
142.873 229.906 li
142.64 229.404 li
142.432 228.889 li
142.25 228.362 li
142.093 227.824 li
141.963 227.275 li
141.861 226.717 li
141.787 226.15 li
141.742 225.574 li
141.727 224.991 li
141.742 224.408 li
cp
142.727 225.004 mo
142.727 224.978 li
142.741 225.535 li
142.74 225.509 li
142.783 226.059 li
142.78 226.033 li
142.851 226.575 li
142.847 226.549 li
142.944 227.083 li
142.939 227.057 li
143.063 227.581 li
143.057 227.557 li
143.206 228.07 li
143.198 228.046 li
143.373 228.549 li
143.364 228.526 li
143.563 229.017 li
143.553 228.994 li
143.775 229.474 li
143.764 229.452 li
144.009 229.918 li
143.997 229.897 li
144.265 230.35 li
144.252 230.329 li
144.541 230.769 li
144.527 230.749 li
144.836 231.173 li
144.822 231.154 li
145.151 231.563 li
145.136 231.545 li
145.484 231.937 li
145.468 231.92 li
145.836 232.296 li
145.819 232.279 li
146.204 232.638 li
146.186 232.622 li
146.589 232.962 li
146.571 232.947 li
146.99 233.269 li
146.971 233.255 li
147.406 233.556 li
147.386 233.543 li
147.836 233.825 li
147.816 233.813 li
148.281 234.073 li
148.26 234.062 li
148.738 234.301 li
148.716 234.291 li
149.208 234.508 li
149.186 234.499 li
149.69 234.692 li
149.667 234.684 li
150.183 234.855 li
150.16 234.847 li
150.686 234.993 li
150.663 234.987 li
151.2 235.108 li
151.176 235.104 li
151.722 235.199 li
151.698 235.195 li
152.254 235.264 li
152.229 235.261 li
152.793 235.303 li
152.768 235.302 li
153.339 235.316 li
153.315 235.316 li
153.886 235.302 li
153.861 235.303 li
154.425 235.261 li
154.4 235.264 li
154.956 235.195 li
154.932 235.199 li
155.478 235.104 li
155.454 235.108 li
155.991 234.987 li
155.968 234.993 li
156.494 234.847 li
156.471 234.855 li
156.987 234.684 li
156.964 234.692 li
157.468 234.499 li
157.446 234.508 li
157.938 234.291 li
157.916 234.301 li
158.395 234.062 li
158.373 234.073 li
158.838 233.813 li
158.818 233.825 li
159.268 233.543 li
159.248 233.556 li
159.683 233.255 li
159.664 233.269 li
160.083 232.947 li
160.065 232.962 li
160.468 232.622 li
160.45 232.638 li
160.835 232.279 li
160.818 232.296 li
161.186 231.92 li
161.17 231.937 li
161.518 231.545 li
161.503 231.563 li
161.832 231.154 li
161.818 231.173 li
162.127 230.749 li
162.113 230.769 li
162.402 230.329 li
162.389 230.35 li
162.657 229.897 li
162.645 229.918 li
162.89 229.452 li
162.879 229.474 li
163.101 228.994 li
163.091 229.017 li
163.29 228.526 li
163.281 228.549 li
163.456 228.046 li
163.448 228.07 li
163.597 227.557 li
163.591 227.581 li
163.715 227.057 li
163.71 227.083 li
163.807 226.549 li
163.803 226.575 li
163.874 226.033 li
163.871 226.059 li
163.914 225.509 li
163.913 225.535 li
163.927 224.978 li
163.927 225.004 li
163.913 224.447 li
163.914 224.473 li
163.871 223.923 li
163.874 223.949 li
163.803 223.407 li
163.807 223.433 li
163.71 222.899 li
163.715 222.925 li
163.591 222.401 li
163.597 222.425 li
163.448 221.912 li
163.456 221.936 li
163.281 221.433 li
163.29 221.456 li
163.091 220.965 li
163.101 220.988 li
162.879 220.508 li
162.89 220.53 li
162.645 220.064 li
162.657 220.085 li
162.389 219.632 li
162.402 219.653 li
162.113 219.213 li
162.127 219.233 li
161.818 218.809 li
161.832 218.828 li
161.503 218.419 li
161.518 218.437 li
161.17 218.045 li
161.186 218.062 li
160.818 217.686 li
160.835 217.703 li
160.45 217.344 li
160.468 217.36 li
160.065 217.02 li
160.083 217.035 li
159.664 216.713 li
159.683 216.727 li
159.248 216.426 li
159.268 216.439 li
158.818 216.157 li
158.838 216.169 li
158.373 215.909 li
158.395 215.92 li
157.916 215.681 li
157.938 215.691 li
157.446 215.474 li
157.468 215.483 li
156.964 215.29 li
156.987 215.298 li
156.471 215.127 li
156.494 215.135 li
155.968 214.989 li
155.991 214.995 li
155.454 214.874 li
155.478 214.879 li
154.932 214.783 li
154.956 214.787 li
154.4 214.718 li
154.425 214.721 li
153.861 214.679 li
153.886 214.68 li
153.315 214.666 li
153.339 214.666 li
152.768 214.68 li
152.793 214.679 li
152.229 214.721 li
152.254 214.718 li
151.698 214.787 li
151.722 214.783 li
151.176 214.879 li
151.2 214.874 li
150.663 214.995 li
150.686 214.989 li
150.16 215.135 li
150.183 215.127 li
149.667 215.298 li
149.69 215.29 li
149.186 215.483 li
149.208 215.474 li
148.716 215.691 li
148.738 215.681 li
148.26 215.92 li
148.281 215.909 li
147.816 216.169 li
147.836 216.157 li
147.386 216.439 li
147.406 216.426 li
146.971 216.727 li
146.99 216.713 li
146.571 217.035 li
146.589 217.02 li
146.186 217.36 li
146.204 217.344 li
145.819 217.703 li
145.836 217.686 li
145.468 218.062 li
145.484 218.045 li
145.136 218.437 li
145.151 218.419 li
144.822 218.828 li
144.836 218.809 li
144.527 219.233 li
144.541 219.213 li
144.252 219.653 li
144.265 219.632 li
143.997 220.085 li
144.009 220.064 li
143.764 220.53 li
143.775 220.508 li
143.553 220.988 li
143.563 220.965 li
143.364 221.456 li
143.373 221.433 li
143.198 221.936 li
143.206 221.912 li
143.057 222.425 li
143.063 222.401 li
142.939 222.925 li
142.944 222.899 li
142.847 223.433 li
142.851 223.407 li
142.78 223.949 li
142.783 223.923 li
142.74 224.473 li
142.741 224.447 li
142.727 225.004 li
.750271 .679713 .654902 .901946 cmyk
f
140.287 87.8661 mo
140.227 75.57 150.181 65.616 162.487 65.6659 cv
284.047 65.6659 li
296.323 65.616 306.277 75.57 306.247 87.8661 cv
306.247 176.786 li
306.277 189.062 296.323 199.016 284.047 198.986 cv
162.487 198.986 li
150.181 199.016 140.227 189.062 140.287 176.786 cv
140.287 87.8661 li
0 0 0 0 cmyk
ef
139.734 87.2631 mo
139.757 86.6801 li
139.793 86.1011 li
139.844 85.526 li
139.91 84.955 li
139.989 84.3881 li
140.082 83.8259 li
140.189 83.2691 li
140.309 82.7161 li
140.443 82.1689 li
140.589 81.626 li
140.749 81.0901 li
140.922 80.558 li
141.107 80.0331 li
141.304 79.514 li
141.514 79.0009 li
141.735 78.4941 li
141.969 77.993 li
142.214 77.5001 li
142.471 77.0129 li
142.739 76.534 li
143.02 76.0591 li
143.61 75.1391 li
144.244 74.247 li
144.918 73.3891 li
145.633 72.564 li
146.385 71.7741 li
147.175 71.0221 li
148 70.3071 li
148.858 69.633 li
149.75 68.999 li
150.67 68.409 li
151.145 68.1281 li
151.624 67.8601 li
152.111 67.603 li
152.604 67.3581 li
153.105 67.124 li
153.612 66.9029 li
154.125 66.6931 li
154.644 66.496 li
155.169 66.311 li
155.701 66.1379 li
156.237 65.9779 li
156.78 65.832 li
157.327 65.6979 li
157.88 65.578 li
158.437 65.471 li
158.999 65.378 li
159.566 65.299 li
160.137 65.2331 li
160.712 65.1819 li
161.291 65.1459 li
161.874 65.1231 li
162.458 65.1161 li
284.046 65.1161 li
284.63 65.1231 li
285.213 65.1459 li
285.792 65.1819 li
286.367 65.2331 li
286.938 65.299 li
287.505 65.378 li
288.067 65.471 li
288.624 65.578 li
289.177 65.6979 li
289.724 65.832 li
290.267 65.9779 li
290.803 66.1379 li
291.335 66.311 li
291.86 66.496 li
292.379 66.6931 li
292.892 66.9029 li
293.399 67.124 li
293.9 67.3581 li
294.393 67.603 li
294.88 67.8601 li
295.36 68.1281 li
295.834 68.409 li
296.754 68.999 li
297.646 69.633 li
298.504 70.3071 li
299.329 71.0221 li
300.119 71.7741 li
300.871 72.564 li
301.586 73.3891 li
302.26 74.247 li
302.894 75.1391 li
303.484 76.0591 li
303.765 76.534 li
304.033 77.0129 li
304.29 77.5001 li
304.535 77.993 li
304.769 78.4941 li
304.99 79.0009 li
305.2 79.514 li
305.397 80.0331 li
305.582 80.558 li
305.755 81.0901 li
305.915 81.626 li
306.061 82.1689 li
306.195 82.7161 li
306.315 83.2691 li
306.422 83.8259 li
306.515 84.3881 li
306.594 84.955 li
306.66 85.526 li
306.711 86.1011 li
306.747 86.6801 li
306.77 87.2631 li
306.777 87.8471 li
306.777 176.785 li
306.77 177.369 li
306.747 177.952 li
306.711 178.531 li
306.66 179.106 li
306.594 179.677 li
306.515 180.244 li
306.422 180.806 li
306.315 181.363 li
306.195 181.916 li
306.061 182.463 li
305.915 183.006 li
305.755 183.542 li
305.582 184.074 li
305.397 184.599 li
305.2 185.118 li
304.99 185.631 li
304.769 186.138 li
304.535 186.639 li
304.29 187.132 li
304.033 187.619 li
303.765 188.099 li
303.484 188.573 li
302.894 189.493 li
302.26 190.385 li
301.586 191.243 li
300.871 192.068 li
300.119 192.858 li
299.329 193.61 li
298.504 194.325 li
297.646 194.999 li
296.754 195.633 li
295.834 196.223 li
295.36 196.504 li
294.88 196.772 li
294.393 197.029 li
293.9 197.274 li
293.399 197.508 li
292.892 197.729 li
292.379 197.939 li
291.86 198.136 li
291.335 198.321 li
290.803 198.494 li
290.267 198.654 li
289.724 198.8 li
289.177 198.934 li
288.624 199.054 li
288.067 199.161 li
287.505 199.254 li
286.938 199.333 li
286.367 199.399 li
285.792 199.45 li
285.213 199.486 li
284.63 199.509 li
284.046 199.516 li
162.458 199.516 li
161.874 199.509 li
161.291 199.486 li
160.712 199.45 li
160.137 199.399 li
159.566 199.333 li
158.999 199.254 li
158.437 199.161 li
157.88 199.054 li
157.327 198.934 li
156.78 198.8 li
156.237 198.654 li
155.701 198.494 li
155.169 198.321 li
154.644 198.136 li
154.125 197.939 li
153.612 197.729 li
153.105 197.508 li
152.604 197.274 li
152.111 197.029 li
151.624 196.772 li
151.145 196.504 li
150.67 196.223 li
149.75 195.633 li
148.858 194.999 li
148 194.325 li
147.175 193.61 li
146.385 192.858 li
145.633 192.068 li
144.918 191.243 li
144.244 190.385 li
143.61 189.493 li
143.02 188.573 li
142.739 188.099 li
142.471 187.619 li
142.214 187.132 li
141.969 186.639 li
141.735 186.138 li
141.514 185.631 li
141.304 185.118 li
141.107 184.599 li
140.922 184.074 li
140.749 183.542 li
140.589 183.006 li
140.443 182.463 li
140.309 181.916 li
140.189 181.363 li
140.082 180.806 li
139.989 180.244 li
139.91 179.677 li
139.844 179.106 li
139.793 178.531 li
139.757 177.952 li
139.734 177.369 li
139.727 176.785 li
139.727 87.8471 li
139.734 87.2631 li
140.727 87.856 mo
140.727 87.85 li
140.727 176.782 li
140.727 176.776 li
140.734 177.35 li
140.734 177.337 li
140.756 177.907 li
140.755 177.895 li
140.791 178.461 li
140.79 178.449 li
140.84 179.011 li
140.839 178.999 li
140.902 179.557 li
140.901 179.545 li
140.978 180.099 li
140.976 180.086 li
141.068 180.636 li
141.065 180.624 li
141.17 181.169 li
141.167 181.157 li
141.285 181.697 li
141.282 181.685 li
141.413 182.22 li
141.41 182.208 li
141.553 182.738 li
141.55 182.726 li
141.706 183.251 li
141.702 183.239 li
141.871 183.759 li
141.867 183.747 li
142.048 184.261 li
142.043 184.249 li
142.237 184.757 li
142.232 184.746 li
142.437 185.248 li
142.432 185.236 li
142.649 185.732 li
142.644 185.721 li
142.873 186.21 li
142.867 186.199 li
143.107 186.682 li
143.102 186.671 li
143.353 187.147 li
143.347 187.136 li
143.609 187.605 li
143.603 187.595 li
143.876 188.057 li
143.867 188.041 li
144.445 188.944 li
144.432 188.924 li
145.052 189.795 li
145.037 189.776 li
145.697 190.616 li
145.682 190.598 li
146.381 191.404 li
146.365 191.387 li
147.101 192.159 li
147.084 192.142 li
147.856 192.878 li
147.839 192.862 li
148.645 193.561 li
148.627 193.546 li
149.467 194.206 li
149.448 194.191 li
150.319 194.811 li
150.3 194.798 li
151.202 195.376 li
151.186 195.367 li
151.648 195.64 li
151.638 195.634 li
152.107 195.896 li
152.096 195.89 li
152.572 196.141 li
152.561 196.136 li
153.044 196.376 li
153.033 196.37 li
153.522 196.599 li
153.511 196.594 li
154.007 196.811 li
153.995 196.806 li
154.497 197.011 li
154.486 197.006 li
154.994 197.199 li
154.982 197.195 li
155.496 197.376 li
155.484 197.372 li
156.004 197.541 li
155.992 197.537 li
156.517 197.693 li
156.505 197.69 li
157.035 197.833 li
157.023 197.83 li
157.558 197.961 li
157.546 197.958 li
158.086 198.076 li
158.074 198.073 li
158.619 198.178 li
158.607 198.175 li
159.157 198.267 li
159.144 198.265 li
159.698 198.342 li
159.686 198.341 li
160.244 198.404 li
160.232 198.403 li
160.794 198.453 li
160.782 198.452 li
161.348 198.488 li
161.336 198.487 li
161.906 198.509 li
161.893 198.509 li
162.467 198.516 li
162.461 198.516 li
284.043 198.516 li
284.037 198.516 li
284.611 198.509 li
284.598 198.509 li
285.168 198.487 li
285.156 198.488 li
285.722 198.452 li
285.71 198.453 li
286.272 198.403 li
286.26 198.404 li
286.818 198.341 li
286.806 198.342 li
287.36 198.265 li
287.347 198.267 li
287.897 198.175 li
287.885 198.178 li
288.43 198.073 li
288.418 198.076 li
288.958 197.958 li
288.946 197.961 li
289.481 197.83 li
289.469 197.833 li
289.999 197.69 li
289.987 197.693 li
290.512 197.537 li
290.5 197.541 li
291.02 197.372 li
291.008 197.376 li
291.522 197.195 li
291.51 197.199 li
292.018 197.006 li
292.007 197.011 li
292.508 196.806 li
292.497 196.811 li
292.993 196.594 li
292.982 196.599 li
293.471 196.37 li
293.46 196.376 li
293.943 196.136 li
293.932 196.141 li
294.408 195.89 li
294.397 195.896 li
294.866 195.634 li
294.856 195.64 li
295.318 195.367 li
295.302 195.376 li
296.204 194.798 li
296.185 194.811 li
297.056 194.191 li
297.037 194.206 li
297.877 193.546 li
297.859 193.561 li
298.665 192.862 li
298.648 192.878 li
299.42 192.142 li
299.403 192.159 li
300.139 191.387 li
300.123 191.404 li
300.822 190.598 li
300.807 190.616 li
301.467 189.776 li
301.452 189.795 li
302.072 188.924 li
302.059 188.944 li
302.637 188.041 li
302.628 188.057 li
302.901 187.595 li
302.895 187.605 li
303.157 187.136 li
303.151 187.147 li
303.402 186.671 li
303.397 186.682 li
303.637 186.199 li
303.631 186.21 li
303.86 185.721 li
303.855 185.732 li
304.072 185.236 li
304.067 185.248 li
304.272 184.746 li
304.267 184.757 li
304.461 184.249 li
304.456 184.261 li
304.637 183.747 li
304.633 183.759 li
304.802 183.239 li
304.798 183.251 li
304.954 182.726 li
304.951 182.738 li
305.094 182.208 li
305.091 182.22 li
305.222 181.685 li
305.219 181.697 li
305.337 181.157 li
305.334 181.169 li
305.439 180.624 li
305.436 180.636 li
305.528 180.086 li
305.526 180.099 li
305.603 179.545 li
305.602 179.557 li
305.665 178.999 li
305.664 179.011 li
305.714 178.449 li
305.713 178.461 li
305.749 177.895 li
305.748 177.907 li
305.77 177.337 li
305.77 177.35 li
305.777 176.776 li
305.777 176.782 li
305.777 87.85 li
305.777 87.856 li
305.77 87.2821 li
305.77 87.295 li
305.748 86.725 li
305.749 86.737 li
305.713 86.171 li
305.714 86.1831 li
305.664 85.6209 li
305.665 85.6329 li
305.602 85.0749 li
305.603 85.0869 li
305.526 84.533 li
305.528 84.546 li
305.436 83.9961 li
305.439 84.0081 li
305.334 83.463 li
305.337 83.4751 li
305.219 82.9351 li
305.222 82.9471 li
305.091 82.4121 li
305.094 82.4241 li
304.951 81.894 li
304.954 81.906 li
304.798 81.3811 li
304.802 81.3931 li
304.633 80.8731 li
304.637 80.8851 li
304.456 80.371 li
304.461 80.383 li
304.267 79.875 li
304.272 79.886 li
304.067 79.384 li
304.072 79.396 li
303.855 78.9 li
303.86 78.911 li
303.631 78.422 li
303.637 78.433 li
303.397 77.95 li
303.402 77.961 li
303.151 77.4849 li
303.157 77.496 li
302.895 77.0271 li
302.901 77.037 li
302.628 76.5751 li
302.637 76.5909 li
302.059 75.689 li
302.072 75.708 li
301.452 74.837 li
301.467 74.856 li
300.807 74.0161 li
300.822 74.0341 li
300.123 73.228 li
300.139 73.2451 li
299.403 72.4729 li
299.42 72.49 li
298.648 71.7539 li
298.665 71.77 li
297.859 71.0711 li
297.877 71.086 li
297.037 70.4261 li
297.056 70.441 li
296.185 69.8209 li
296.204 69.8339 li
295.302 69.2559 li
295.318 69.2651 li
294.856 68.9921 li
294.866 68.9981 li
294.397 68.7361 li
294.408 68.7421 li
293.932 68.491 li
293.943 68.496 li
293.46 68.2559 li
293.471 68.2619 li
292.982 68.0329 li
292.993 68.038 li
292.497 67.821 li
292.508 67.826 li
292.007 67.621 li
292.018 67.626 li
291.51 67.4331 li
291.522 67.4369 li
291.008 67.2559 li
291.02 67.26 li
290.5 67.0911 li
290.512 67.0949 li
289.987 66.939 li
289.999 66.9421 li
289.469 66.7991 li
289.481 66.802 li
288.946 66.671 li
288.958 66.6741 li
288.418 66.5561 li
288.43 66.559 li
287.885 66.454 li
287.897 66.4571 li
287.347 66.3651 li
287.36 66.367 li
286.806 66.2901 li
286.818 66.291 li
286.26 66.2281 li
286.272 66.229 li
285.71 66.179 li
285.722 66.18 li
285.156 66.144 li
285.168 66.1449 li
284.598 66.123 li
284.611 66.123 li
284.037 66.1161 li
284.043 66.1161 li
162.461 66.1161 li
162.467 66.1161 li
161.893 66.123 li
161.906 66.123 li
161.336 66.1449 li
161.348 66.144 li
160.782 66.18 li
160.794 66.179 li
160.232 66.229 li
160.244 66.2281 li
159.686 66.291 li
159.698 66.2901 li
159.144 66.367 li
159.157 66.3651 li
158.607 66.4571 li
158.619 66.454 li
158.074 66.559 li
158.086 66.5561 li
157.546 66.6741 li
157.558 66.671 li
157.023 66.802 li
157.035 66.7991 li
156.505 66.9421 li
156.517 66.939 li
155.992 67.0949 li
156.004 67.0911 li
155.484 67.26 li
155.496 67.2559 li
154.982 67.4369 li
154.994 67.4331 li
154.486 67.626 li
154.497 67.621 li
153.995 67.826 li
154.007 67.821 li
153.511 68.038 li
153.522 68.0329 li
153.033 68.2619 li
153.044 68.2559 li
152.561 68.496 li
152.572 68.491 li
152.096 68.7421 li
152.107 68.7361 li
151.638 68.9981 li
151.648 68.9921 li
151.186 69.2651 li
151.202 69.2559 li
150.3 69.8339 li
150.319 69.8209 li
149.448 70.441 li
149.467 70.4261 li
148.627 71.086 li
148.645 71.0711 li
147.839 71.77 li
147.856 71.7539 li
147.084 72.49 li
147.101 72.4729 li
146.365 73.2451 li
146.381 73.228 li
145.682 74.0341 li
145.697 74.0161 li
145.037 74.856 li
145.052 74.837 li
144.432 75.708 li
144.445 75.689 li
143.867 76.5909 li
143.876 76.5751 li
143.603 77.037 li
143.609 77.0271 li
143.347 77.496 li
143.353 77.4849 li
143.102 77.961 li
143.107 77.95 li
142.867 78.433 li
142.873 78.422 li
142.644 78.911 li
142.649 78.9 li
142.432 79.396 li
142.437 79.384 li
142.232 79.886 li
142.237 79.875 li
142.043 80.383 li
142.048 80.371 li
141.867 80.8851 li
141.871 80.8731 li
141.702 81.3931 li
141.706 81.3811 li
141.55 81.906 li
141.553 81.894 li
141.41 82.4241 li
141.413 82.4121 li
141.282 82.9471 li
141.285 82.9351 li
141.167 83.4751 li
141.17 83.463 li
141.065 84.0081 li
141.068 83.9961 li
140.976 84.546 li
140.978 84.533 li
140.901 85.0869 li
140.902 85.0749 li
140.839 85.6329 li
140.84 85.6209 li
140.79 86.1831 li
140.791 86.171 li
140.755 86.737 li
140.756 86.725 li
140.734 87.295 li
140.734 87.2821 li
140.727 87.856 li
.750271 .679713 .654902 .901946 cmyk
f
272.047 149.186 mo
291.727 149.186 li
291.727 162.026 li
272.047 162.026 li
cp
.343969 .0834363 .125582 0 cmyk
ef
292.286 148.679 mo
292.286 162.466 li
271.514 162.466 li
271.514 148.679 li
292.286 148.679 li
cp
272.014 149.679 mo
272.514 149.179 li
272.514 161.966 li
272.014 161.466 li
291.786 161.466 li
291.286 161.966 li
291.286 149.179 li
291.786 149.679 li
272.014 149.679 li
.750271 .679713 .654902 .901946 cmyk
f
175.567 129.386 mo
175.564 126.222 177.957 123.679 180.908 123.679 cv
183.859 123.679 186.252 126.222 186.252 129.36 cv
186.252 132.497 183.859 135.041 180.908 135.041 cv
177.957 135.041 175.564 132.497 175.567 129.386 cv
.0358587 .184054 .102358 0 cmyk
ef
175.072 129.044 mo
175.094 128.731 li
175.131 128.423 li
175.182 128.12 li
175.247 127.822 li
175.325 127.53 li
175.416 127.244 li
175.52 126.964 li
175.636 126.69 li
175.767 126.419 li
176.055 125.915 li
176.389 125.439 li
176.765 125 li
177.179 124.599 li
177.624 124.246 li
177.866 124.081 li
178.111 123.931 li
178.363 123.794 li
178.623 123.669 li
178.889 123.557 li
179.162 123.459 li
179.441 123.375 li
179.725 123.305 li
180.014 123.25 li
180.308 123.211 li
180.606 123.186 li
180.908 123.178 li
181.21 123.186 li
181.508 123.211 li
181.802 123.25 li
182.091 123.305 li
182.376 123.375 li
182.654 123.459 li
182.927 123.557 li
183.193 123.669 li
183.453 123.794 li
183.705 123.931 li
183.951 124.081 li
184.193 124.246 li
184.637 124.599 li
185.051 125 li
185.427 125.439 li
185.762 125.915 li
186.05 126.419 li
186.181 126.69 li
186.297 126.964 li
186.401 127.244 li
186.492 127.53 li
186.57 127.822 li
186.635 128.12 li
186.685 128.423 li
186.722 128.731 li
186.745 129.044 li
186.752 129.36 li
186.745 129.676 li
186.722 129.988 li
186.685 130.296 li
186.635 130.599 li
186.57 130.897 li
186.492 131.19 li
186.401 131.476 li
186.297 131.756 li
186.181 132.029 li
186.05 132.301 li
185.762 132.805 li
185.427 133.281 li
185.051 133.72 li
184.637 134.12 li
184.193 134.474 li
183.951 134.639 li
183.705 134.788 li
183.453 134.926 li
183.193 135.051 li
182.927 135.162 li
182.654 135.261 li
182.376 135.345 li
182.091 135.414 li
181.802 135.469 li
181.508 135.509 li
181.21 135.533 li
180.908 135.541 li
180.606 135.533 li
180.308 135.509 li
180.014 135.469 li
179.725 135.414 li
179.441 135.345 li
179.162 135.261 li
178.889 135.162 li
178.623 135.051 li
178.363 134.926 li
178.111 134.788 li
177.866 134.639 li
177.624 134.474 li
177.179 134.12 li
176.765 133.72 li
176.389 133.281 li
176.055 132.805 li
175.767 132.301 li
175.636 132.029 li
175.52 131.756 li
175.416 131.476 li
175.325 131.19 li
175.247 130.897 li
175.182 130.599 li
175.131 130.296 li
175.094 129.988 li
175.072 129.676 li
175.064 129.36 li
175.072 129.044 li
cp
176.064 129.372 mo
176.064 129.348 li
176.071 129.64 li
176.07 129.616 li
176.091 129.905 li
176.089 129.881 li
176.123 130.166 li
176.119 130.142 li
176.166 130.422 li
176.162 130.399 li
176.221 130.674 li
176.216 130.651 li
176.288 130.92 li
176.281 130.898 li
176.365 131.162 li
176.357 131.139 li
176.453 131.397 li
176.445 131.376 li
176.552 131.627 li
176.542 131.606 li
176.66 131.851 li
176.644 131.82 li
176.911 132.288 li
176.886 132.249 li
177.194 132.686 li
177.165 132.649 li
177.51 133.052 li
177.477 133.017 li
177.857 133.384 li
177.82 133.352 li
178.232 133.679 li
178.202 133.658 li
178.419 133.805 li
178.398 133.792 li
178.622 133.929 li
178.6 133.916 li
178.831 134.042 li
178.808 134.03 li
179.045 134.144 li
179.021 134.133 li
179.264 134.235 li
179.24 134.226 li
179.488 134.315 li
179.464 134.307 li
179.717 134.384 li
179.692 134.377 li
179.95 134.44 li
179.925 134.434 li
180.188 134.484 li
180.161 134.48 li
180.429 134.516 li
180.402 134.513 li
180.674 134.535 li
180.647 134.534 li
180.922 134.541 li
180.895 134.541 li
181.17 134.534 li
181.143 134.535 li
181.414 134.513 li
181.388 134.516 li
181.655 134.48 li
181.629 134.484 li
181.892 134.434 li
181.866 134.44 li
182.125 134.377 li
182.099 134.384 li
182.353 134.307 li
182.328 134.315 li
182.576 134.226 li
182.552 134.235 li
182.795 134.133 li
182.772 134.144 li
183.008 134.03 li
182.986 134.042 li
183.216 133.916 li
183.195 133.929 li
183.418 133.792 li
183.398 133.805 li
183.614 133.658 li
183.585 133.679 li
183.996 133.352 li
183.96 133.384 li
184.339 133.017 li
184.307 133.052 li
184.652 132.649 li
184.623 132.686 li
184.93 132.249 li
184.905 132.288 li
185.173 131.82 li
185.157 131.851 li
185.275 131.606 li
185.265 131.627 li
185.372 131.376 li
185.363 131.397 li
185.459 131.139 li
185.451 131.162 li
185.535 130.898 li
185.529 130.92 li
185.601 130.651 li
185.595 130.674 li
185.655 130.399 li
185.65 130.422 li
185.697 130.142 li
185.694 130.166 li
185.728 129.881 li
185.726 129.905 li
185.746 129.616 li
185.745 129.64 li
185.752 129.348 li
185.752 129.372 li
185.745 129.079 li
185.746 129.103 li
185.726 128.815 li
185.728 128.838 li
185.694 128.554 li
185.697 128.577 li
185.65 128.298 li
185.655 128.321 li
185.595 128.046 li
185.601 128.069 li
185.529 127.799 li
185.535 127.822 li
185.451 127.558 li
185.459 127.58 li
185.363 127.322 li
185.372 127.344 li
185.265 127.092 li
185.275 127.114 li
185.157 126.869 li
185.173 126.9 li
184.905 126.431 li
184.93 126.471 li
184.623 126.034 li
184.652 126.071 li
184.307 125.667 li
184.339 125.702 li
183.96 125.335 li
183.996 125.367 li
183.585 125.04 li
183.614 125.062 li
183.398 124.914 li
183.418 124.928 li
183.195 124.791 li
183.216 124.803 li
182.986 124.678 li
183.008 124.689 li
182.772 124.576 li
182.795 124.586 li
182.552 124.484 li
182.576 124.494 li
182.328 124.404 li
182.353 124.413 li
182.099 124.336 li
182.125 124.343 li
181.866 124.28 li
181.892 124.285 li
181.629 124.235 li
181.655 124.239 li
181.388 124.203 li
181.414 124.206 li
181.143 124.184 li
181.17 124.186 li
180.895 124.178 li
180.922 124.178 li
180.647 124.186 li
180.674 124.184 li
180.402 124.206 li
180.429 124.203 li
180.161 124.239 li
180.188 124.235 li
179.925 124.285 li
179.95 124.28 li
179.692 124.343 li
179.717 124.336 li
179.464 124.413 li
179.488 124.404 li
179.24 124.494 li
179.264 124.484 li
179.021 124.586 li
179.045 124.576 li
178.808 124.689 li
178.831 124.678 li
178.6 124.803 li
178.622 124.791 li
178.398 124.928 li
178.419 124.914 li
178.202 125.062 li
178.232 125.04 li
177.82 125.367 li
177.857 125.335 li
177.477 125.702 li
177.51 125.667 li
177.165 126.071 li
177.194 126.034 li
176.886 126.471 li
176.911 126.431 li
176.644 126.9 li
176.66 126.869 li
176.542 127.114 li
176.552 127.092 li
176.445 127.344 li
176.453 127.322 li
176.357 127.58 li
176.365 127.558 li
176.281 127.822 li
176.288 127.799 li
176.216 128.069 li
176.221 128.046 li
176.162 128.321 li
176.166 128.298 li
176.119 128.577 li
176.123 128.554 li
176.089 128.838 li
176.091 128.815 li
176.07 129.103 li
176.071 129.079 li
176.064 129.372 li
.750271 .679713 .654902 .901946 cmyk
f
194.63 132.405 mo
188.804 128.622 li
188.721 130.348 li
194.882 127.138 li
195.056 127.023 li
195.203 126.874 li
195.315 126.697 li
195.388 126.501 li
195.419 126.295 li
195.406 126.086 li
195.35 125.884 li
195.253 125.699 li
195.12 125.538 li
194.957 125.408 li
194.77 125.314 li
194.567 125.262 li
194.358 125.253 li
194.152 125.288 li
193.958 125.364 li
186.277 129.366 li
193.541 134.082 li
193.727 134.177 li
193.929 134.231 li
194.138 134.242 li
194.344 134.209 li
194.539 134.134 li
194.715 134.02 li
194.863 133.873 li
194.976 133.697 li
195.051 133.502 li
195.084 133.296 li
195.073 133.087 li
195.019 132.885 li
194.924 132.699 li
194.792 132.536 li
194.63 132.405 li
cp
210.677 149.148 mo
210.668 148.665 li
210.641 148.166 li
210.595 147.667 li
210.533 147.17 li
210.453 146.675 li
210.356 146.181 li
210.243 145.69 li
210.114 145.202 li
209.969 144.716 li
209.809 144.234 li
209.634 143.754 li
209.443 143.278 li
209.239 142.806 li
209.02 142.337 li
208.788 141.873 li
208.539 141.407 li
208.011 140.506 li
207.43 139.619 li
206.8 138.752 li
206.125 137.908 li
205.406 137.088 li
204.646 136.294 li
203.847 135.528 li
203.011 134.79 li
202.139 134.083 li
201.235 133.408 li
200.301 132.768 li
199.337 132.163 li
198.347 131.596 li
197.332 131.068 li
196.295 130.581 li
195.236 130.137 li
194.165 129.74 li
193.615 129.557 li
193.067 129.386 li
192.515 129.229 li
191.959 129.083 li
191.401 128.95 li
190.839 128.83 li
190.275 128.724 li
189.709 128.63 li
189.14 128.551 li
188.57 128.485 li
188.349 128.465 li
188.17 130.457 li
188.378 130.476 li
188.353 130.473 li
188.899 130.536 li
188.875 130.533 li
189.419 130.609 li
189.395 130.606 li
189.938 130.695 li
189.915 130.691 li
190.456 130.793 li
190.433 130.789 li
190.972 130.904 li
190.949 130.899 li
191.485 131.026 li
191.463 131.021 li
191.997 131.16 li
191.975 131.155 li
192.506 131.306 li
192.485 131.3 li
193.012 131.464 li
192.992 131.457 li
193.516 131.632 li
193.485 131.621 li
194.522 132.005 li
194.482 131.99 li
195.502 132.417 li
195.464 132.4 li
196.464 132.87 li
196.427 132.851 li
197.406 133.36 li
197.37 133.341 li
198.325 133.888 li
198.291 133.867 li
199.22 134.451 li
199.187 134.429 li
200.088 135.047 li
200.055 135.023 li
200.927 135.674 li
200.895 135.649 li
201.734 136.33 li
201.703 136.303 li
202.508 137.014 li
202.477 136.985 li
203.246 137.723 li
203.216 137.693 li
203.946 138.456 li
203.917 138.423 li
204.606 139.21 li
204.577 139.175 li
205.224 139.983 li
205.196 139.946 li
205.797 140.775 li
205.77 140.735 li
206.324 141.581 li
206.298 141.539 li
206.803 142.401 li
206.784 142.367 li
207.018 142.804 li
207.005 142.78 li
207.226 143.22 li
207.214 143.196 li
207.421 143.639 li
207.409 143.614 li
207.602 144.06 li
207.592 144.033 li
207.771 144.483 li
207.76 144.455 li
207.926 144.907 li
207.916 144.878 li
208.066 145.332 li
208.057 145.303 li
208.193 145.759 li
208.185 145.728 li
208.306 146.186 li
208.298 146.155 li
208.404 146.614 li
208.397 146.582 li
208.487 147.043 li
208.481 147.009 li
208.555 147.471 li
208.551 147.437 li
208.609 147.9 li
208.605 147.865 li
208.647 148.328 li
208.645 148.293 li
208.67 148.757 li
208.669 148.72 li
208.677 149.184 li
210.677 149.148 li
f
276.367 129.386 mo
276.364 126.222 278.757 123.679 281.708 123.679 cv
284.659 123.679 287.052 126.222 287.052 129.36 cv
287.052 132.497 284.659 135.041 281.708 135.041 cv
278.757 135.041 276.364 132.497 276.367 129.386 cv
.0358587 .184054 .102358 0 cmyk
ef
275.872 129.044 mo
275.894 128.731 li
275.931 128.423 li
275.982 128.12 li
276.047 127.822 li
276.125 127.53 li
276.216 127.244 li
276.32 126.964 li
276.436 126.69 li
276.567 126.419 li
276.855 125.915 li
277.189 125.439 li
277.565 125 li
277.979 124.599 li
278.424 124.246 li
278.666 124.081 li
278.911 123.931 li
279.163 123.794 li
279.423 123.669 li
279.689 123.557 li
279.962 123.459 li
280.241 123.375 li
280.525 123.305 li
280.814 123.25 li
281.108 123.211 li
281.406 123.186 li
281.708 123.178 li
282.01 123.186 li
282.308 123.211 li
282.602 123.25 li
282.891 123.305 li
283.176 123.375 li
283.454 123.459 li
283.727 123.557 li
283.993 123.669 li
284.253 123.794 li
284.505 123.931 li
284.75 124.081 li
284.993 124.246 li
285.437 124.599 li
285.851 125 li
286.227 125.439 li
286.562 125.915 li
286.85 126.419 li
286.981 126.69 li
287.097 126.964 li
287.201 127.244 li
287.292 127.53 li
287.37 127.822 li
287.435 128.12 li
287.485 128.423 li
287.522 128.731 li
287.545 129.044 li
287.552 129.36 li
287.545 129.676 li
287.522 129.988 li
287.485 130.296 li
287.435 130.599 li
287.37 130.897 li
287.292 131.19 li
287.201 131.476 li
287.097 131.756 li
286.981 132.029 li
286.85 132.301 li
286.562 132.805 li
286.227 133.281 li
285.851 133.72 li
285.437 134.12 li
284.993 134.474 li
284.75 134.639 li
284.505 134.788 li
284.253 134.926 li
283.993 135.051 li
283.727 135.162 li
283.454 135.261 li
283.176 135.345 li
282.891 135.414 li
282.602 135.469 li
282.308 135.509 li
282.01 135.533 li
281.708 135.541 li
281.406 135.533 li
281.108 135.509 li
280.814 135.469 li
280.525 135.414 li
280.241 135.345 li
279.962 135.261 li
279.689 135.162 li
279.423 135.051 li
279.163 134.926 li
278.911 134.788 li
278.666 134.639 li
278.424 134.474 li
277.979 134.12 li
277.565 133.72 li
277.189 133.281 li
276.855 132.805 li
276.567 132.301 li
276.436 132.029 li
276.32 131.756 li
276.216 131.476 li
276.125 131.19 li
276.047 130.897 li
275.982 130.599 li
275.931 130.296 li
275.894 129.988 li
275.872 129.676 li
275.864 129.36 li
275.872 129.044 li
cp
276.864 129.372 mo
276.864 129.348 li
276.871 129.64 li
276.87 129.616 li
276.891 129.905 li
276.888 129.881 li
276.922 130.166 li
276.919 130.142 li
276.966 130.422 li
276.962 130.399 li
277.021 130.674 li
277.016 130.651 li
277.088 130.92 li
277.081 130.898 li
277.165 131.162 li
277.157 131.139 li
277.253 131.397 li
277.245 131.376 li
277.352 131.627 li
277.342 131.606 li
277.46 131.851 li
277.444 131.82 li
277.711 132.288 li
277.686 132.249 li
277.994 132.686 li
277.965 132.649 li
278.31 133.052 li
278.277 133.017 li
278.657 133.384 li
278.62 133.352 li
279.032 133.679 li
279.002 133.658 li
279.219 133.805 li
279.198 133.792 li
279.422 133.929 li
279.4 133.916 li
279.631 134.042 li
279.608 134.03 li
279.845 134.144 li
279.821 134.133 li
280.064 134.235 li
280.04 134.226 li
280.288 134.315 li
280.264 134.307 li
280.517 134.384 li
280.492 134.377 li
280.75 134.44 li
280.724 134.434 li
280.988 134.484 li
280.961 134.48 li
281.229 134.516 li
281.202 134.513 li
281.474 134.535 li
281.447 134.534 li
281.722 134.541 li
281.695 134.541 li
281.97 134.534 li
281.943 134.535 li
282.214 134.513 li
282.188 134.516 li
282.455 134.48 li
282.429 134.484 li
282.692 134.434 li
282.666 134.44 li
282.925 134.377 li
282.899 134.384 li
283.153 134.307 li
283.128 134.315 li
283.376 134.226 li
283.352 134.235 li
283.595 134.133 li
283.572 134.144 li
283.808 134.03 li
283.786 134.042 li
284.016 133.916 li
283.995 133.929 li
284.218 133.792 li
284.198 133.805 li
284.414 133.658 li
284.385 133.679 li
284.796 133.352 li
284.76 133.384 li
285.139 133.017 li
285.107 133.052 li
285.452 132.649 li
285.423 132.686 li
285.73 132.249 li
285.705 132.288 li
285.973 131.82 li
285.956 131.851 li
286.075 131.606 li
286.065 131.627 li
286.172 131.376 li
286.163 131.397 li
286.259 131.139 li
286.251 131.162 li
286.335 130.898 li
286.329 130.92 li
286.401 130.651 li
286.395 130.674 li
286.455 130.399 li
286.45 130.422 li
286.497 130.142 li
286.494 130.166 li
286.528 129.881 li
286.526 129.905 li
286.546 129.616 li
286.545 129.64 li
286.552 129.348 li
286.552 129.372 li
286.545 129.079 li
286.546 129.103 li
286.526 128.815 li
286.528 128.838 li
286.494 128.554 li
286.497 128.577 li
286.45 128.298 li
286.455 128.321 li
286.395 128.046 li
286.401 128.069 li
286.329 127.799 li
286.335 127.822 li
286.251 127.558 li
286.259 127.58 li
286.163 127.322 li
286.172 127.344 li
286.065 127.092 li
286.075 127.114 li
285.956 126.869 li
285.973 126.9 li
285.705 126.431 li
285.73 126.471 li
285.423 126.034 li
285.452 126.071 li
285.107 125.667 li
285.139 125.702 li
284.76 125.335 li
284.796 125.367 li
284.385 125.04 li
284.414 125.062 li
284.198 124.914 li
284.218 124.928 li
283.995 124.791 li
284.016 124.803 li
283.786 124.678 li
283.808 124.689 li
283.572 124.576 li
283.595 124.586 li
283.352 124.484 li
283.376 124.494 li
283.128 124.404 li
283.153 124.413 li
282.899 124.336 li
282.925 124.343 li
282.666 124.28 li
282.692 124.285 li
282.429 124.235 li
282.455 124.239 li
282.188 124.203 li
282.214 124.206 li
281.943 124.184 li
281.97 124.186 li
281.695 124.178 li
281.722 124.178 li
281.447 124.186 li
281.474 124.184 li
281.202 124.206 li
281.229 124.203 li
280.961 124.239 li
280.988 124.235 li
280.724 124.285 li
280.75 124.28 li
280.492 124.343 li
280.517 124.336 li
280.264 124.413 li
280.288 124.404 li
280.04 124.494 li
280.064 124.484 li
279.821 124.586 li
279.845 124.576 li
279.608 124.689 li
279.631 124.678 li
279.4 124.803 li
279.422 124.791 li
279.198 124.928 li
279.219 124.914 li
279.002 125.062 li
279.032 125.04 li
278.62 125.367 li
278.657 125.335 li
278.277 125.702 li
278.31 125.667 li
277.965 126.071 li
277.994 126.034 li
277.686 126.471 li
277.711 126.431 li
277.444 126.9 li
277.46 126.869 li
277.342 127.114 li
277.352 127.092 li
277.245 127.344 li
277.253 127.322 li
277.157 127.58 li
277.165 127.558 li
277.081 127.822 li
277.088 127.799 li
277.016 128.069 li
277.021 128.046 li
276.962 128.321 li
276.966 128.298 li
276.919 128.577 li
276.922 128.554 li
276.888 128.838 li
276.891 128.815 li
276.87 129.103 li
276.871 129.079 li
276.864 129.372 li
.750271 .679713 .654902 .901946 cmyk
f
280.915 149.543 mo
280.715 135.393 li
282.714 135.364 li
282.914 149.514 li
280.915 149.543 li
f
267.969 132.248 mo
273.864 128.575 li
273.915 130.302 li
267.816 126.977 li
267.643 126.859 li
267.5 126.707 li
267.391 126.528 li
267.321 126.331 li
267.294 126.124 li
267.311 125.915 li
267.371 125.715 li
267.471 125.532 li
267.607 125.373 li
267.773 125.246 li
267.962 125.156 li
268.165 125.108 li
268.374 125.102 li
268.58 125.141 li
268.773 125.221 li
276.377 129.366 li
269.026 133.945 li
268.838 134.037 li
268.635 134.087 li
268.426 134.094 li
268.22 134.057 li
268.027 133.979 li
267.853 133.862 li
267.709 133.711 li
267.598 133.533 li
267.527 133.337 li
267.498 133.13 li
267.513 132.921 li
267.571 132.72 li
267.669 132.536 li
267.804 132.376 li
267.969 132.248 li
cp
245.277 149.142 mo
245.289 148.655 li
245.325 148.145 li
245.384 147.637 li
245.466 147.131 li
245.571 146.627 li
245.697 146.126 li
245.844 145.627 li
246.013 145.133 li
246.201 144.641 li
246.409 144.154 li
246.637 143.67 li
246.883 143.191 li
247.148 142.715 li
247.431 142.245 li
247.731 141.778 li
248.048 141.317 li
248.382 140.861 li
248.732 140.409 li
249.098 139.963 li
249.479 139.523 li
249.876 139.088 li
250.287 138.658 li
250.713 138.235 li
251.156 137.814 li
252.072 137.002 li
253.044 136.212 li
254.066 135.45 li
255.133 134.718 li
256.245 134.017 li
257.398 133.348 li
258.589 132.713 li
259.817 132.114 li
261.077 131.553 li
262.368 131.031 li
263.683 130.551 li
264.356 130.325 li
265.031 130.112 li
265.712 129.909 li
266.398 129.718 li
267.089 129.538 li
267.785 129.371 li
268.485 129.215 li
269.189 129.072 li
269.897 128.941 li
270.608 128.823 li
271.322 128.718 li
272.039 128.626 li
272.758 128.547 li
273.479 128.483 li
274.202 128.432 li
274.343 128.425 li
274.444 130.422 li
274.313 130.429 li
274.332 130.428 li
273.629 130.477 li
273.648 130.476 li
272.946 130.539 li
272.965 130.537 li
272.265 130.613 li
272.284 130.611 li
271.586 130.7 li
271.604 130.698 li
270.908 130.8 li
270.926 130.797 li
270.233 130.912 li
270.251 130.909 li
269.561 131.037 li
269.579 131.033 li
268.893 131.173 li
268.91 131.169 li
268.228 131.321 li
268.245 131.317 li
267.566 131.481 li
267.583 131.476 li
266.909 131.651 li
266.926 131.647 li
266.257 131.833 li
266.274 131.828 li
265.61 132.026 li
265.626 132.021 li
264.968 132.229 li
264.984 132.224 li
264.332 132.443 li
264.356 132.434 li
263.07 132.904 li
263.102 132.891 li
261.843 133.4 li
261.875 133.387 li
260.646 133.934 li
260.678 133.919 li
259.482 134.503 li
259.514 134.486 li
258.354 135.104 li
258.386 135.087 li
257.265 135.737 li
257.297 135.718 li
256.217 136.399 li
256.249 136.378 li
255.213 137.088 li
255.245 137.065 li
254.257 137.803 li
254.289 137.777 li
253.35 138.54 li
253.383 138.512 li
252.496 139.299 li
252.521 139.276 li
252.098 139.677 li
252.115 139.661 li
251.706 140.068 li
251.723 140.05 li
251.329 140.462 li
251.346 140.444 li
250.966 140.86 li
250.983 140.841 li
250.619 141.262 li
250.636 141.242 li
250.287 141.667 li
250.304 141.646 li
249.971 142.075 li
249.988 142.053 li
249.671 142.486 li
249.688 142.462 li
249.387 142.899 li
249.404 142.874 li
249.121 143.314 li
249.137 143.287 li
248.871 143.731 li
248.887 143.703 li
248.639 144.149 li
248.655 144.119 li
248.424 144.569 li
248.439 144.537 li
248.227 144.989 li
248.241 144.956 li
248.048 145.41 li
248.062 145.375 li
247.887 145.831 li
247.9 145.795 li
247.744 146.252 li
247.756 146.214 li
247.62 146.674 li
247.631 146.634 li
247.515 147.095 li
247.525 147.053 li
247.429 147.515 li
247.437 147.472 li
247.362 147.935 li
247.368 147.891 li
247.314 148.354 li
247.318 148.308 li
247.285 148.772 li
247.288 148.726 li
247.277 149.19 li
245.277 149.142 li
f
276.367 101.786 mo
276.364 98.66 278.757 96.116 281.708 96.116 cv
284.659 96.116 287.052 98.66 287.052 101.797 cv
287.052 104.935 284.659 107.479 281.708 107.479 cv
278.757 107.479 276.364 104.935 276.367 101.786 cv
.0358587 .184054 .102358 0 cmyk
ef
275.872 101.481 mo
275.894 101.169 li
275.931 100.861 li
275.982 100.558 li
276.047 100.26 li
276.125 99.967 li
276.216 99.681 li
276.32 99.401 li
276.436 99.128 li
276.567 98.856 li
276.855 98.352 li
277.189 97.876 li
277.565 97.437 li
277.979 97.037 li
278.424 96.683 li
278.666 96.518 li
278.911 96.369 li
279.163 96.231 li
279.423 96.106 li
279.689 95.995 li
279.962 95.897 li
280.241 95.812 li
280.525 95.743 li
280.814 95.688 li
281.108 95.648 li
281.406 95.624 li
281.708 95.616 li
282.01 95.624 li
282.308 95.648 li
282.602 95.688 li
282.891 95.743 li
283.176 95.812 li
283.454 95.897 li
283.727 95.995 li
283.993 96.106 li
284.253 96.231 li
284.505 96.369 li
284.75 96.518 li
284.993 96.683 li
285.437 97.037 li
285.851 97.437 li
286.227 97.876 li
286.562 98.352 li
286.85 98.856 li
286.981 99.128 li
287.097 99.401 li
287.201 99.681 li
287.292 99.967 li
287.37 100.26 li
287.435 100.558 li
287.485 100.861 li
287.522 101.169 li
287.545 101.481 li
287.552 101.797 li
287.545 102.113 li
287.522 102.426 li
287.485 102.734 li
287.435 103.037 li
287.37 103.335 li
287.292 103.627 li
287.201 103.913 li
287.097 104.194 li
286.981 104.467 li
286.85 104.738 li
286.562 105.242 li
286.227 105.718 li
285.851 106.158 li
285.437 106.558 li
284.993 106.911 li
284.75 107.076 li
284.505 107.226 li
284.253 107.363 li
283.993 107.488 li
283.727 107.6 li
283.454 107.698 li
283.176 107.782 li
282.891 107.852 li
282.602 107.907 li
282.308 107.946 li
282.01 107.971 li
281.708 107.979 li
281.406 107.971 li
281.108 107.946 li
280.814 107.907 li
280.525 107.852 li
280.241 107.782 li
279.962 107.698 li
279.689 107.6 li
279.423 107.488 li
279.163 107.363 li
278.911 107.226 li
278.666 107.076 li
278.424 106.911 li
277.979 106.558 li
277.565 106.158 li
277.189 105.718 li
276.855 105.242 li
276.567 104.738 li
276.436 104.467 li
276.32 104.194 li
276.216 103.913 li
276.125 103.627 li
276.047 103.335 li
275.982 103.037 li
275.931 102.734 li
275.894 102.426 li
275.872 102.113 li
275.864 101.797 li
275.872 101.481 li
cp
276.864 101.809 mo
276.864 101.785 li
276.871 102.078 li
276.87 102.054 li
276.891 102.342 li
276.888 102.319 li
276.922 102.603 li
276.919 102.58 li
276.966 102.859 li
276.962 102.836 li
277.021 103.111 li
277.016 103.088 li
277.088 103.358 li
277.081 103.335 li
277.165 103.599 li
277.157 103.577 li
277.253 103.835 li
277.245 103.813 li
277.352 104.065 li
277.342 104.043 li
277.46 104.288 li
277.444 104.257 li
277.711 104.726 li
277.686 104.686 li
277.994 105.123 li
277.965 105.086 li
278.31 105.49 li
278.277 105.455 li
278.657 105.822 li
278.62 105.79 li
279.032 106.117 li
279.002 106.095 li
279.219 106.243 li
279.198 106.229 li
279.422 106.366 li
279.4 106.354 li
279.631 106.479 li
279.608 106.468 li
279.845 106.581 li
279.821 106.571 li
280.064 106.673 li
280.04 106.663 li
280.288 106.753 li
280.264 106.744 li
280.517 106.821 li
280.492 106.814 li
280.75 106.877 li
280.724 106.872 li
280.988 106.922 li
280.961 106.918 li
281.229 106.954 li
281.202 106.951 li
281.474 106.973 li
281.447 106.971 li
281.722 106.979 li
281.695 106.979 li
281.97 106.971 li
281.943 106.973 li
282.214 106.951 li
282.188 106.954 li
282.455 106.918 li
282.429 106.922 li
282.692 106.872 li
282.666 106.877 li
282.925 106.814 li
282.899 106.821 li
283.153 106.744 li
283.128 106.753 li
283.376 106.663 li
283.352 106.673 li
283.595 106.571 li
283.572 106.581 li
283.808 106.468 li
283.786 106.479 li
284.016 106.354 li
283.995 106.366 li
284.218 106.229 li
284.198 106.243 li
284.414 106.095 li
284.385 106.117 li
284.796 105.79 li
284.76 105.822 li
285.139 105.455 li
285.107 105.49 li
285.452 105.086 li
285.423 105.123 li
285.73 104.686 li
285.705 104.726 li
285.973 104.257 li
285.956 104.288 li
286.075 104.043 li
286.065 104.065 li
286.172 103.813 li
286.163 103.835 li
286.259 103.577 li
286.251 103.599 li
286.335 103.335 li
286.329 103.358 li
286.401 103.088 li
286.395 103.111 li
286.455 102.836 li
286.45 102.859 li
286.497 102.58 li
286.494 102.603 li
286.528 102.319 li
286.526 102.342 li
286.546 102.054 li
286.545 102.078 li
286.552 101.785 li
286.552 101.809 li
286.545 101.517 li
286.546 101.541 li
286.526 101.252 li
286.528 101.276 li
286.494 100.991 li
286.497 101.015 li
286.45 100.735 li
286.455 100.758 li
286.395 100.483 li
286.401 100.506 li
286.329 100.237 li
286.335 100.259 li
286.251 99.995 li
286.259 100.018 li
286.163 99.76 li
286.172 99.781 li
286.065 99.53 li
286.075 99.551 li
285.956 99.306 li
285.973 99.337 li
285.705 98.869 li
285.73 98.908 li
285.423 98.471 li
285.452 98.508 li
285.107 98.105 li
285.139 98.14 li
284.76 97.773 li
284.796 97.805 li
284.385 97.478 li
284.414 97.499 li
284.198 97.352 li
284.218 97.365 li
283.995 97.228 li
284.016 97.241 li
283.786 97.115 li
283.808 97.127 li
283.572 97.013 li
283.595 97.024 li
283.352 96.922 li
283.376 96.931 li
283.128 96.842 li
283.153 96.85 li
282.899 96.774 li
282.925 96.78 li
282.666 96.717 li
282.692 96.723 li
282.429 96.673 li
282.455 96.677 li
282.188 96.641 li
282.214 96.644 li
281.943 96.622 li
281.97 96.623 li
281.695 96.616 li
281.722 96.616 li
281.447 96.623 li
281.474 96.622 li
281.202 96.644 li
281.229 96.641 li
280.961 96.677 li
280.988 96.673 li
280.724 96.723 li
280.75 96.717 li
280.492 96.78 li
280.517 96.774 li
280.264 96.85 li
280.288 96.842 li
280.04 96.931 li
280.064 96.922 li
279.821 97.024 li
279.845 97.013 li
279.608 97.127 li
279.631 97.115 li
279.4 97.241 li
279.422 97.228 li
279.198 97.365 li
279.219 97.352 li
279.002 97.499 li
279.032 97.478 li
278.62 97.805 li
278.657 97.773 li
278.277 98.14 li
278.31 98.105 li
277.965 98.508 li
277.994 98.471 li
277.686 98.908 li
277.711 98.869 li
277.444 99.337 li
277.46 99.306 li
277.342 99.551 li
277.352 99.53 li
277.245 99.781 li
277.253 99.76 li
277.157 100.018 li
277.165 99.995 li
277.081 100.259 li
277.088 100.237 li
277.016 100.506 li
277.021 100.483 li
276.962 100.758 li
276.966 100.735 li
276.919 101.015 li
276.922 100.991 li
276.888 101.276 li
276.891 101.252 li
276.87 101.541 li
276.871 101.517 li
276.864 101.809 li
.750271 .679713 .654902 .901946 cmyk
f
240.007 102.026 mo
240.027 98.922 242.419 96.379 245.371 96.379 cv
248.322 96.379 250.714 98.922 250.714 102.06 cv
250.714 105.197 248.322 107.741 245.371 107.741 cv
242.419 107.741 240.027 105.197 240.007 102.026 cv
.0358587 .184054 .102358 0 cmyk
ef
239.534 101.744 mo
239.557 101.431 li
239.594 101.123 li
239.644 100.82 li
239.709 100.522 li
239.787 100.23 li
239.878 99.944 li
239.982 99.664 li
240.098 99.39 li
240.229 99.119 li
240.517 98.615 li
240.852 98.139 li
241.228 97.7 li
241.642 97.299 li
242.086 96.946 li
242.328 96.781 li
242.573 96.631 li
242.826 96.494 li
243.086 96.369 li
243.352 96.257 li
243.625 96.159 li
243.903 96.075 li
244.188 96.005 li
244.477 95.95 li
244.771 95.911 li
245.069 95.886 li
245.371 95.878 li
245.673 95.886 li
245.971 95.911 li
246.265 95.95 li
246.554 96.005 li
246.838 96.075 li
247.117 96.159 li
247.389 96.257 li
247.656 96.369 li
247.915 96.494 li
248.168 96.631 li
248.413 96.781 li
248.655 96.946 li
249.1 97.299 li
249.514 97.7 li
249.89 98.139 li
250.224 98.615 li
250.512 99.119 li
250.643 99.39 li
250.759 99.664 li
250.863 99.944 li
250.954 100.23 li
251.032 100.522 li
251.097 100.82 li
251.148 101.123 li
251.185 101.431 li
251.207 101.744 li
251.215 102.06 li
251.207 102.376 li
251.185 102.688 li
251.148 102.996 li
251.097 103.299 li
251.032 103.597 li
250.954 103.89 li
250.863 104.176 li
250.759 104.456 li
250.643 104.729 li
250.512 105.001 li
250.224 105.505 li
249.89 105.981 li
249.514 106.42 li
249.1 106.82 li
248.655 107.174 li
248.413 107.339 li
248.168 107.488 li
247.915 107.626 li
247.656 107.751 li
247.389 107.862 li
247.117 107.961 li
246.838 108.045 li
246.554 108.114 li
246.265 108.169 li
245.971 108.209 li
245.673 108.233 li
245.371 108.241 li
245.069 108.233 li
244.771 108.209 li
244.477 108.169 li
244.188 108.114 li
243.903 108.045 li
243.625 107.961 li
243.352 107.862 li
243.086 107.751 li
242.826 107.626 li
242.573 107.488 li
242.328 107.339 li
242.086 107.174 li
241.642 106.82 li
241.228 106.42 li
240.852 105.981 li
240.517 105.505 li
240.229 105.001 li
240.098 104.729 li
239.982 104.456 li
239.878 104.176 li
239.787 103.89 li
239.709 103.597 li
239.644 103.299 li
239.594 102.996 li
239.557 102.688 li
239.534 102.376 li
239.527 102.06 li
239.534 101.744 li
cp
240.527 102.072 mo
240.527 102.048 li
240.534 102.34 li
240.533 102.316 li
240.553 102.605 li
240.551 102.581 li
240.585 102.866 li
240.582 102.842 li
240.629 103.122 li
240.624 103.099 li
240.684 103.374 li
240.678 103.351 li
240.75 103.62 li
240.744 103.598 li
240.828 103.862 li
240.82 103.839 li
240.916 104.097 li
240.907 104.076 li
241.014 104.327 li
241.004 104.306 li
241.122 104.551 li
241.106 104.52 li
241.374 104.988 li
241.349 104.949 li
241.656 105.386 li
241.627 105.349 li
241.972 105.752 li
241.94 105.717 li
242.319 106.084 li
242.283 106.052 li
242.694 106.379 li
242.665 106.358 li
242.881 106.505 li
242.861 106.492 li
243.084 106.629 li
243.063 106.616 li
243.293 106.742 li
243.271 106.73 li
243.507 106.844 li
243.484 106.833 li
243.727 106.935 li
243.703 106.926 li
243.951 107.015 li
243.926 107.007 li
244.18 107.084 li
244.154 107.077 li
244.413 107.14 li
244.387 107.134 li
244.65 107.184 li
244.624 107.18 li
244.891 107.216 li
244.865 107.213 li
245.136 107.235 li
245.109 107.234 li
245.384 107.241 li
245.357 107.241 li
245.632 107.234 li
245.605 107.235 li
245.877 107.213 li
245.85 107.216 li
246.118 107.18 li
246.091 107.184 li
246.354 107.134 li
246.329 107.14 li
246.587 107.077 li
246.562 107.084 li
246.815 107.007 li
246.791 107.015 li
247.039 106.926 li
247.015 106.935 li
247.257 106.833 li
247.234 106.844 li
247.471 106.73 li
247.448 106.742 li
247.679 106.616 li
247.657 106.629 li
247.881 106.492 li
247.86 106.505 li
248.077 106.358 li
248.047 106.379 li
248.459 106.052 li
248.422 106.084 li
248.802 105.717 li
248.769 105.752 li
249.114 105.349 li
249.085 105.386 li
249.393 104.949 li
249.368 104.988 li
249.635 104.52 li
249.619 104.551 li
249.737 104.306 li
249.727 104.327 li
249.834 104.076 li
249.826 104.097 li
249.921 103.839 li
249.914 103.862 li
249.998 103.598 li
249.991 103.62 li
250.063 103.351 li
250.058 103.374 li
250.117 103.099 li
250.113 103.122 li
250.16 102.842 li
250.156 102.866 li
250.19 102.581 li
250.188 102.605 li
250.209 102.316 li
250.208 102.34 li
250.215 102.048 li
250.215 102.072 li
250.208 101.779 li
250.209 101.803 li
250.188 101.515 li
250.19 101.538 li
250.156 101.254 li
250.16 101.277 li
250.113 100.998 li
250.117 101.021 li
250.058 100.746 li
250.063 100.769 li
249.991 100.499 li
249.998 100.522 li
249.914 100.258 li
249.921 100.28 li
249.826 100.022 li
249.834 100.044 li
249.727 99.792 li
249.737 99.814 li
249.619 99.569 li
249.635 99.6 li
249.368 99.131 li
249.393 99.171 li
249.085 98.734 li
249.114 98.771 li
248.769 98.367 li
248.802 98.402 li
248.422 98.035 li
248.459 98.067 li
248.047 97.74 li
248.077 97.762 li
247.86 97.614 li
247.881 97.628 li
247.657 97.491 li
247.679 97.503 li
247.448 97.378 li
247.471 97.389 li
247.234 97.276 li
247.257 97.286 li
247.015 97.184 li
247.039 97.194 li
246.791 97.104 li
246.815 97.113 li
246.562 97.036 li
246.587 97.043 li
246.329 96.98 li
246.354 96.985 li
246.091 96.935 li
246.118 96.939 li
245.85 96.903 li
245.877 96.906 li
245.605 96.884 li
245.632 96.886 li
245.357 96.878 li
245.384 96.878 li
245.109 96.886 li
245.136 96.884 li
244.865 96.906 li
244.891 96.903 li
244.624 96.939 li
244.65 96.935 li
244.387 96.985 li
244.413 96.98 li
244.154 97.043 li
244.18 97.036 li
243.926 97.113 li
243.951 97.104 li
243.703 97.194 li
243.727 97.184 li
243.484 97.286 li
243.507 97.276 li
243.271 97.389 li
243.293 97.378 li
243.063 97.503 li
243.084 97.491 li
242.861 97.628 li
242.881 97.614 li
242.665 97.762 li
242.694 97.74 li
242.283 98.067 li
242.319 98.035 li
241.94 98.402 li
241.972 98.367 li
241.627 98.771 li
241.656 98.734 li
241.349 99.171 li
241.374 99.131 li
241.106 99.6 li
241.122 99.569 li
241.004 99.814 li
241.014 99.792 li
240.907 100.044 li
240.916 100.022 li
240.82 100.28 li
240.828 100.258 li
240.744 100.522 li
240.75 100.499 li
240.678 100.769 li
240.684 100.746 li
240.624 101.021 li
240.629 100.998 li
240.582 101.277 li
240.585 101.254 li
240.551 101.538 li
240.553 101.515 li
240.533 101.803 li
240.534 101.779 li
240.527 102.072 li
.750271 .679713 .654902 .901946 cmyk
f
238.447 129.386 mo
238.452 126.222 241.558 123.679 245.39 123.679 cv
249.221 123.679 252.327 126.222 252.327 129.36 cv
252.327 132.497 249.221 135.041 245.39 135.041 cv
241.558 135.041 238.452 132.497 238.447 129.386 cv
.0358587 .184054 .102358 0 cmyk
ef
237.962 129.037 mo
237.991 128.717 li
238.04 128.403 li
238.108 128.094 li
238.193 127.79 li
238.296 127.493 li
238.416 127.202 li
238.553 126.919 li
238.705 126.643 li
238.873 126.375 li
239.055 126.116 li
239.251 125.865 li
239.461 125.623 li
239.684 125.391 li
239.919 125.168 li
240.167 124.956 li
240.426 124.753 li
240.697 124.561 li
240.977 124.381 li
241.269 124.211 li
241.569 124.053 li
241.879 123.907 li
242.198 123.774 li
242.525 123.652 li
242.861 123.544 li
243.203 123.449 li
243.553 123.368 li
243.909 123.301 li
244.271 123.248 li
244.639 123.209 li
245.012 123.186 li
245.39 123.178 li
245.767 123.186 li
246.14 123.209 li
246.508 123.248 li
246.87 123.301 li
247.226 123.368 li
247.576 123.449 li
247.919 123.544 li
248.254 123.652 li
248.581 123.774 li
248.9 123.907 li
249.21 124.053 li
249.511 124.211 li
249.802 124.381 li
250.083 124.561 li
250.353 124.753 li
250.612 124.956 li
250.86 125.168 li
251.095 125.391 li
251.318 125.623 li
251.528 125.865 li
251.724 126.116 li
251.907 126.375 li
252.074 126.643 li
252.226 126.919 li
252.363 127.202 li
252.483 127.493 li
252.586 127.79 li
252.671 128.094 li
252.739 128.403 li
252.788 128.717 li
252.817 129.037 li
252.827 129.36 li
252.817 129.683 li
252.788 130.002 li
252.739 130.317 li
252.671 130.626 li
252.586 130.929 li
252.483 131.227 li
252.363 131.517 li
252.226 131.801 li
252.074 132.076 li
251.907 132.344 li
251.724 132.604 li
251.528 132.854 li
251.318 133.096 li
251.095 133.329 li
250.86 133.551 li
250.612 133.764 li
250.353 133.966 li
250.083 134.158 li
249.802 134.339 li
249.511 134.508 li
249.21 134.666 li
248.9 134.812 li
248.581 134.946 li
248.254 135.067 li
247.919 135.175 li
247.576 135.27 li
247.226 135.352 li
246.87 135.419 li
246.508 135.472 li
246.14 135.51 li
245.767 135.533 li
245.39 135.541 li
245.012 135.533 li
244.639 135.51 li
244.271 135.472 li
243.909 135.419 li
243.553 135.352 li
243.203 135.27 li
242.861 135.175 li
242.525 135.067 li
242.198 134.946 li
241.879 134.812 li
241.569 134.666 li
241.269 134.508 li
240.977 134.339 li
240.697 134.158 li
240.426 133.966 li
240.167 133.764 li
239.919 133.551 li
239.684 133.329 li
239.461 133.096 li
239.251 132.854 li
239.055 132.604 li
238.873 132.344 li
238.705 132.076 li
238.553 131.801 li
238.416 131.517 li
238.296 131.227 li
238.193 130.929 li
238.108 130.626 li
238.04 130.317 li
237.991 130.002 li
237.962 129.683 li
237.952 129.36 li
237.962 129.037 li
cp
238.952 129.375 mo
238.952 129.344 li
238.961 129.637 li
238.959 129.606 li
238.986 129.894 li
238.982 129.864 li
239.026 130.148 li
239.021 130.118 li
239.081 130.398 li
239.074 130.369 li
239.152 130.644 li
239.143 130.616 li
239.236 130.885 li
239.226 130.858 li
239.335 131.122 li
239.323 131.096 li
239.448 131.354 li
239.435 131.33 li
239.574 131.581 li
239.56 131.558 li
239.713 131.803 li
239.699 131.78 li
239.866 132.018 li
239.85 131.998 li
240.031 132.228 li
240.014 132.208 li
240.208 132.431 li
240.191 132.413 li
240.397 132.627 li
240.38 132.61 li
240.598 132.816 li
240.58 132.8 li
240.81 132.998 li
240.792 132.983 li
241.033 133.171 li
241.014 133.157 li
241.266 133.336 li
241.247 133.323 li
241.509 133.492 li
241.49 133.48 li
241.762 133.639 li
241.743 133.628 li
242.025 133.776 li
242.005 133.766 li
242.296 133.903 li
242.276 133.894 li
242.575 134.02 li
242.555 134.012 li
242.863 134.126 li
242.843 134.119 li
243.158 134.22 li
243.138 134.214 li
243.46 134.304 li
243.44 134.299 li
243.769 134.375 li
243.749 134.371 li
244.084 134.434 li
244.064 134.431 li
244.405 134.481 li
244.385 134.478 li
244.732 134.514 li
244.711 134.513 li
245.064 134.535 li
245.043 134.534 li
245.4 134.541 li
245.379 134.541 li
245.736 134.534 li
245.715 134.535 li
246.068 134.513 li
246.047 134.514 li
246.394 134.478 li
246.374 134.481 li
246.715 134.431 li
246.695 134.434 li
247.03 134.371 li
247.01 134.375 li
247.339 134.299 li
247.319 134.304 li
247.641 134.214 li
247.621 134.22 li
247.936 134.119 li
247.916 134.126 li
248.224 134.012 li
248.204 134.02 li
248.503 133.894 li
248.483 133.903 li
248.774 133.766 li
248.754 133.776 li
249.036 133.628 li
249.017 133.639 li
249.289 133.48 li
249.27 133.492 li
249.532 133.323 li
249.513 133.336 li
249.765 133.157 li
249.746 133.171 li
249.987 132.983 li
249.969 132.998 li
250.199 132.8 li
250.181 132.816 li
250.399 132.61 li
250.382 132.627 li
250.588 132.413 li
250.571 132.431 li
250.765 132.208 li
250.749 132.228 li
250.929 131.998 li
250.914 132.018 li
251.081 131.78 li
251.066 131.803 li
251.219 131.558 li
251.205 131.581 li
251.344 131.33 li
251.331 131.354 li
251.456 131.096 li
251.444 131.122 li
251.553 130.858 li
251.543 130.885 li
251.636 130.616 li
251.627 130.644 li
251.705 130.369 li
251.698 130.398 li
251.759 130.118 li
251.753 130.148 li
251.797 129.864 li
251.793 129.894 li
251.82 129.606 li
251.818 129.637 li
251.827 129.344 li
251.827 129.375 li
251.818 129.083 li
251.82 129.114 li
251.793 128.825 li
251.797 128.856 li
251.753 128.571 li
251.759 128.601 li
251.698 128.321 li
251.705 128.35 li
251.627 128.076 li
251.636 128.104 li
251.543 127.834 li
251.553 127.861 li
251.444 127.597 li
251.456 127.623 li
251.331 127.365 li
251.344 127.39 li
251.205 127.138 li
251.219 127.162 li
251.066 126.917 li
251.081 126.939 li
250.914 126.701 li
250.929 126.722 li
250.749 126.492 li
250.765 126.511 li
250.571 126.288 li
250.588 126.307 li
250.382 126.092 li
250.399 126.109 li
250.181 125.903 li
250.199 125.919 li
249.969 125.722 li
249.987 125.737 li
249.746 125.549 li
249.765 125.562 li
249.513 125.384 li
249.532 125.396 li
249.27 125.228 li
249.289 125.239 li
249.017 125.081 li
249.036 125.091 li
248.754 124.944 li
248.774 124.953 li
248.483 124.817 li
248.503 124.825 li
248.204 124.7 li
248.224 124.708 li
247.916 124.594 li
247.936 124.601 li
247.621 124.499 li
247.641 124.505 li
247.319 124.416 li
247.339 124.421 li
247.01 124.344 li
247.03 124.349 li
246.695 124.285 li
246.715 124.289 li
246.374 124.239 li
246.394 124.241 li
246.047 124.205 li
246.068 124.207 li
245.715 124.185 li
245.736 124.186 li
245.379 124.178 li
245.4 124.178 li
245.043 124.186 li
245.064 124.185 li
244.711 124.207 li
244.732 124.205 li
244.385 124.241 li
244.405 124.239 li
244.064 124.289 li
244.084 124.285 li
243.749 124.349 li
243.769 124.344 li
243.44 124.421 li
243.46 124.416 li
243.138 124.505 li
243.158 124.499 li
242.843 124.601 li
242.863 124.594 li
242.555 124.708 li
242.575 124.7 li
242.276 124.825 li
242.296 124.817 li
242.005 124.953 li
242.025 124.944 li
241.743 125.091 li
241.762 125.081 li
241.49 125.239 li
241.509 125.228 li
241.247 125.396 li
241.266 125.384 li
241.014 125.562 li
241.033 125.549 li
240.792 125.737 li
240.81 125.722 li
240.58 125.919 li
240.598 125.903 li
240.38 126.109 li
240.397 126.092 li
240.191 126.307 li
240.208 126.288 li
240.014 126.511 li
240.031 126.492 li
239.85 126.722 li
239.866 126.701 li
239.699 126.939 li
239.713 126.917 li
239.56 127.162 li
239.574 127.138 li
239.435 127.39 li
239.448 127.365 li
239.323 127.623 li
239.335 127.597 li
239.226 127.861 li
239.236 127.834 li
239.143 128.104 li
239.152 128.076 li
239.074 128.35 li
239.081 128.321 li
239.021 128.601 li
239.026 128.571 li
238.982 128.856 li
238.986 128.825 li
238.959 129.114 li
238.961 129.083 li
238.952 129.375 li
.750271 .679713 .654902 .901946 cmyk
f
244.39 135.041 mo
246.39 135.041 li
246.39 149.178 li
244.39 149.178 li
cp
f
248.052 116.959 mo
244.534 110.97 li
246.261 110.964 li
242.78 116.975 li
242.657 117.144 li
242.501 117.284 li
242.32 117.388 li
242.121 117.453 li
241.913 117.474 li
241.705 117.452 li
241.507 117.387 li
241.326 117.282 li
241.171 117.142 li
241.048 116.973 li
240.963 116.782 li
240.92 116.577 li
240.92 116.368 li
240.964 116.164 li
241.049 115.973 li
245.39 108.479 li
249.777 115.946 li
249.863 116.136 li
249.908 116.34 li
249.91 116.549 li
249.868 116.754 li
249.784 116.946 li
249.663 117.116 li
249.508 117.257 li
249.328 117.363 li
249.13 117.429 li
248.922 117.452 li
248.714 117.432 li
248.515 117.369 li
248.333 117.266 li
248.177 117.127 li
248.052 116.959 li
cp
244.44 124.432 mo
244.396 110.466 li
246.396 110.46 li
246.44 124.425 li
244.44 124.432 li
f
279.091 117.217 mo
282.591 111.217 li
280.863 111.217 li
284.363 117.217 li
284.487 117.386 li
284.643 117.525 li
284.824 117.629 li
285.023 117.692 li
285.231 117.713 li
285.439 117.69 li
285.638 117.625 li
285.818 117.52 li
285.973 117.379 li
286.095 117.209 li
286.179 117.018 li
286.222 116.813 li
286.221 116.604 li
286.177 116.4 li
286.091 116.209 li
281.727 108.729 li
277.363 116.209 li
277.277 116.4 li
277.233 116.604 li
277.232 116.813 li
277.274 117.018 li
277.359 117.209 li
277.481 117.379 li
277.636 117.52 li
277.816 117.625 li
278.015 117.69 li
278.222 117.713 li
278.43 117.692 li
278.63 117.629 li
278.811 117.525 li
278.967 117.386 li
279.091 117.217 li
cp
282.727 124.929 mo
282.727 110.713 li
280.727 110.713 li
280.727 124.929 li
282.727 124.929 li
f
105.329 101.266 mo
239.529 101.516 li
239.525 103.516 li
105.325 103.266 li
105.329 101.266 li
f
250.724 104.328 mo
276.374 104.078 li
276.355 102.079 li
250.705 102.329 li
250.724 104.328 li
f
152.068 198.683 mo
152.159 198.331 li
152.142 198.413 li
152.205 198.022 li
152.197 198.083 li
152.236 197.657 li
152.233 197.7 li
152.252 197.242 li
152.251 197.27 li
152.255 196.782 li
152.255 196.799 li
152.25 196.282 li
152.25 196.289 li
152.23 195.178 li
152.225 194.581 li
152.23 193.96 li
152.25 193.317 li
152.291 192.654 li
152.358 191.976 li
152.457 191.283 li
152.593 190.579 li
152.771 189.868 li
152.996 189.158 li
153.132 188.792 li
153.28 188.433 li
153.442 188.074 li
153.62 187.717 li
153.814 187.361 li
154.025 187.006 li
154.252 186.654 li
154.498 186.305 li
154.761 185.96 li
155.044 185.618 li
155.345 185.281 li
155.666 184.948 li
156.008 184.62 li
156.37 184.298 li
156.753 183.981 li
157.158 183.671 li
157.584 183.367 li
158.034 183.07 li
158.506 182.78 li
159.001 182.497 li
159.521 182.222 li
160.065 181.954 li
160.635 181.695 li
161.229 181.443 li
161.851 181.201 li
162.499 180.966 li
163.174 180.741 li
163.878 180.525 li
164.61 180.319 li
165.372 180.121 li
166.165 179.936 li
166.987 179.766 li
167.834 179.609 li
168.706 179.467 li
169.603 179.338 li
170.523 179.221 li
171.466 179.116 li
172.431 179.023 li
173.416 178.941 li
174.422 178.87 li
175.447 178.809 li
176.493 178.757 li
178.63 178.681 li
180.833 178.637 li
183.092 178.623 li
185.401 178.634 li
187.751 178.666 li
190.136 178.717 li
192.548 178.782 li
194.981 178.859 li
199.876 179.029 li
204.766 179.199 li
204.763 179.199 li
207.188 179.275 li
207.185 179.274 li
209.587 179.34 li
209.582 179.34 li
211.954 179.39 li
211.947 179.39 li
214.282 179.423 li
214.274 179.423 li
216.563 179.434 li
216.553 179.434 li
218.789 179.419 li
218.777 179.419 li
220.954 179.376 li
220.94 179.377 li
223.049 179.301 li
223.036 179.301 li
224.063 179.25 li
224.054 179.251 li
225.062 179.19 li
225.052 179.19 li
226.038 179.12 li
226.028 179.121 li
226.993 179.04 li
226.981 179.041 li
227.924 178.949 li
227.911 178.95 li
228.831 178.847 li
228.817 178.849 li
229.712 178.734 li
229.697 178.736 li
230.567 178.609 li
230.551 178.611 li
231.395 178.471 li
231.377 178.475 li
232.194 178.322 li
232.174 178.326 li
232.963 178.159 li
232.942 178.164 li
233.702 177.984 li
233.681 177.989 li
234.41 177.797 li
234.39 177.802 li
235.086 177.601 li
235.066 177.607 li
235.73 177.398 li
235.709 177.405 li
236.342 177.187 li
236.32 177.195 li
236.923 176.97 li
236.899 176.979 li
237.473 176.745 li
237.448 176.756 li
237.993 176.515 li
237.968 176.526 li
238.484 176.279 li
238.458 176.291 li
238.946 176.037 li
238.92 176.051 li
239.382 175.79 li
239.355 175.806 li
239.79 175.539 li
239.763 175.556 li
240.173 175.283 li
240.145 175.302 li
240.531 175.023 li
240.503 175.044 li
240.865 174.76 li
240.837 174.783 li
241.175 174.494 li
241.148 174.518 li
241.464 174.225 li
241.437 174.251 li
241.731 173.952 li
241.705 173.98 li
241.978 173.678 li
241.953 173.707 li
242.206 173.401 li
242.182 173.431 li
242.415 173.121 li
242.392 173.153 li
242.607 172.84 li
242.586 172.873 li
242.782 172.556 li
242.763 172.59 li
242.942 172.271 li
242.924 172.304 li
243.087 171.983 li
243.071 172.017 li
243.218 171.693 li
243.203 171.727 li
243.335 171.401 li
243.322 171.434 li
243.44 171.107 li
243.429 171.139 li
243.532 170.811 li
243.523 170.843 li
243.614 170.514 li
243.606 170.544 li
243.684 170.214 li
243.675 170.256 li
243.798 169.596 li
243.79 169.648 li
243.872 168.988 li
243.868 169.033 li
243.916 168.377 li
243.914 168.415 li
243.933 167.765 li
243.933 167.795 li
243.929 167.153 li
243.929 167.177 li
243.908 166.544 li
243.909 166.561 li
243.877 165.941 li
243.878 165.95 li
243.803 164.754 li
243.771 164.174 li
243.751 163.605 li
243.75 163.048 li
243.775 162.503 li
243.834 161.971 li
243.936 161.463 li
244.011 161.198 li
244.1 160.948 li
244.207 160.702 li
244.322 160.483 li
244.679 159.853 li
244.669 159.871 li
244.925 159.394 li
244.91 159.423 li
245.081 159.074 li
245.055 159.131 li
245.15 158.896 li
245.105 159.044 li
245.133 158.91 li
245.116 159.147 li
245.116 159.137 li
245.127 159.228 li
245.125 159.219 li
245.152 159.331 li
245.15 159.324 li
245.204 159.456 li
245.201 159.45 li
245.293 159.595 li
245.289 159.59 li
245.425 159.728 li
245.42 159.724 li
245.588 159.832 li
245.582 159.829 li
245.755 159.892 li
245.749 159.891 li
245.905 159.915 li
245.898 159.914 li
246.027 159.913 li
246.019 159.914 li
246.12 159.899 li
246.112 159.901 li
246.191 159.881 li
246.182 159.884 li
246.313 159.832 li
246.269 159.853 li
246.408 159.768 li
246.293 159.854 li
246.377 159.783 li
246.069 160.08 li
246.101 160.048 li
245.753 160.421 li
245.756 160.417 li
245.427 160.774 li
245.206 160.989 li
243.987 159.734 li
244.19 159.536 li
244.157 159.57 li
244.472 159.229 li
244.837 158.837 li
245.2 158.486 li
245.425 158.318 li
245.606 158.23 li
245.722 158.194 li
245.821 158.174 li
245.944 158.164 li
246.095 158.173 li
246.269 158.217 li
246.447 158.304 li
246.605 158.433 li
246.723 158.583 li
246.798 158.731 li
246.839 158.862 li
246.859 158.974 li
246.871 159.15 li
246.802 159.478 li
246.667 159.814 li
246.475 160.206 li
246.207 160.707 li
245.851 161.334 li
245.864 161.31 li
245.771 161.488 li
245.799 161.429 li
245.718 161.617 li
245.74 161.561 li
245.67 161.757 li
245.687 161.705 li
245.628 161.91 li
245.645 161.842 li
245.558 162.277 li
245.569 162.202 li
245.517 162.668 li
245.522 162.611 li
245.499 163.107 li
245.5 163.065 li
245.501 163.587 li
245.501 163.558 li
245.52 164.105 li
245.519 164.087 li
245.55 164.656 li
245.55 164.648 li
245.624 165.846 li
245.657 166.478 li
245.679 167.131 li
245.683 167.801 li
245.662 168.485 li
245.612 169.183 li
245.523 169.89 li
245.392 170.597 li
245.305 170.963 li
245.206 171.323 li
245.093 171.682 li
244.964 172.042 li
244.819 172.4 li
244.657 172.757 li
244.477 173.112 li
244.279 173.464 li
244.061 173.814 li
243.825 174.159 li
243.567 174.5 li
243.29 174.837 li
242.99 175.168 li
242.669 175.493 li
242.326 175.812 li
241.96 176.125 li
241.57 176.431 li
241.157 176.73 li
240.719 177.022 li
240.257 177.306 li
239.769 177.582 li
239.254 177.85 li
238.713 178.11 li
238.145 178.361 li
237.548 178.604 li
236.922 178.838 li
236.267 179.064 li
235.582 179.28 li
234.866 179.486 li
234.117 179.684 li
233.335 179.869 li
232.526 180.04 li
231.69 180.196 li
230.829 180.339 li
229.943 180.468 li
229.033 180.585 li
228.1 180.69 li
227.145 180.783 li
226.169 180.865 li
225.172 180.936 li
224.155 180.998 li
223.118 181.049 li
220.995 181.126 li
218.806 181.169 li
216.559 181.184 li
214.261 181.173 li
211.92 181.14 li
209.542 181.089 li
207.135 181.024 li
204.707 180.948 li
199.815 180.778 li
194.922 180.608 li
194.925 180.608 li
192.495 180.532 li
192.499 180.532 li
190.091 180.467 li
190.096 180.467 li
187.717 180.416 li
187.723 180.416 li
185.38 180.383 li
185.388 180.384 li
183.089 180.373 li
183.099 180.373 li
180.85 180.387 li
180.862 180.387 li
178.672 180.43 li
178.686 180.43 li
176.562 180.505 li
176.574 180.505 li
175.538 180.556 li
175.547 180.556 li
174.532 180.616 li
174.541 180.616 li
173.545 180.686 li
173.556 180.686 li
172.581 180.767 li
172.593 180.766 li
171.64 180.857 li
171.653 180.856 li
170.723 180.959 li
170.737 180.958 li
169.831 181.073 li
169.845 181.071 li
168.964 181.198 li
168.98 181.195 li
168.125 181.335 li
168.143 181.332 li
167.314 181.485 li
167.333 181.481 li
166.532 181.648 li
166.553 181.643 li
165.78 181.823 li
165.8 181.818 li
165.057 182.011 li
165.076 182.006 li
164.362 182.207 li
164.382 182.201 li
163.698 182.411 li
163.718 182.405 li
163.062 182.623 li
163.083 182.616 li
162.456 182.843 li
162.477 182.835 li
161.878 183.069 li
161.899 183.06 li
161.327 183.302 li
161.349 183.292 li
160.803 183.541 li
160.826 183.53 li
160.305 183.786 li
160.329 183.774 li
159.833 184.037 li
159.857 184.024 li
159.385 184.293 li
159.41 184.278 li
158.962 184.553 li
158.987 184.538 li
158.562 184.818 li
158.587 184.801 li
158.185 185.087 li
158.21 185.069 li
157.831 185.36 li
157.855 185.341 li
157.497 185.637 li
157.521 185.616 li
157.184 185.916 li
157.208 185.894 li
156.89 186.199 li
156.914 186.175 li
156.616 186.484 li
156.639 186.459 li
156.36 186.771 li
156.382 186.746 li
156.121 187.061 li
156.142 187.035 li
155.899 187.353 li
155.919 187.326 li
155.693 187.647 li
155.712 187.619 li
155.503 187.943 li
155.521 187.914 li
155.327 188.24 li
155.343 188.212 li
155.165 188.539 li
155.18 188.51 li
155.016 188.839 li
155.03 188.811 li
154.88 189.141 li
154.893 189.113 li
154.757 189.444 li
154.767 189.416 li
154.644 189.748 li
154.658 189.707 li
154.448 190.371 li
154.462 190.32 li
154.296 190.982 li
154.306 190.935 li
154.179 191.594 li
154.186 191.551 li
154.093 192.204 li
154.098 192.167 li
154.034 192.811 li
154.036 192.779 li
153.997 193.412 li
153.999 193.385 li
153.979 194.005 li
153.979 193.984 li
153.975 194.588 li
153.975 194.573 li
153.98 195.159 li
153.98 195.151 li
154 196.261 li
154.005 196.789 li
154.001 197.3 li
153.98 197.793 li
153.938 198.27 li
153.864 198.731 li
153.761 199.124 li
152.068 198.683 li
f
199.807 149.186 mo
219.487 149.186 li
219.487 162.026 li
199.807 162.026 li
199.807 149.186 li
.343969 .0834363 .125582 0 cmyk
ef
220.024 148.679 mo
220.024 162.466 li
199.252 162.466 li
199.252 148.679 li
220.024 148.679 li
199.752 149.679 mo
200.252 149.179 li
200.252 161.966 li
199.752 161.466 li
219.524 161.466 li
219.024 161.966 li
219.024 149.179 li
219.524 149.679 li
199.752 149.679 li
.750271 .679713 .654902 .901946 cmyk
f
236.407 149.186 mo
256.087 149.186 li
256.087 162.026 li
236.407 162.026 li
236.407 149.186 li
.343969 .0834363 .125582 0 cmyk
ef
256.615 148.679 mo
256.615 162.466 li
235.89 162.466 li
235.89 148.679 li
256.615 148.679 li
236.39 149.679 mo
236.89 149.179 li
236.89 161.966 li
236.39 161.466 li
256.115 161.466 li
255.615 161.966 li
255.615 149.179 li
256.115 149.679 li
236.39 149.679 li
.750271 .679713 .654902 .901946 cmyk
f
208.777 163.216 mo
210.527 163.216 li
210.527 181.287 li
208.777 181.287 li
cp
f
140.501 101.306 mo
140.79 101.404 li
140.71 101.381 li
141.032 101.456 li
140.972 101.444 li
141.323 101.502 li
141.281 101.496 li
141.659 101.538 li
141.622 101.535 li
142.454 101.592 li
142.438 101.591 li
143.363 101.638 li
144.371 101.707 li
144.911 101.76 li
145.464 101.832 li
146.032 101.926 li
146.611 102.048 li
147.199 102.201 li
147.794 102.39 li
148.393 102.62 li
148.992 102.896 li
149.588 103.22 li
150.179 103.598 li
150.76 104.032 li
151.329 104.527 li
151.876 105.078 li
152.151 105.388 li
152.416 105.708 li
152.676 106.045 li
152.93 106.4 li
153.179 106.773 li
153.421 107.164 li
153.657 107.573 li
153.887 108.002 li
154.11 108.451 li
154.326 108.919 li
154.535 109.408 li
154.737 109.917 li
154.931 110.448 li
155.118 111 li
155.296 111.575 li
155.467 112.172 li
155.629 112.792 li
155.783 113.438 li
155.926 114.109 li
156.057 114.802 li
156.174 115.516 li
156.279 116.249 li
156.373 117.002 li
156.455 117.773 li
156.526 118.562 li
156.587 119.369 li
156.638 120.192 li
156.68 121.033 li
156.737 122.754 li
156.762 124.533 li
156.759 126.363 li
156.729 128.237 li
156.678 130.149 li
156.608 132.095 li
156.522 134.069 li
156.318 138.072 li
156.091 142.116 li
156.091 142.115 li
155.869 146.153 li
155.869 146.149 li
155.768 148.152 li
155.768 148.148 li
155.678 150.132 li
155.678 150.126 li
155.601 152.086 li
155.602 152.078 li
155.543 154.007 li
155.543 153.998 li
155.505 155.89 li
155.505 155.879 li
155.491 157.729 li
155.491 157.716 li
155.504 159.517 li
155.503 159.502 li
155.547 161.249 li
155.547 161.23 li
155.624 162.917 li
155.623 162.901 li
155.676 163.72 li
155.675 163.708 li
155.737 164.509 li
155.736 164.497 li
155.808 165.28 li
155.807 165.266 li
155.89 166.031 li
155.888 166.016 li
155.982 166.761 li
155.98 166.744 li
156.085 167.469 li
156.082 167.451 li
156.199 168.155 li
156.196 168.136 li
156.325 168.818 li
156.32 168.797 li
156.462 169.456 li
156.457 169.433 li
156.611 170.069 li
156.606 170.047 li
156.772 170.658 li
156.766 170.638 li
156.94 171.224 li
156.933 171.202 li
157.117 171.764 li
157.109 171.741 li
157.3 172.279 li
157.292 172.256 li
157.491 172.769 li
157.481 172.745 li
157.688 173.236 li
157.678 173.211 li
157.892 173.679 li
157.88 173.654 li
158.101 174.1 li
158.088 174.074 li
158.316 174.498 li
158.302 174.473 li
158.536 174.875 li
158.521 174.849 li
158.761 175.231 li
158.744 175.205 li
158.991 175.567 li
158.972 175.541 li
159.225 175.884 li
159.205 175.857 li
159.462 176.181 li
159.441 176.155 li
159.703 176.46 li
159.681 176.434 li
159.948 176.722 li
159.924 176.697 li
160.196 176.966 li
160.17 176.942 li
160.447 177.195 li
160.42 177.171 li
160.7 177.408 li
160.673 177.385 li
160.956 177.606 li
160.928 177.585 li
161.215 177.79 li
161.186 177.77 li
161.476 177.96 li
161.447 177.941 li
161.739 178.117 li
161.71 178.1 li
162.005 178.262 li
161.961 178.239 li
162.557 178.524 li
162.499 178.499 li
163.102 178.734 li
163.046 178.714 li
163.653 178.905 li
163.6 178.89 li
164.208 179.039 li
164.159 179.029 li
164.768 179.142 li
164.723 179.135 li
165.329 179.216 li
165.289 179.211 li
165.889 179.264 li
165.855 179.261 li
166.448 179.29 li
166.418 179.289 li
167.001 179.297 li
166.977 179.297 li
167.548 179.29 li
167.523 179.291 li
168.619 179.245 li
168.606 179.246 li
169.633 179.187 li
170.582 179.148 li
171.04 179.147 li
171.479 179.165 li
171.904 179.211 li
172.266 179.282 li
171.926 180.999 li
171.603 180.935 li
171.68 180.947 li
171.322 180.909 li
171.378 180.913 li
170.986 180.896 li
171.025 180.897 li
170.604 180.898 li
170.637 180.897 li
169.712 180.936 li
169.726 180.935 li
168.699 180.994 li
167.583 181.04 li
166.988 181.047 li
166.378 181.039 li
165.754 181.009 li
165.117 180.953 li
164.47 180.867 li
163.815 180.745 li
163.155 180.583 li
162.493 180.375 li
161.833 180.117 li
161.185 179.808 li
160.853 179.626 li
160.531 179.433 li
160.212 179.224 li
159.897 178.999 li
159.585 178.757 li
159.278 178.498 li
158.976 178.221 li
158.679 177.927 li
158.389 177.615 li
158.104 177.284 li
157.825 176.935 li
157.554 176.566 li
157.289 176.177 li
157.032 175.769 li
156.782 175.341 li
156.54 174.891 li
156.307 174.42 li
156.081 173.928 li
155.864 173.414 li
155.656 172.877 li
155.456 172.317 li
155.266 171.734 li
155.085 171.127 li
154.914 170.494 li
154.754 169.835 li
154.607 169.154 li
154.474 168.452 li
154.354 167.729 li
154.247 166.988 li
154.151 166.227 li
154.066 165.448 li
153.993 164.651 li
153.93 163.838 li
153.876 163.005 li
153.798 161.302 li
153.754 159.538 li
153.741 157.722 li
153.755 155.86 li
153.793 153.958 li
153.853 152.021 li
153.929 150.055 li
154.02 148.066 li
154.122 146.059 li
154.344 142.019 li
154.57 137.977 li
154.57 137.981 li
154.774 133.983 li
154.774 133.99 li
154.859 132.023 li
154.859 132.029 li
154.929 130.09 li
154.928 130.098 li
154.98 128.195 li
154.979 128.204 li
155.009 126.341 li
155.009 126.353 li
155.012 124.537 li
155.012 124.551 li
154.988 122.787 li
154.988 122.804 li
154.931 121.099 li
154.932 121.113 li
154.891 120.285 li
154.891 120.295 li
154.841 119.483 li
154.842 119.495 li
154.782 118.701 li
154.783 118.714 li
154.712 117.938 li
154.714 117.952 li
154.633 117.195 li
154.635 117.21 li
154.544 116.473 li
154.546 116.489 li
154.443 115.773 li
154.446 115.791 li
154.331 115.096 li
154.335 115.115 li
154.208 114.442 li
154.213 114.464 li
154.074 113.814 li
154.078 113.834 li
153.929 113.208 li
153.933 113.226 li
153.776 112.624 li
153.781 112.643 li
153.616 112.065 li
153.622 112.084 li
153.45 111.53 li
153.456 111.55 li
153.277 111.018 li
153.284 111.039 li
153.097 110.529 li
153.106 110.551 li
152.913 110.063 li
152.922 110.085 li
152.722 109.619 li
152.732 109.641 li
152.527 109.196 li
152.538 109.219 li
152.326 108.793 li
152.338 108.817 li
152.121 108.412 li
152.134 108.436 li
151.912 108.05 li
151.926 108.074 li
151.699 107.707 li
151.715 107.731 li
151.482 107.383 li
151.499 107.407 li
151.262 107.076 li
151.28 107.101 li
151.039 106.788 li
151.058 106.812 li
150.813 106.515 li
150.834 106.539 li
150.585 106.259 li
150.617 106.294 li
150.109 105.782 li
150.156 105.826 li
149.636 105.374 li
149.687 105.415 li
149.157 105.019 li
149.209 105.055 li
148.672 104.711 li
148.725 104.743 li
148.181 104.447 li
148.234 104.473 li
147.687 104.222 li
147.739 104.244 li
147.19 104.033 li
147.239 104.05 li
146.691 103.875 li
146.736 103.888 li
146.191 103.746 li
146.231 103.756 li
145.691 103.643 li
145.727 103.649 li
145.193 103.561 li
145.224 103.565 li
144.7 103.498 li
144.725 103.501 li
144.211 103.45 li
144.238 103.452 li
143.252 103.385 li
143.267 103.386 li
142.341 103.339 li
141.482 103.279 li
141.064 103.232 li
140.661 103.167 li
140.27 103.075 li
139.941 102.964 li
140.501 101.306 li
f
166.702 101.196 mo
167.193 101.245 li
167.136 101.241 li
167.72 101.266 li
167.689 101.265 li
169.086 101.281 li
169.883 101.293 li
170.735 101.322 li
171.627 101.378 li
172.54 101.472 li
173.012 101.538 li
173.481 101.618 li
173.95 101.714 li
174.42 101.827 li
174.887 101.959 li
175.351 102.113 li
175.81 102.289 li
176.261 102.489 li
176.704 102.717 li
177.136 102.972 li
177.554 103.258 li
177.955 103.575 li
178.339 103.926 li
178.7 104.31 li
179.037 104.729 li
179.346 105.182 li
179.625 105.666 li
179.874 106.178 li
180.095 106.714 li
180.292 107.273 li
180.465 107.851 li
180.617 108.448 li
180.75 109.061 li
180.865 109.689 li
180.963 110.33 li
181.045 110.982 li
181.114 111.642 li
181.17 112.31 li
181.213 112.983 li
181.246 113.661 li
181.283 115.008 li
181.288 116.344 li
181.27 117.648 li
181.236 118.901 li
181.194 120.084 li
181.117 122.176 li
181.117 122.163 li
181.096 123.039 li
181.097 123.013 li
181.098 123.752 li
179.098 123.755 li
179.097 123.004 li
179.118 122.108 li
179.196 120.011 li
179.196 120.013 li
179.237 118.834 li
179.237 118.843 li
179.271 117.6 li
179.271 117.613 li
179.288 116.325 li
179.288 116.343 li
179.283 115.028 li
179.283 115.051 li
179.247 113.727 li
179.248 113.748 li
179.216 113.088 li
179.217 113.104 li
179.174 112.449 li
179.176 112.467 li
179.122 111.818 li
179.124 111.839 li
179.057 111.2 li
179.06 111.222 li
178.98 110.595 li
178.984 110.62 li
178.89 110.006 li
178.895 110.034 li
178.785 109.436 li
178.792 109.468 li
178.666 108.889 li
178.675 108.924 li
178.532 108.365 li
178.543 108.405 li
178.382 107.869 li
178.397 107.914 li
178.217 107.403 li
178.237 107.453 li
178.037 106.97 li
178.062 107.026 li
177.841 106.572 li
177.874 106.633 li
177.632 106.212 li
177.673 106.277 li
177.407 105.889 li
177.454 105.952 li
177.166 105.594 li
177.217 105.652 li
176.908 105.323 li
176.961 105.376 li
176.633 105.076 li
176.688 105.123 li
176.341 104.849 li
176.397 104.89 li
176.034 104.642 li
176.088 104.677 li
175.711 104.453 li
175.764 104.482 li
175.373 104.281 li
175.423 104.306 li
175.021 104.127 li
175.069 104.147 li
174.657 103.988 li
174.701 104.004 li
174.28 103.865 li
174.322 103.878 li
173.894 103.757 li
173.932 103.767 li
173.499 103.662 li
173.534 103.67 li
173.097 103.581 li
173.129 103.587 li
172.69 103.512 li
172.718 103.517 li
172.279 103.455 li
172.316 103.459 li
171.442 103.369 li
171.482 103.372 li
170.624 103.319 li
170.654 103.32 li
169.826 103.292 li
169.844 103.293 li
169.058 103.281 li
169.062 103.281 li
167.651 103.265 li
167.023 103.238 li
166.502 103.186 li
166.702 101.196 li
f
282.85 162.32 mo
282.76 162.558 li
282.779 162.501 li
282.701 162.753 li
282.715 162.703 li
282.648 162.968 li
282.658 162.923 li
282.601 163.201 li
282.611 163.146 li
282.523 163.737 li
282.529 163.682 li
282.471 164.319 li
282.473 164.282 li
282.436 164.96 li
282.437 164.938 li
282.414 165.655 li
282.414 165.645 li
282.379 167.187 li
282.352 168.014 li
282.308 168.875 li
282.239 169.765 li
282.137 170.682 li
281.995 171.614 li
281.904 172.095 li
281.8 172.576 li
281.683 173.06 li
281.549 173.547 li
281.399 174.036 li
281.231 174.528 li
281.044 175.02 li
280.838 175.514 li
280.611 176.007 li
280.363 176.501 li
280.092 176.993 li
279.797 177.483 li
279.478 177.971 li
279.134 178.456 li
278.764 178.937 li
278.367 179.415 li
277.943 179.887 li
277.49 180.354 li
277.007 180.816 li
276.495 181.271 li
275.952 181.719 li
275.378 182.16 li
274.771 182.594 li
274.131 183.02 li
273.457 183.437 li
272.749 183.845 li
272.004 184.245 li
271.224 184.635 li
270.406 185.015 li
269.549 185.385 li
268.654 185.745 li
267.718 186.094 li
266.741 186.431 li
265.723 186.758 li
264.661 187.072 li
263.556 187.375 li
262.406 187.664 li
261.21 187.941 li
259.967 188.205 li
258.675 188.457 li
257.338 188.697 li
255.955 188.925 li
254.53 189.142 li
253.062 189.348 li
251.555 189.543 li
250.01 189.728 li
248.427 189.902 li
246.81 190.067 li
245.159 190.222 li
243.476 190.368 li
241.763 190.505 li
240.02 190.632 li
236.459 190.863 li
232.803 191.061 li
229.066 191.229 li
225.261 191.368 li
221.403 191.482 li
217.505 191.571 li
213.58 191.639 li
209.642 191.686 li
205.704 191.715 li
201.781 191.728 li
197.884 191.726 li
194.029 191.712 li
190.228 191.689 li
182.847 191.618 li
175.847 191.53 li
163.429 191.367 li
163.433 191.367 li
158.23 191.323 li
158.236 191.323 li
155.934 191.318 li
155.94 191.318 li
153.856 191.325 li
153.848 189.325 li
155.936 189.318 li
158.244 189.323 li
163.453 189.367 li
175.873 189.53 li
182.871 189.618 li
182.868 189.618 li
190.246 189.689 li
190.243 189.689 li
194.041 189.712 li
194.038 189.712 li
197.89 189.726 li
197.887 189.726 li
201.78 189.728 li
201.776 189.728 li
205.696 189.715 li
205.692 189.715 li
209.625 189.686 li
209.62 189.686 li
213.554 189.639 li
213.549 189.639 li
217.468 189.572 li
217.462 189.572 li
221.354 189.483 li
221.348 189.483 li
225.199 189.369 li
225.192 189.37 li
228.988 189.23 li
228.98 189.231 li
232.708 189.063 li
232.699 189.063 li
236.346 188.866 li
236.335 188.867 li
239.886 188.637 li
239.878 188.638 li
241.613 188.51 li
241.607 188.511 li
243.313 188.374 li
243.307 188.375 li
244.982 188.23 li
244.975 188.231 li
246.619 188.076 li
246.611 188.077 li
248.22 187.913 li
248.212 187.914 li
249.786 187.74 li
249.777 187.741 li
251.313 187.558 li
251.303 187.559 li
252.8 187.365 li
252.79 187.366 li
254.246 187.162 li
254.235 187.164 li
255.648 186.949 li
255.636 186.951 li
257.005 186.725 li
256.992 186.727 li
258.315 186.49 li
258.3 186.493 li
259.576 186.244 li
259.559 186.247 li
260.786 185.987 li
260.768 185.991 li
261.945 185.718 li
261.927 185.723 li
263.058 185.438 li
263.038 185.443 li
264.124 185.146 li
264.103 185.152 li
265.144 184.843 li
265.123 184.85 li
266.12 184.53 li
266.099 184.538 li
267.053 184.207 li
267.031 184.216 li
267.943 183.875 li
267.92 183.884 li
268.792 183.534 li
268.768 183.544 li
269.6 183.185 li
269.575 183.196 li
270.368 182.827 li
270.343 182.839 li
271.098 182.462 li
271.072 182.476 li
271.789 182.09 li
271.763 182.105 li
272.445 181.712 li
272.418 181.728 li
273.064 181.328 li
273.037 181.345 li
273.649 180.938 li
273.622 180.957 li
274.201 180.543 li
274.173 180.564 li
274.72 180.144 li
274.692 180.166 li
275.208 179.74 li
275.18 179.764 li
275.665 179.333 li
275.638 179.358 li
276.093 178.922 li
276.067 178.949 li
276.494 178.508 li
276.468 178.536 li
276.867 178.092 li
276.842 178.121 li
277.214 177.673 li
277.19 177.703 li
277.537 177.252 li
277.514 177.283 li
277.836 176.829 li
277.815 176.861 li
278.113 176.405 li
278.093 176.437 li
278.368 175.979 li
278.349 176.011 li
278.602 175.552 li
278.585 175.584 li
278.817 175.124 li
278.802 175.156 li
279.014 174.695 li
279 174.727 li
279.193 174.265 li
279.18 174.296 li
279.355 173.835 li
279.344 173.866 li
279.501 173.405 li
279.491 173.435 li
279.633 172.974 li
279.624 173.003 li
279.75 172.545 li
279.743 172.572 li
279.854 172.115 li
279.848 172.142 li
279.946 171.687 li
279.941 171.712 li
280.026 171.26 li
280.02 171.294 li
280.157 170.399 li
280.152 170.44 li
280.25 169.561 li
280.246 169.594 li
280.313 168.734 li
280.311 168.76 li
280.354 167.921 li
280.353 167.94 li
280.38 167.126 li
280.38 167.137 li
280.415 165.595 li
280.439 164.862 li
280.477 164.153 li
280.54 163.471 li
280.636 162.825 li
280.704 162.498 li
280.783 162.185 li
280.878 161.879 li
280.979 161.612 li
282.85 162.32 li
f
179.29 135.033 mo
178.952 177.553 li
180.952 177.569 li
181.289 135.049 li
179.29 135.033 li
f
179.289 183.003 mo
181.289 183.003 li
181.289 191.507 li
179.289 191.507 li
cp
f
358.383 99.046 mo
364.39 102.534 li
364.387 100.807 li
358.393 104.318 li
358.225 104.442 li
358.086 104.598 li
357.983 104.78 li
357.92 104.979 li
357.899 105.187 li
357.922 105.395 li
357.988 105.594 li
358.094 105.774 li
358.235 105.928 li
358.404 106.05 li
358.596 106.134 li
358.801 106.176 li
359.01 106.175 li
359.214 106.13 li
359.404 106.044 li
366.877 101.666 li
359.388 97.316 li
359.197 97.231 li
358.993 97.187 li
358.784 97.186 li
358.579 97.229 li
358.388 97.314 li
358.219 97.436 li
358.078 97.591 li
357.973 97.772 li
357.908 97.971 li
357.886 98.178 li
357.907 98.386 li
357.971 98.585 li
358.075 98.767 li
358.215 98.922 li
358.383 99.046 li
cp
287.079 102.816 mo
364.894 102.67 li
364.89 100.67 li
287.075 100.816 li
287.079 102.816 li
f
%ADOBeginSubsetFont: IAAAAA+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.984 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+HelveticaNeue
Type42DictBegin
[<00010000000b000b000b000b63767420185400a7000000bc000000186670
676dfdfac9ac000000d400000428676c7966a10fa1f0000058b800000684
68656164f0109263000004fc000000366868656107e30f38000005340000
0024686d747863f38eb4000005580000236c6c6f636100380f24000028c4
000023706d6178700b0a052900004c34000000206e616d653dfb3c010000
4c5400000c1470726570960f2033000058680000004d6764697200000000
000000000000000014000014004b005a00000011ff3a000b0205000c02ca
0011b800002c4bb800095058b101018e59b801ff85b844001db900090003
5f5e2db800012c2020456944b001602db800022cb800012a212db800032c
2046b003254652582359208a208a49648a204620686164b0042546206861
64525823658a592f20b00053586920b000545821b040591b6920b0005458
21b0406559593a2db800042c2046b00425465258238a592046206a6164b0
042546206a61645258238a592ffd2db800052c4b20b0032650585158b080
441bb04044591b21212045b0c05058b0c0441b2159592db800062c202045
6944b001602020457d691844b001602db800072cb800062a2db800082c4b
20b003265358b0801bb040598a8a20b003265358b0022621b0c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b80003265358b0032545
b8014050582321b8014023211bb003254523212321591b2159442db80009
2c4b535845441b2121592db8000a2c4bb800095058b101018e59b801ff85
b800441db9000900035f5e2db8000b2c2020456944b001602db8000c2cb8
000b2a212db8000d2c2046b003254652582359208a208a49648a20462068
6164b004254620686164525823658a592f20b00053586920b000545821b0
40591b6920b000545821b0406559593a2db8000e2c2046b0042546525823
8a592046206a6164b0042546206a61645258238a592ffd2db8000f2c4b20
b0032650585158b080441bb04044591b21212045b0c05058b0c0441b2159
592db800102c2020456944b001602020457d691844b001602db800112cb8
00102a2db800122c4b20b003265358b0801bb040598a8a20b00326535823
21b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326
53582321b801408a8a1b8a235920b80003265358b0032545b80180505823
21b8018023211bb003254523212321591b2159442db800132c4b53584544
1b2121592db800142c4bb800095058b101018e59b801ff85b800441db900
0900035f5e2db800152c2020456944b001602db800162cb800152a212db8
00172c2046b003254652582359208a208a49648a204620686164b0042546
20686164525823658a592f20b00053586920b000545821b040591b6920b0
00545821b0406559593a2db800182c2046b00425465258238a592046206a
6164b0042546206a61645258238a592ffd2db800192c4b20b00326505851
58b080441bb04044591b21212045b0c05058b0c0441b2159592db8001a2c
2020456944b001602020457d691844b001602db8001b2cb8001a2a2db800
1c2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b
8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8001d2c4b535845441b2121592d0001000000010000c349f3935f0f
3cf5011103e800000000b643600000000000d59bef28fc49fe1f07c30435
0000000900020001000000000001000003b8ff2b001c08b1fc49fe8007c3
0001000000000000000000000000000008db01f400330000000001160000
01160000000000000116000001160000000000000103004a01aa006d022c
0022022c001903e8005c02760021011600690103002f0103fff701600018
02580030011600530185003201160053014dffef022c002a022c0057022c
0018022c001d022c001c022c0023022c0026022c0032022c0028022c0022
01160053011600530258002e025800300258002e022c00360320002a0288
fffa02ad004e02d2002b02c0004e0263004e023e004e02f7002b02d2004e
0103005202070016029b004e022c004e0367005002d2004d02f800260288
004e02f8002602ad004e02880025023e000202d2004a02630000039e000c
02630000028800020263001601030048014dffef010300000258003201f4
000000deffe002190024025100430219002402510024021900240128000c
023e0024022c004000de004500defff30207004500de004503550040022c
0040023e00240251004302510024014d003d01f4001f013b0009022c0040
01f4000e02f600110206000901f4000801e00016014d003000de004d014d
0018025800300288fffa0288fffa02d2002b0263004e02d2004d02f80026
02d2004a0219002402190024021900240219002402190024021900240219
00240219002402190024021900240219002400de003200deffe000deffda
00deffe5022c0040023e0024023e0024023e0024023e0024023e0024022c
0040022c0040022c0040022c0040022c002a01900038022c002e022c002f
022c002301f4004802580030022c0040032000180320001803de004000de
003200deffe502580030039efffa02f8002502e8001a0258003002580030
02580030022c0000022c0040021600230240000002ee004e026e001e0157
0000017a00190180001902e4001a03660024023e0022022c00440103004a
0258003002180000022c0003025800240288fff901cf003201cf004103e8
006f011600000288fffa0288fffa02f8002604320026037b002401f40000
03e8008201aa004201aa00420116005401160053025800300258005601f4
00080288000200a7ff5b022c000d01030032010300390206000c0206000c
022c002a0116004b0116005301aa0042047c00480288fffa0263004e0288
fffa0263004e0263004e010300460103ffed0103fff80103ffe902f80026
02f800260316003302f8002602d2004a02d2004a02d2004a00de004500de
ffda00deffc100deffc600deffd400de004200deffff00de000500deffd1
00de004c00deffda02e40019022c0019022c000000de0000034200310342
0024014d0042025800470288004e00de004d02c000080342002402580030
023e002402510043014d000e014d000402880025028800020263001601f4
001f01f4000801e000160000ff040000ff560000fefe0000fee50000feea
0000fef80000ff660000ff090000ff230000fef50000fefe0000ff290000
ff700000fea40000000000deffe000deffd802e700260323002602820024
0263001601e00016022300200263004e0263004e02ee00020226005402ce
002602880025010300520103fff7020700160451000a0464004e02ee0001
029b004e02da004e0263000102c8004e0288fffa02a3004e02ad004e0226
005402d900090263004e03f30007028e002502da004e02da004e029b004e
02bf000a0367005002d2004e02f8002602c8004e0288004e02d2002b023e
000202630001035d001e0263000002d0004e0292002f03f3004e0408004e
030a00020368004e028d004e02ce002603fc004e029f000002190024023d
0032021c004001a80042024d000302190024030f000001fa001e02360040
02360040020e00400233000a02b0004002300040023e0024022600400251
00430219002401cf000401f40008032000280206000902340040020b002e
03010040033f00400269000302c400400216004502190021030600400218
000302190024021900240236ffeb01a800420219002401f4001f00de0045
00f2001700defff3036f000a036c00400236ffeb020e00400236004001f4
00080226004002da00000245fffc03a7003f02d9003202f80026023e0024
029b00000212000e02da000a023500000226005401a800420263001601d7
00140402fffd031d0000028e002501fa001e02ac004e021c0040029e004e
02270040031800020266000302e3004e0246004003f7004e0301004002d2
002b021900240288000201f400080288000201f4000802750000020e0009
02a3002f0221002e0292002f020b002e0299004e022c00400103005203f3
fffd030f00000288fffa021900240288fffa02190024039efffa03660024
0263004e0219002402e700260223002003f3fffd030f0000028e002501fa
001e02da004e0236004002da004e0236004002f80026023e002402f80026
023e00240263000101f400080263000101f400080263000101f400080292
002f020b002e036d004e02c40040040b00520288fffa0219002402d2002b
021900240263004e0219002402d2004d022c00400288002501f4001f0263
001601e000160263001601e000160288fff90288fffa0288fff9039efff9
02d2002b02d2002b02d2002b02c0004e02c000080263004e0263004e0263
004e0263004e02f7002b02f7002b02f7002b02f7002b02d2004e02d2004e
0103ffe60103ffc10103ffd8010300520103002802070016029b004e022c
004e022c004e022c004e022c004e02d2004d02d2004d02f8002602f80026
02f8002602f8002502ad004e02ad004e02ad004e02880025028800250288
0025023e0002023e0002023e0002023e000202d2004a02d2004a02d2004a
02d2004a02d2004a02d2004a039e000c039e000c039e000c039e000c0288
000202880002021900240219002402190024036600240219002402190024
02190024025100240256002402190024021900240219002402190024023e
0024023e0024023e0024023e0024022c00400231ffef00deffd400deffc2
00deffc600de001100defff200deffd9020700450202004000de0041012e
004500de003801560045022c0040022c004002970012023e0024023e0024
023e0024023e0022014d003d014d002d014d003001f4001f01f4001f01f4
001f013b0009013b0009013b0009013b0009022c0040022c0040022c0040
022c0040022c0040022c004002f6001102f6001102f6001102f6001101f4
000801f400080302005201b600450241000c031f000c031f000c00deffe9
00de003200deffd900deffd900de005000deffc600deffe400deffc500de
ffc500deffd300defffe00deffd000de0042011600510116005301850032
0116004b00a7ff5a0342002e034200380342001b0342002b034200310342
004c0288fffc022c004301f4004802f8002c022c004002d2004d0206000c
0206000c0185003203e80064022c003601720022017200190172001f0172
00230172002b01720021017200220190002900fa00230190002900be0026
00be00070172002a017200220172003b0172001f0172001d017200190172
001f017200230172002b01720021017200220190002900fa002301900029
00be002600be0007034200230320001800de003000de00180116005300f1
005800f10058014cfffb028f00000116005302f2000b0361000b018a000b
0361000b034a000b0364000b00edffd00288fff902ad004e0228004e0263
004e0263001602d2004e02f8002601030052029b004e0265fff903670050
02d2004d023a002502f8002602cb004e0288004e0262002a023e00020288
0002030900260263ffff033b00470103fff702880002024b002401e5001f
022d004000ed0045020f003c024b00240234004301d1000e022a002401e5
001f01b10026022d00400216002400ed0045020200400206000c01e4000e
01a90026023e0024023a003c020100240235002401c40003020f003c02cc
002001c1fff60296004002cf002400edffe5020f003c023e0024020f003c
02cf002400de004000de0053022c0000022c001e0000feb500d0ffee0116
000e022c002301f4001c022c00280000fec00000fe3e0000fe4f0000fe6c
0000feb50000feb50000feb50000feb50000fe430000fed10000fe9e0000
fe4f0000fe870000fe870000fe4d0000febc0000fe6c0000fe840000fed1
0000fe580000fe580000fe4f0000fe4f0000fe3f0000fe4d0000fe3e0000
fe3f0000fe4d0000fe3e0000fe3e0000feb00000fe3e0000feb50000fe4f
0000fe510000fe9e000000000116000d022c004003410040014d00420341
0040014d0043014d0042020900280209002900fb00420193ffff0116000b
0116000b01f4000502d2000801f4000a022c004c022c004d022c004c01f4
003e024b001c024b001c02d2002b02d2001002370024029b0055029b002f
01f40020023e001c035e004a02ba003e02f300280104005901af00590116
005f0238001501f4001d00960028014d005e014d005f05620007029b0074
014300740219fffb020b005e020b005f02a2005e02a2005f014d002a0143
0074014d002a01620050008b000000000000000000000000000000000000
00000000000000000000000001f4000003e800000116000003410000014d
00000116000000a70000022c000000690000011600000000000000000000
0000000000000000002c0000000f0000014dfffc01ae0059014d002a014d
00030219003802190038029b000f02630055022c00230379002602a40024
0000feb70000feb70000feb70000feb70000fe6e0000fe730000fed30000
fe700000fe810000fe7a0000fe760000fe7f0000fe3a0000feaa0000fead
0000fe710000fe720000fe4d0000fe530000fe6a0000fe6a0000fe6a0000
fe6b0000fe6b0000fe4f00a7002f0136002f0462003603f30036029b004c
01160062022c00620341006203b10062029b001903b1001904c7001905dc
001903b10062029b001503b1001504c70015022c004c02d2002c02d20051
0341004a00de004001bc0040029b004002d2004001f4000502d2000503b0
0005048f000502d2004001f4000502d2000503b0000500de004301f4001d
022c001b0341004004d300390446002703d6001b03d5003402c300370173
002b045900370363003402c00029029b000f022c0024011600030116fff6
030a0027022c001b02d20053022c004002d20053022c004002d20053022c
004002d20053022c004002d20053022c0040029b000f022c0028029b000f
022c002803e8000803790024030a0030022c001e029b004c01f4003e030a
0027022c001d030a0027022c001d00deffe004c900290463003603e6001b
030a003002d2004c022c0040029b000f022c0028029b000f022c0028029b
0055022c0023029b0055022c00230116ffba00deff9d0116fffc00deffd6
030a0027022c001d030a0027022c001d02d20058014dffeb02d20058014d
002702d20053022c003e02d20053022c003e02d2004f022c0040029b000f
022c0028029b0055022c0023030a0027022c001d030a0027022c001d030a
0027022c001d030a0027022c001d029b001501f4000a014d0026029b000f
022c0028029b004a022c003a029b004a022c003a029b004a022c003a02d2
002c01f4001d02d20051022c001b02d20051022c001b02d20051022c001b
02d20051022c001b02d20051022c001b029b0055022c0023029b0055022c
0023029b0055022c0023029b0055022c0023029b0055022c002302630055
0116000e030a0030022c001e02d2004f022c004002d2004f022c004002d2
004f022c004002d2001c022c000d02d2004f022c00400116fff600deffd0
011600130116000b029b004c01f4003e029b004c01f4003e029b004c01f4
003e022c004c00de0043022c004c00deffd0022c004c00deffdb022c004c
00deffe10341004a034100400341004a034100400341004a0341004002d2
004c022c004002d2004c022c004002d2004c022c004002d2004c022c0040
030a0027022c001d030a0027022c001d030a0027022c001d030a0027022c
001d029b0055022c003a029b0055022c003a02d20058014d004302d20058
014d004002d20058014d002402d20058014d000c029b002f01f40020029b
002f01f40020029b002f01f40020029b002f01f40020029b002f01f40020
026300100116000b026300100116000b026300100116fff1026300100116
fff402d20053022c003e02d20053022c003e02d20053022c003e02d20053
022c003e02d20053022c003e029b001901f40005029b001901f4000503b0
001202d2000903b0001202d20009029b001501f40005029b001501f40005
029b001501f4000a0263001701f400190263001701f400190263001701f4
0019022c00400116000802d2000901f4000a0116000e029b0003022c0024
029b0003022c0024029b0003022c0024029b0003022c0024029b0003022c
0024029b0003022c0024029b0003022c0024029b0002022c0024029b0002
022c0024029b0002022c0024029b0002022c0024029b0003022c0024029b
0063022c0024029b0063022c0024029b0063022c0024029b0063022c0024
029b0063022c0024029b0063022c0024029b0063022c0024029b0063022c
00240116004f0116004d0116005b00de0041030a002f022c001b030a002f
022c001b030a002f022c001b030a002f022c001b030a002f022c001b030a
002f022c001b030a002f022c001b0379002602a400240379002602a40024
0379002602a400240379002602a400240379002602a4002402d2004a022c
004002d2004a022c0040035e004a02ba003e035e004a02ba003e035e004a
02ba003e035e004a02ba003e035e004a02ba003e029b000b01f40008029b
000b01f40008029b000b01f4000802de002f01fd0011010bffe3010b0005
0000fe950116005600b2004200b200420000fe870000fe8700b20042015d
000d0152000d0179004201800042010b0016010b00170186004201a70036
0190004201a700360300002e030afff8022c00740342004c03420074022c
ffeb02d2fff9022c00400341004001ec004c0223004b01c8002c0217002d
030a0027014d000f03cc001203cc00120000fca50000fd170000fd170000
fd150000fd1502ef002f022c00270318002602350025022c0012022c001d
025b0040025f001b022c00380250001b025d001e022c003f025d003f010b
004103b0002301b90042014d0041025b001d024e00180286001803a3001b
02a0000b0210000b02d6000e02530043024e004300d0004300d0004300de
005300bf003b014d005e014d001c00bf003b014d0004014d005e014d001c
00d0004300d00043014d000f014dfffc0116002001160020006ffff700a7
002200a7002100dd00210169000400fa0005011600260116002701240007
012400070124001201240012014d002a01240016012400160124001600fa
001000fa0003006f00210124001c01160004012400120124001201240007
01240007014d003b011600270000fe700000fe5b0000fe5b0000febf0000
febf0000fe300000fe300000fddc0000fe5b0000fe300000fe700000fe46
0000fe6b0000000001160000000000000000000000000000018500260185
00260358005e03cc00120116006f0458004c03cc001203790066036c000d
0116003e0116003e00000000000000000000000000000000000000000000
0000032a001c030a0030022c004c022c004c029b001502ee001703950008
03cd002b0342002c02d2002c029b002b026400370337000e029b0055022c
003a029b0055022c003a02630001030a00270254004f011a001101aa0008
02d20027015500110193ffff022c004c022c004c00de001500de0015022c
001e0263002c0263002c0263002c0263002c0263002c0263002c0263002c
0263002c02cf002c02c8002c03a0004203a5004203a5004203b0004203ce
003603b90036022c003a022c003a022c003a022c003a022c003a022c003a
034d0042034d004204210042042b004204140042041b00420263001d0263
001d0263001d0263001d0263001d0263001d0263001d0263001d03840042
038400420458004204620042044c00420452004204790036047900360116
005601160056011600200116001c0116001e0116001e0116001101160011
01c8004201c80042029b004202a60042028f00420296004202bd003602bd
003602630036026300360263003602630036026300360263003603bc0042
03bc0042048f0042049a004204830042048a00420263005a0263005a0263
005a0263005a0263005a0263005a0263005a0263005a034d0042042b0042
041b00420442003602f6003402f6003402f6003402f6003402f6003402f6
003402f6003402f6003403b2004203b200420486004204900042047a0042
0480004204a7003604a700360263002c0263002c022c003a022c003a0263
001d0263001d011600560116005602630036026300360263005a0263005a
02f6003402f600340263002c0263002c0263002c0263002c0263002c0263
002c0263002c0263002c03f0002c03ee002c04ac004204ce004204a30042
04b1004204cc003604ca00360263001d0263001d0263001d0263001d0263
001d0263001d0263001d0263001d049a0042049a0042056e004205780042
0561004205680042058f0036058f003602f6003402f6003402f6003402f6
003402f6003402f6003402f6003402f6003404c8004204c80042059c0042
05a60042058f00420596004205bd003605bd00360263002c0263002c0263
002c0263002c0263002c0263002c0263002c029b000d029b000d03200016
031d001703be000d0263001d0263001d0263001d0263001d0263001d0342
0016034000170355001603490017040000560116ffe80116ffe80116ffe7
0116ffed0116ffee0116ffe30116fff10116fff701980016019a00170263
005a0263005a0263005a0263005a02630053026300530263005a0263005a
029b0014029b00140344001603740017034d004202f6003402f6003402f6
003402f6003402f600340397001603ae001703b2001603be00170423002e
0248001202660088026d004f0171000d0155001102d2002c030a002700de
0010029b005502d2004f0000fea102990033022c001b03a3002c03860022
0342001e0342001e0342001c03f9006602df00430340003e02d20046029b
000f01f4000503b6006602d60043025e001b015d001202db000b02b3001b
02d20058022c002801860000025e004f01ea004f0312004f02590040029b
004c01f4003e0263001701f40019026d001501fd001c025e005c01b40047
038e001c02b90013038e001c02b9001303a3002302c8001b02de00540235
0047022c002802980054029800540412002102de0013029b0019024d0005
01f4001d0298003801f9002302e70013024000120116005c02a6001601fd
0012029b0019029b000f02d2002c01f4001d022cfff40263001000de001e
0155001102630010029b0055022c004c022c004c029b0055022c0023021e
001100deffed02d2005300d0001000d00010014d0019014d0019014d001c
014dfff50116006f014d001d014d001d02af002c02480012024800390116
006f0248001202ae0025024800390116006f0116006f030a003701fd001f
01fd001f029b0055022c003e02d2002c0341004a02dd004a02bd002202d2
002c02d2002c02d2002c01f4001d01f4001d01f4001d022c001b02d40017
034f0016030d00170186000d0304000c0266001802360022014d005d014d
005d014d005d014d005d0134001d0134001d019c0000019c0000019c0000
019c0000019c00000236000901f0000f02220029020e0040020e00400176
002d019e00090339001c0318001e028500170000fc49035c001102660010
00ea002500ef002500aa001200aa000500c8001500c700090175000b0179
000b012c00090124000901240009015c002500e6000300e6000303dd001c
04a20025047d0024047d0001009a0025021e001102b4000202b400060251
000a0214000c00e6000300e6000301f3001e01f3001e01f6001c01ad0005
0226001d0000fdc90000fe6a0000fe100000fe4f0000fe4f0000fd420000
fe790000ff4f0000fe510000fe340000fd170000fe5a0225001a02250011
01f4001901f4001203a5000b0219000d01e9000e027e0019031700180256
001901f6000a02e1000a02e1000a02e1000a03e8fff603e8fff603e801cf
03e801bb03e801cf03e801bb03e8fff503e8fff503e801cf03e801bb03e8
fff503e8fff503e80000006f002001160014011600120116000f00fa0003
0116001202d2002c030a003002d2002c022b00110299001402630010029b
000f025a001402d00026025e002602d2002c0341004002d70018031f001b
03fe001a029900330299003301c3001f01b5001d01c3001f01b5001d01c3
002901b6001d01c3002901b6001d016d0029016900290169002901690029
016d0029016d0004016900000169000001690000016d000401a7002901a7
002901a7002901a7002901a7002901380000018e002201ce001301d60005
02760018033a001401bd003e0000fe330000fe330000fe2c0000fe2c0000
fe2c0000fe2c0000fe0c0000fe0c0000feaa0225001101f4001204fe0027
0420001d020e0040020e0040020e0040018b001c018b001c01a100140277
0019018b0029018b0014018b0019018b00190172001c0172001c018b0015
009e002e0163002c024f002e018b002e018b001501630014018b0013018b
0015018b002900c50008018b002c01af001b024f002e0163000401b2003e
018b000601b20024025f00260306001502510019022c001c022c001d0264
001b0262001c026e001c03a1001e018b0005009e002e00ec002f018b002c
0163000401b2003e018b000601b2003b018b00050209002802d1000800de
004002220029037000160351001a025c000d026e000d016300060266000d
018e0006016400050165000600de0053014d0026028f003c0256000e017f
004602aa004a04460011022c001f01670019022c001f022c0018022c0019
022c0020022c0026020b0015022c0020022c002401db000401db000401db
0004018e001b02ac0023030e0023023f001b029f000e0311000502090008
0282001c03f3002c0296001403ad001701e5001b025f001b045f001403e6
ffec02a70027028100100307002b03c6001b0229001d0379fffe0369002b
0377001b0296001002f7fff10323002b023f000a0323002b03e7001802c5
001402610018029400080357002b02be001104e7002b0363001003ef0000
045b002b022d0024034e001c047700200267001502b1001b0225000002b7
001002ce001c0209001c03e200020261002f02e400070332001003320010
0311000502310025037f002602f90010028b001b028b001b02e1002b02c7
000a039a0005025d001c02e5002b0375000a030b0014030d001b02b00020
0349002b036b002b049b00140323002b039700230265002b0265002b04e3
002702d2ffff0359000602c50014035a002b0293001c0315001c02ce001c
02b3000c02ea001b0400002b0288fffa02d2004a029b000f015e00490208
001b01d00034023e0037024a002703b50024020000340220002a02d90025
03be00210251002501e4001d0496002401f1002a02000026036200240204
001f021b0027033e002401ee00260307002f03480023030d002102000025
0320002201d4001e0212001e01df00280234002101fd002401ff0022023e
001c01f1002b0315001601db002e02a0002a023d00180222002a01e9001e
02240029034d00240216007801f3007e0225004e022c0020027100660118
004101180041022c00250230006c0244fffa023200410282002a0288004a
0202004a01f6004a02ad003202ae004a00f7004e00f6ffc3025c004001f7
004a033c004c02ae004902bc00250217003602d400250262004a020e0017
02230002028b003c024400000333000202440000022f00020244001500c8
00460146003b00cd003200c600320286003003ec001a019c00100191000f
030300130282002a0282002a0202004a0202004a0202004a0202004a0202
004a0202004a0202004a01fd0017028b003c028b003c028b003c028b003c
022f0002022f0002022f0002020200400370fffa03be001a0288fffa0263
004e02f8002602fc003508b101060444011404c1010605990106057500e6
022c0017022c00200202004a02a3000201e4004602920026020e001700e6
004600e6ffe900efffc30389000a03810046029700010262004602a60046
022efffd028b00460244fffa022700410237004601e4004602a1000901fe
004602fb0000021b001b02a6004602a600460262004602a3000a03300046
02a7004602bc002502a70046022700460282002a02230002022efffd02c7
001e0244000002aa00460262002f0393004603b6004602c4000203240046
024600460292002603a4004602380000027b00000307003f02be0025029b
000001ee00460000ffad0000ff9c0000ff4f04be001604be003700000000
000000900000009000000090000000900000009000000090000000900000
009000000090000000900000009000000090000000900000009000000090
000000900000009000000090000000f8000000f80000011c000001500000
0150000001500000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c0000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c0000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c0000019c0000019c0000019c000003b0000003b0000003b0
000003b0000003b0000003b0000003b00000045400000454000004540000
04540000045400000454000004e4000004e4000004e4000004e400000540
00000540000005e4000005e4000005e4000005e40000063c0000063c0000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
000006840000068400000684000006840000068400000684000006840000
068400000684000006840000068400000684000006840000068400000684
00000684000006840001000008db0096000900680004000200000000001e
000002000428000300010000002601ce0001000000000000021200000001
000000000001000e02120001000000000002000702200001000000000003
002402270001000000000004000e024b0001000000000005000802590001
000000000006000d0261000100000000000700e4026e0001000000000009
00160352000100000000000a01330368000100000000000b0018049b0001
00000000000c002504b30001000000000100001604d80001000000000101
001504ee00010000000001020009050300010000000001030010050c0001
0000000001040012051c00010000000001050009052e0001000000000106
000e05370001000000000107001405450003000104040002000605590003
000104060002000e055f0003000104070002000c056d0003000104090000
042405790003000104090002000e099d00030001040b0002001009ab0003
0001040c0002000c09bb0003000104100002001009c70003000104110002
000a09d70003000104120002000609e10003000104130002001009e70003
000104140002000c09f70003000104160002000c0a030003000104190002
000e0a0f00030001041d0002000c0a1d000300010804000200060a290003
00010c01000200080a2f000300010c0a0002000c0a37436f707972696768
742028632920313938312c20313938322c20313938332c20313938392061
6e6420313939332c204c696e6f74797065204c69627261727920476d6248
206f722069747320616666696c6961746564204c696e6f747970652d4865
6c6c20636f6d70616e6965732e20416c6c20726967687473207265736572
7665642e0a0a546865206469676974616c6c7920656e636f646564206d61
6368696e65207265616461626c6520736f66747761726520666f72207072
6f647563696e672074686520547970656661636573206c6963656e736564
20746f20796f75206973206e6f77207468652070726f7065727479206f66
2048656964656c62657267657220447275636b6d61736368696e656e2041
4720616e6420697473206c6963656e736f72732c20616e64206d6179206e
6f7420626520726570726f64756365642c20757365642c20646973706c61
7965642c206d6f6469666965642c20646973636c6f736564206f72207472
616e7366657272656420776974686f757420746865206578707265737320
7772697474656e20617070726f76616c206f662048656964656c62657267
657220447275636b6d61736368696e656e2041472e0a0a436f7079726967
68742028632920313938382c20313939302c20313939332041646f626520
53797374656d7320496e636f72706f72617465642e20416c6c2052696768
74732052657365727665642e48656c766574696361204e65756552656775
6c617248656c766574696361204e6575653b2031332e30643265323b2032
3031372d30372d323448656c766574696361204e65756531332e30643265
3248656c7665746963614e6575652248656c766574696361204e65756522
20697320612074726164656d61726b206f662048656964656c6265726765
7220447275636b6d61736368696e656e2041472c207768696368206d6179
206265207265676973746572656420696e206365727461696e206a757269
7364696374696f6e732c206578636c757369766c79206c6963656e736564
207468726f756768204c696e6f74797065204c69627261727920476d6248
2c20612077686f6c6c79206f776e65642073756273696469617279206f66
2048656964656c62657267657220447275636b6d61736368696e656e2041
472e4c696e6f747970652044657369676e2053747564696f48656c766574
69636120284c6174696e20666f7220537769737329206861732074686520
6f626a65637469766520616e642066756e6374696f6e616c207374796c65
20776869636820776173206173736f636961746564207769746820537769
7373207479706f67726170687920696e2074686520313935307320616e64
2031393630732e204974206973207065726665637420666f7220696e7465
726e6174696f6e616c20636f72726573706f6e64656e63653a206e6f206f
726e616d656e742c206e6f20656d6f74696f6e2c206a75737420636c6561
722070726573656e746174696f6e206f6620696e666f726d6174696f6e2e
2048656c766574696361206973207374696c6c206f6e65206f6620746865
20626573742073656c6c696e672073616e732d736572696620666f6e7473
2e687474703a2f2f7777772e4c696e6f747970652e636f6d2f687474703a
2f2f7777772e6c696e6f747970652e636f6d2f666f6e7464657369676e65
727343686172616374657220416c7465726e617469766573416c7465726e
6174652050756e6374756174696f6e4c6967617475726573436f6d6d6f6e
204c69676174757265734f7074696f6e616c204c69676174757265734e6f
204368616e67654e756d6265722053706163696e6750726f706f7274696f
6e616c204e756d626572736a196e969ad4004f007200640069006e00e600
72004e006f0072006d0061006c0043006f00700079007200690067006800
74002000280063002900200031003900380031002c002000310039003800
32002c00200031003900380033002c002000310039003800390020006100
6e006400200031003900390033002c0020004c0069006e006f0074007900
7000650020004c00690062007200610072007900200047006d0062004800
20006f0072002000690074007300200061006600660069006c0069006100
74006500640020004c0069006e006f0074007900700065002d0048006500
6c006c00200063006f006d00700061006e006900650073002e0020004100
6c006c002000720069006700680074007300200072006500730065007200
7600650064002e000a000a00540068006500200064006900670069007400
61006c006c007900200065006e0063006f0064006500640020006d006100
6300680069006e00650020007200650061006400610062006c0065002000
73006f00660074007700610072006500200066006f007200200070007200
6f0064007500630069006e00670020007400680065002000540079007000
65006600610063006500730020006c006900630065006e00730065006400
200074006f00200079006f00750020006900730020006e006f0077002000
7400680065002000700072006f007000650072007400790020006f006600
2000480065006900640065006c0062006500720067006500720020004400
7200750063006b006d00610073006300680069006e0065006e0020004100
4700200061006e006400200069007400730020006c006900630065006e00
73006f00720073002c00200061006e00640020006d006100790020006e00
6f007400200062006500200072006500700072006f006400750063006500
64002c00200075007300650064002c00200064006900730070006c006100
7900650064002c0020006d006f006400690066006900650064002c002000
64006900730063006c006f0073006500640020006f007200200074007200
61006e007300660065007200720065006400200077006900740068006f00
750074002000740068006500200065007800700072006500730073002000
7700720069007400740065006e00200061007000700072006f0076006100
6c0020006f0066002000480065006900640065006c006200650072006700
65007200200044007200750063006b006d00610073006300680069006e00
65006e002000410047002e000a000a0043006f0070007900720069006700
680074002000280063002900200031003900380038002c00200031003900
390030002c00200031003900390033002000410064006f00620065002000
530079007300740065006d007300200049006e0063006f00720070006f00
720061007400650064002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e00520065006700
75006c00610072004e006f0072006d00610061006c0069004e006f007200
6d0061006c005200650067006f006c00610072006530ec30ae30e530e930
fcc77cbc18ccb40052006500670075006c006900650072004e006f007200
6d0061006c004e006f0072006d0061006c041e0431044b0447043d044b04
39004e006f0072006d0061006c5e3889c44f5306390627062f064a004e00
6f0072006d0061006c000000b800142b01ba0002000200162b01bf000300
3e0037002b001f00130000001c2b00bf0002004a0037002b001f00130000
001c2b00ba00040004001b2bb8000120457d691844b8000a2bb800002b00
000000>
[1669 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 144 18 <000100300000022801fa000b003fba0001000200032bb8000110b8000210
b80006d0b8000110b80008d000b800012fb800072fba0004000500032bb8
000410b80000d0b8000510b80009d0303101352315231533153335333501
4e44dada44da011fdbdb44dbdb44>IAAAAA+HelveticaNeue AddT42Char 
1 248 20 <0001003200ee0153013e0003000b00ba0000000100032b30311315213532
0121013e5050>IAAAAA+HelveticaNeue AddT42Char 
1 336 24 <000100570000016402c5000a0023ba0001000900032bb800011000b80001
2fb800002fba0007000800032bb800071030312111230e03231533110164
410726374424b802c528341e0b44fe04>IAAAAA+HelveticaNeue AddT42Char 
1 412 72 <00020024fff5020a021100300042015cb800142bbb00380003000d00182b
bb002a0003001700182bb8001710b80005d0b800052f4111000600380016
003800260038003600380046003800560038006600380076003800085d41
05008500380095003800025db8003810b900200003f4b9001f0003f4b800
1710b900300003f4b8001710b80031d0b800312fb8002a10b80044dc00b8
00014558b800252f1bb9002500083e59b800014558b800022f1bb9000200
043e59b800014558b800082f1bb9000800043e59ba000500020025111239
b8002510b9001c0002f441050089001c0099001c00025d41110008001c00
18001c0028001c0038001c0048001c0058001c0068001c0078001c00085d
b8002510b8001fdcb8000210b9002e0002f441110007002e0017002e0027
002e0037002e0047002e0057002e0067002e0077002e00085d4105008600
2e0096002e00025dba003000020025111239ba003100020025111239b800
3dd030312506232226350e0123222e0235343e02373e0335342e02232206
07233e0333321e0215111416333237270e0515141e0233323e0235020a16
272127235d36233f2e1b1e313f21233f301c152129143648035502243c4d
2c2345382207140b0f8a1034393a2e1d111b24142a3c2612020d252a2a25
102237272c3823120607070d19181c2212062939304229120a1f382dfef6
1e1c05c70c0b0709142520151d120817232912000000>IAAAAA+HelveticaNeue AddT42Char 
1 944 79 <00010040000001ec02ca001a0051ba001a000000032bb8001a10ba000e00
0b00032bb8000e10b8001a10b80002d0b8001a10b80018d0b800182f00b8
00002fb800012fb8000c2fba0013000800032bb8001310ba001900010000
111239303113113311343e0233321615113311342e0223220e0207231140
5513263927313855112a443317312d240a0202cafd360124233b2c183830
fea201542a45321c0a1521180111>IAAAAA+HelveticaNeue AddT42Char 
1 1108 85 <00010040000001ec021100170045ba0003000000032bb8000310ba000e00
0b00032bb8000e10b8000310b80015d0b800152fba001600000003111239
00b800012fb8000c2fba0013000800032bb8001310303113113311343e02
33321615113311342e022322072335405513263927313855112a44337335
020205fdfb0124233b2c183830fea201542a45321c5e5200>IAAAAA+HelveticaNeue AddT42Char 
1 1344 91 <000100090000011d02a00017005bba0001000200032bb8000110b8000210
b80006d0b8000310b80007d0b8000210b80017dcb8000dd0b8000110b800
14d000b800012fba000f000c00032bb8000f10ba0004000500032bb80004
10b80000d0b8000510b80015d030311335231523153311141e023b013523
222e0235113335b65558580e1d2f21412714190e056702059b9b4bfeb724
2c18094b030a120f01414b000000>IAAAAA+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070065b800142bb800082fb800002fb800
0810b80006d0b800062fb900020003f4b8000010b900040003f4b80009dc
00b800014558b800042f1bb90004000a3e59b800014558b800052f1bb900
0500043e59b8000410b900000002f4b8000510b900020002f43031012111
21131121110199fecd013333fe67029afd950299fd3902c7>IAAAAA+HelveticaNeue AddT42Char 
IAAAAA+HelveticaNeue /CharStrings get begin
/plus 18 def
/hyphen 20 def
/one 24 def
/a 72 def
/h 79 def
/n 85 def
/t 91 def
end
IAAAAA+HelveticaNeue /Encoding get
dup 43 /plus put
dup 45 /hyphen put
dup 49 /one put
dup 97 /a put
dup 104 /h put
dup 110 /n put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/ZWRLRA+HelveticaNeue /IAAAAA+HelveticaNeue findfont ct_VMDictPut
/ZWRLRA+HelveticaNeue*1 
[43{/.notdef}rp /plus /.notdef /hyphen 3{/.notdef}rp /one 47{/.notdef}rp /a 
6{/.notdef}rp /h 5{/.notdef}rp /n 5{/.notdef}rp /t 139{/.notdef}rp]
ZWRLRA+HelveticaNeue nf
ZWRLRA+HelveticaNeue*1 [-9.415 9.415 9.415 9.415 0 0 ]msf
180.99 124.573 mo
(+)sh
245.565 97.273 mo
(+)sh
281.903 124.923 mo
(+)sh
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
277.914 105.891 mo
(+)sh
ZWRLRA+HelveticaNeue*1 [7.55 0 0 -7.55 0 0 ]msf
241.99 132.291 mo
(1)sh
246.14 132.291 mo
(-)sh
ZWRLRA+HelveticaNeue*1 [9 0 0 -9 0 0 ]msf
273.027 159.216 mo
(t)sh
275.877 159.216 mo
(a)sh
280.727 159.216 mo
(n)sh
285.727 159.216 mo
(h)sh
gsave
213.487 159.626 mo
205.807 159.626 li
205.807 153.626 li
213.487 153.626 li
213.487 159.626 li
clp
205.807 153.626 mo
213.487 153.626 li
213.487 159.626 li
205.807 159.626 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[8.02133 0 0 6.32433 -138.637 138.539 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 39 
/M[47 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
n5og"JX3ROm(WY-H<=;='a,UVE1*KfXTOt]'c$3\"=R;jQ(RcJpSS+Y9HYJI!!Ed:MT=B9jo`Xt!!)Lj
"C?YFZ+959"0m/S=R[%++&W/ZRA9,N".;Xo(%<=K-rt>QTBrHXPtW;Cn,NS$>`-SSm,eDj9E5(j=SGnu
F/7s5!kDE8neD0hK]]B<UD4O7+9=l_m&0`Y!hUSXnc/\RWTN=EfDkpD=936Cj1kUroG%B_RJ<oNXoB..
+9=Ngj/;o"oDenDa5c=^!;BRs=BLXD^B0Hu=S3C/BB$#pB,)0S+96-9VZWi2+<^=W!.<eg!djtJpK.H.
X80L3\Zr^?^\=c0SU19;pD!]XO85mZUR@nSXo>HsNraStrY>/M!A]Z1VZNKUTD5>YN<+B"rZLq8!?\lJ
joX2Uf_FV'\H/-mrW)^q!G8n@^B;6cQ?2t+!ICR=^Ar*A=SNU3.AQdB!H:7#'`ggXqlKiSo+h$C!A^;E
VZCd*r#c#6KDVPH3qFHo!;QTq+5$JQ!K'&<!!,cmqrRl1o)SSg!G8n?^As)a=9*pM^At)$=SW[4.AQgC
!*f14!)i`s!JD3[(&8sQ18"KB!+,CB!*9#q!/'kcq#CF;f_jk3CA.].>l<^aWUg,d=93$ErP&B<B)Gd-
=9+0T^Ar*B=S`a5.AQjD!LYD0'`_J9XT10L(&B$R18"NC!L5G5+95aGVZ8dM+Su-?!$BkljoNLEo`+u,
r8mu2oDn_i!3uL;!3>Zm!3uL;!1*7Zq@s!urN-'\neD.mrN-'=r"]#BqB,d'rMKXTnfRptrMKX8oH<u1
!6>'#!4hY#!6>'#!/gCKqcEihrP&?5oN;)p!.k*`!3u/uq\9*XrN-'\nJ)%%rN-'foG.6G!.4[B!0-Lk
!*9&r!1!1!qZ$VbrT4*jnGiPorT4+#oDnek!.+RX!+tb'!+u/D!+,>#r"T3%r2frJnJ)$Qr2fr@p_EcC
r#bu5r20NMnK7fer20NCocX/4!)3=Q!$C_2!$D.$!"SZ%rE'),\c'8CJaZ\@^\tnID"Up/'`fDOrN-&t
mhPc&!&O9_r?)+hTDbYf<pq1/VZ8dN+T29@%bUaB!*oF%oDngO!%mjDrE'&crP&?;mTBD%!.+<?r=o<O
rN-'fmM5Z%!(Z\sru_@c+E@@X!0uspr20NgocX25!/ga;!6=L-r8muQo`4tn!+,T<!.jQ?r4`5_oiV2.
!$D-@!)i5"r2frsobIHK!%@cC!*8M1r20NqocX56!"Sqh!*o3tq#L?T!*o0sr`B/drP&?Cm9';$!.+<?
rY5EPrN-'pm1oQ$!(Z\srZD2\rhfdpTC!d!VZ9E`+T;?@MZ)Z;f^/\:joA*J!!68)?MqP<M!e@FB)KCD
D#@E3=993P+8i5@>OE4+.K$:J1\DIa+<W*1VZ:&k+941pVZ8dN+9DNC%fGGhC@D3)!!",=jo@"+!!68)
Jc*7_B'rb$D#D$JB(]7-'bsXEXT0g<'`^&fXT0gC'`oL#<rAiq1B&Ed+94J#VZ8LF+9DNC>l<^a+79+/
/c=`2+8#U8=BMBt^AtP+=9+0T^\1b4=BH:QK`/"QRI(^h>PtVq'`oL#KDh\JQ0f[o?Mp_n+9DNCWVtrZ
a6`j.C?F[Xk4AZR=T#o6O6p$LSc-;'\b'#((&Y06BC-E6Hi:&HU\#<$+T/,;C%rhE+96ceVZ<@]+TDH>
joBer!!&JdjoF'+!<7BC^Ar?B=9,o1^Ashs=9:u_Xo5@%54''bU]%:pHh8'Q9`1dg7-u)sTDbYfHh8H\
9`4#Q4m`4Lf_sq6RK*?]!<8,X^[5,'B)KCDHLt>>BDen!'`]]\XT1l`(&r"GVt(u.+941pVZ9E_+THie
k3W-K+8k7$9_8>bQMnPuZ0bWnM#>$Z=T<@=XT4dV'`_J9Xn*;-EW)d8Q0f[o?Mp_m+TI>tjoEHh!!$d3
k48TQV#A%.Sb6+\=9,W)^At)$=T='QXT3_8'`a[#XT4%G(&rpbVZ;)2+97]*VZ;A@+TJG?joOV5m/R.,
rT4*Zo)SfqrP&>gmT9I$r4`5Qo2u$\rN-'(mM,^Nr2fr_r"\uAs-<P\!+,(9!&FJM!(?E$s2Y*#!,Cp%
!$D.$!'ToRs/Z+5!.jWA!a&QcrP&?.nlYpQrN-&tmM,_7rN-'QneM1arMKWrmN;LDrMKXJnf[tCrT4)b
rW)Hg!.=b-!3,Mhs.oV.!.+*9!+,T<!+te(s+L?Q!(ZJm!$D-@!%IUVr>#?brMKWhmiVTYr20NMnf[t3
rT4)Rmf3=tr8mu$nc8]UrP&>RmoTRUrkAKKSafh^E;cm=5493dE;cm=HgqjNEW)d87.25uEW)d8Hgr6Y
MZ)Z;4o#*P!!%oTjoCk?!<7BD^ArTL=9)t3^B(TGnQ>f]rN-&in.bpPrN-*g+7U'G9E7cbVZ9E[+941q
VZE&2nK@j*rT4)Rn,NG1rT4.$%e0Q!?N%V=M""LHV#A%.B)Pj(=T9KAXT2Sp'``pcXT0g>(&o]\VZ:&m
+97&mVZ8LA+TDrMjoB/g!;ultWVtrZ+7K73=BMBu^At)"=9+Zc^ArTK=993PK`8(RK^fcWE;cm=8+./o
+<Z=9VZ;A>+96E[VZ9EZ+9DNCWW)#[WUTrgMZ)Z;9^_r_=BKYC^AqU3=9*pN^As)`=SZ&#'brq2XT0I7
'`_/1XT2Sn'`oL#7/a"`..\P]<rJor?LAp;!!#1\jo>n_!!6EfjoX]-C@2*$=9,/r^As)^=9*[G^ArTI
=T0$8K`8(R>P&X18,]Oi8*q&j+97&nVZ:'&+SQuY9`:jh9^Nu%!!'"tjoB/g!!#^kjoA*B!<-($?Fg'M
!+tq,!1*W!!P*%8=T2G%'`fDOriH/Lp([RHriH3r1[GkU+9<m_rhf`Op)j?Trhfdh3p\!g!!*S^roO2&
p&G)MroO76/c>\=!<$"'B">[k\SV(D!Gnh9^B(-BlWF*#"Y$4KXeR]J'`g+OriH3S.I.`I+9aNmVl-.J
q]Gt`+?GM]VZDE*lQH-+"WuCZk1D9]!!+[^roO6\+6rq)=93$=rkAJpB)Ym6?@&[O^B(T\kuds#rY5G_
RJs;hB.<fp!ZspnriH3h53Wg[+9=6_rhfd21B&Bt-qoX"VZE&Nkofm(!?]A]joKiOrW!!09Y(/b!QR@r
!;-?g=93u`rkAKEZ2D?;Uk.]2q@s$/U].@rURD%^!JFA6(&B$R<hKAh!M>YTVZDENk90U$!F4:VjoO,T
r8n$Z>iu+^=:'&7X1?!UX.>&Qj]M?o$PaC?E0$crUQ9b++6=74+:1GUNM!,@NI+t[jWO<u#sF0Vf]Lhs
RVE?!!;Z]j=:'&7X1?!UX.>&Qj]M9m#sN<hUTL;PHWqTR(&/mX6ue3YVk8rq?7>Xmllc''#sF0Vf]Lhs
RVE>o!.Y~>

%%EndBinary
grestore
np
grestore
153.914 198.643 mo
154.027 209.273 li
152.027 209.294 li
151.915 198.664 li
153.914 198.643 li
f
%ADOBeginSubsetFont: IAAAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZWRLRA+HelveticaNeue gcheck setglobal} if
1 1508 95 <00010009000001fd0205000b002700b800072fb8000a2fb800012fb80004
2fba000300010007111239ba000900010007111239303113033337173303
3723072723cbc26790906dc8b266817c6d0110fef0d6d60117eeb5b5>ZWRLRA+HelveticaNeue AddT42Char 
ZWRLRA+HelveticaNeue /CharStrings get begin
/x 95 def
end
ZWRLRA+HelveticaNeue /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZWRLRA+HelveticaNeue*1 
[43{/.notdef}rp /plus /.notdef /hyphen 3{/.notdef}rp /one 47{/.notdef}rp /a 
6{/.notdef}rp /h 5{/.notdef}rp /n 5{/.notdef}rp /t 3{/.notdef}rp /x 
135{/.notdef}rp]
ZWRLRA+HelveticaNeue nf
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
148.752 228.516 mo
(x)sh
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
148.752 228.516 mo
(x) false chp
.38753 lw
2 lc
2 lj
2 ml
[] 0 dsh
true sadj
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
156.002 231.166 mo
(t)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
156.002 231.166 mo
(t) false chp
.25025 lw
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: IAAAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZWRLRA+HelveticaNeue gcheck setglobal} if
1 1252 89 <0001003d0000014d0213000e0027ba0003000100032bb8000310b8000dd0
b8000d2f00b800012fba0009000800032bb8000910303113113335343e02
333526060723353d55142c4833455a1f020205fdfbe6324d361c5a023c3f
6d00>ZWRLRA+HelveticaNeue AddT42Char 
1 1596 97 <00010016000001ca02050009001b00ba0004000100032bb8000410ba0007
000800032bb80007103031371521352101352115211601b4feb6013cfe6e
012441414b01803a4b000000>ZWRLRA+HelveticaNeue AddT42Char 
ZWRLRA+HelveticaNeue /CharStrings get begin
/r 89 def
/z 97 def
end
ZWRLRA+HelveticaNeue /Encoding get
dup 114 /r put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZWRLRA+HelveticaNeue*1 
[43{/.notdef}rp /plus /.notdef /hyphen 3{/.notdef}rp /one 47{/.notdef}rp /a 
6{/.notdef}rp /h 5{/.notdef}rp /n 3{/.notdef}rp /r /.notdef /t 
3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]
ZWRLRA+HelveticaNeue nf
ZWRLRA+HelveticaNeue*1 [12 0 0 -12 0 0 ]msf
163.827 131.216 mo
(r)sh
ZWRLRA+HelveticaNeue*1 [7.8 0 0 -7.8 0 0 ]msf
167.827 133.566 mo
(t)sh
ZWRLRA+HelveticaNeue*1 [12 0 0 -12 0 0 ]msf
231.377 144.216 mo
(z)sh
ZWRLRA+HelveticaNeue*1 [7.8 0 0 -7.8 0 0 ]msf
237.127 146.566 mo
(t)sh
291.727 146.066 mo
284.887 146.066 li
284.887 136.226 li
291.727 136.226 li
291.727 146.066 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[7.04418 0 0 10.045 -59.4886 152.158 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 98 
/M[69 0 0 -98 0 98 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
l2V)SF,[H?VMnUpl2UkoN&0>k#WZRJU90`2:`&Bs!XjK1hZ*p@A9sfEOa9_;l2UkmH7e"S#Y^,Tf]L5R
C*3!Hq#CI+WBK,=#X<BhZbNAr=;gB(!Xt#DhZ*pBBRcbYQ@D^Ir;c6c!XjK1hZ*p@A9sfEOa9_;l2Ukm
H7e"S!DJ@TWS$@RWG3O?!!3Y04lQGC)0<.Z^B'9>m/R57ZbMI_!;c`t(MKQ<XT<nqm/R54U9/q)!!3pH
SbT)`H6MYU"!O55HLh.+!!47"f_FS0W@dK;""i0fWT4$[%!2$T!K8>o!!??<^OZ7_k5YMjB_/>,Ij4@^
"&Q,%FQ3?%$=rb+!I>p\!<)s#9rFn.irB)iMY#s2W@dT>")?u\RcFGL1UI%p"gaYJJ=<h@^B/p'!;-<p
1T%q%BB&sm/u&<H"eposFGlmiXT<M[oDf"HQE@8pirB*3Sc,GhSVD*&L&de@VZC`PoDf"GOf,*\irB*C
f_sq9fX[H>\_-c@!Lb,&!!GI*k2q'P!!%*>^B197%/U#*1P#>:!HS\E!!+m7rkAFtirB'mriH6f:^d.#
!A8KjXT<)Cp](=IJ,ZPM3UHh@!!$R/VZMuT$Msf(/TCQa!FuQ4!!+Ztrhf`TirB(:roO:&C(C+@!BlnJ
joL>Lp](=XWW)#[9_\VU!!Ndi^V?X%p&G+2N;C9pJ3On[!#\"6Zi7]?VBt:'"Ufg^Xd1U5!!*mcqQ1$F
3>W&'(HGcqriH0d!$^J("U]RRVi`S)!!*j]qPOU<2\l`#(,oEfrhfdZ+liV,%]SUQa$'+r!?\<;joLoE
"s4<T+&%(7roO7%/`cs8)5b0`=RlFm-(=A=!-@0#";dB+X\eWi!rr<FMt*nLB]B'q(6PMm:%A8b+boNb
!+b*i"s:nJk%XkroDenD\aee^MW=a?1UFib%.=/s1Re!O!K7oY!<)s$/u#J+$h"&r/rTD)!IkpG!!FmE
VhPQI!!+[+oqqh:(@_Cr!!GI;k.(uj!!,6np#Z:S+6*>&N5'#k!!+mEqS**<B-mBSkPt[6X^15m!A9<,
XTG5&,2iM'HDas4!!+[+qkjOoSQ[2q!!9.^I-Ub54h:FO!n_lPhuEa5m/[%a"q3^uB37AEh#IF-kPtep
3Da!X3?m8Z!%msGnGib#2bdIM2^-uW!'TNG"qF=AHtl>,h>i--JcLB&JcLB&JcLB&JcPWIJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&eGosc,r84sB7Pr0ZbLS&!"B;[/k&TBFFT4C
X_7\7aoDeV+Y?&U>&\eBSYp#>!!3W^4U>;-I%%%Ff]J(5!!%QC^Arf2!;ZZqFS;g:FNFL_E;$10E8(B]
!!&J]joCjl!!'A!^Apsi!9=+[U@t\h7EGN0SbAr]6h(00!!([FjoAZ.!!P/\B4lb$qnE+KquG"B"YNVW
?$)h<XT00Z!!Y#L>$>m9Vu3Fm(<HO[4_f@lRb7N"!$BGcpAb3"rP&?=_>jS1rN-'of)YXIo)Jc]rMKXd
_>jSgrT4+4gApF;!42X=!._od!2BFo!-I?'h#IGGrMKX7_>jSgrT4*KnGq#<!"Ae?!)191!"8_,!(Hec
a8c2Ir20N^_Z0ZHr8mua_Z0[$r4`4XblIJ<!'0tZ!$];\!&shR!$Ttpli7#Zr8mu2_Z0[Xr4h4ki;`jk
r2mg9!+c#*m/Y];!/g^:_>jS5rP&>kp]/J;!1*Sc!.Vic!0R8Y!N17\!!((<joDC&!;c`r%/dj?=Mk+=
$iI+,:t,L7!!!B(VZ9H/!!!N,joB/R!9F1\5Q&7r-,T]_3W,uZ,3f0^!!"tUVZ7mX!!#^jjo@"+!7(WF
F8Wei!!$^1XoAC>!!$R-Vo8Z8!!%oSk/%)uVZ"70N6hRr!!&>`XT3jf!!&/[VZ;%t!9aC_a8P-#WP\]9
%/dj?=QTV?!!!E)XT228!!!B(VZ9H]!7LoJ%fGGhC;U#O5Q&7r-2[ba!!#%WXT0Q_!!"tUVZ7mX!!#^j
jo@!X!;?HnF8Wei!!$^1Xk*R>!!$R-VnrE6MYuVr!9!nXVZ"70R_f%)QMmocMsUMq!!&/[VZ;Ig!!((<
joDse!6bEC%/dj?B>X]L$iR1.X^/gE!"/Y%!*[JEqZ$U+r8n!,_Z0Zmr4`4fe,]=FpAb1Gr2frO_Z0Zg
r20NHfDt7<!'U8B!'S4"!,)5EiW.p;!+#N)_>jR>r28o^ec5\tr8tir!1Nl$!1Ncb!^Cab"fB&@VLV@f
!!%rUXT4:V!!kSuJ!R42Q?5RC!!%cQVZE]MqZ$m\A9sB9SWRkYd/X0WrT4*jqZ$mqMQ+YYfZ0FcfDtdK
!"Ae?!,)92!Z>XWrkAK?VZ"71ZWP]W!"8_,!+#R(!Z,.:riH3qQMmodU/9qOn,NFqr20NurW!!8>+PYj
!M,AOVZE>_e,TIYr8n!,rW!!AI+\G\!SGHkjoO+Ln,VPM!&OPf#VuG\9Y\?KB-mKV!C*pi^Arf7!!"YL
XU$NZ!(F#lU0SuA!!,*SriH0BquGFN!%n,H#V?#V6`6iQ=s<hE!B6SKVZ:\d!!#1[jp4*M!*n[KfR,:L
!!,dGroO3LeGoS^r4`C8%"Q+!9_eYg-2kRYB@[%_?2Uf*!"/mNXeJ8[!!"5AXT2YX!!$4#VZd&-E2T6o
q#CC<rMKX!f`;!O!.=_,"TT%$k1Er7!!"VLjoBe[!!&Jd^BL&+R_OdipAb2^rP&=MjT+lP!/pfX"cEA=
Xa^`Q!!%rUXT00h!!%cPVZheTL8T>)pAb2JrMKW2n,VYP!4i'j"h=WDk,Ajb!!'S.jo?LU!!!H*^B8P9
^OYtW!)3@+!-A#;h>dN`r2g'7J$!hc!!#IdXT3%e!!!B(VZUIUVf;;/!(6^_!+a^^!"Sqh",a)?Re6X\
>lEdbMV%n/1]4uhZbM%i!;?Hn1]>&gVUtkK0)VgQU9/P0!!"YMXT4[>!!"VKVZNEeE:a,1/cDRIOk9X6
4oFFDf]JXp!!#1\joEH]!;?HnBD]FDVXjcf-2bO1!!$=%XT4[Y!!"5@XmH,T!!$4"VZ;kN!!"2?Vq:tL
I/E%+a7B92/c=c+!9!nXResi")=mh.1]4uf%+tU\Mu0UV(\7V,0)hsSXfVua!!%cNVZ7M(!!"VKVZ7(W
!!'S,jo?M"!;ZZq4oFFB%bUjZ^AqC,!!#^j^An\q!<'#$XfYFj!!#IcXT/a^!;iYo:%A8a6i<h^$K(p\
!;kmYC@V?)>l<^a%b^m_1]4ufVXXWdBDoRFZg%P[!!"YLXT4[W!!$='XT5*K!!"VKVZ;kL!!$4$VZ<:\
!9F1\4oFFBa70-0I/W1-f\$6)BDfLE1[tGFJGm4`RK2%A!+#N)!&!dA!-J1A!/oM1!*];u!%mjDr;Zh:
rMKXMf`2#"r8muBnGiQXrT4*jf`2#@rP&E&!!)Qi!2f_0!.``&!/pfX!/p=H!1*Sc!-HurrVuqQrMKXM
n,NHNrMKX7f`2#_rT4*jn,NI/rT4*Kk5b>Yq>gH.!,(g%!"Ae?!*JIc!"ADur2fs)nGiOsr2frqlMptd
!"8>tr20NunGiOrr20Nhkl:\jnc8UM!.=;:!"Sqh!,D3-oDek$o)JbHr4`4fnGiP_r4`4XlMq#h^V=j^
!!"YLXT1!D!!#IcXT0R2!!?'"X_@>,!%n,H!%m^@!(6[^!$UY."&5\kAFoj%4oFFB4nSgR!!$:%jo@"!
!!?uuk)/d2!,)5En,NH=r4hOt!%%TY!"AN#!+#N)rrDTi!-J.@lMpo/rN-&-o`+tqr29#a!-%k6lMpo.
rMKW&p]19n!.=_,n,NHWr9!;F!%n03!"SZ%!1Nl$!1NBW!42X=!0$4D!-A.S!5J.+!/pfX!/p=H!2BFo
!.X;7!,2>5oDelGrMKXMn,NHZrMKXAnc8Ld!+c&+oDem%rT4*jn,NI@rT4*ZlMppBrT<_Pr4`5EnGiP8
r4`5*r;c9d!42[>!0$OMr2fs)nGiP5r2frflMppZriH0MoDnfe!*\mm!$V9<!(6&P!1j+e!.+8;r8n!,
nGiP@r8mualMpq;roO3[o`+tJr4`4fquHEj!,)5E!#b,'!#baM!*Jmo!&"2O!&!dA!+#N)!#Ou%!#PU9
!)W=g!%n,H!%m^@!*];u!#Fo$!#GO2!)<+d!'U8B!'TiP!.=_,!$CP-!$D1%!bq]8pAb2+r4h_$!42X=
!2f&^!)3@+!%%:<!+#N)n,NH_rN-'cmK!4d!(Hjg!$_(9!*];un,NHZrMKXXlMpoPrMKW=o`+u>r9!JK
!8.84!6=m8o)JbqrT4)3o`+u\rP&?$nGiP8r4`56lMpp8rkAH>oDelLrN-'XnGiP5riH7(X\e<`!-J4B
!2B)c!/CHM!/C"D!$V9<!);bZ!-%q8!1i`^!4i'j!4hk)q>^LIr8muolMppRroO45oDng(!,(g%!-A(Q
!#b)&!42[>!.a\ArN-+&?1@mpB`+t4([D&$UAh7pFS#S2VZ9oj!!$R-VZ7Lu!!&ShVZ:]5!;Z]njoBf!
!!%oSjo?Lh!!([NjoCkC!!"hQ^Ap([!!'A(^As_g!!!o8^Apt#!!"YLXT1!D!!&blXT4:F!!!i6XT1f_
!!"VKVZ8==!!&SgVZ;JE!;?Hn(B(-26hLEZ4oFFB4n/LPf_sq4\a'4q+8t=%>kJ'sBDfO7!!"hQ^B%F:
li7#ZrP&=Mo`+ttr2oJh!&"2O!)Vt]!(Hjg!#P;.!*];uoDnjj!%n,H!);bZ!(6^_!#G5-!.=_,nGiPP
r8muolMpoirT4)%o`+u\rP&E&!!)Tj!-A(Q!"A](!^D2Do`+uBrkAH>oDelLrN-'XnGiQ&r2fr,q>^RW
F:7aA!-J4B!2B2frVuqQrMKXMnGiQ"r20N%q>^RUE!l7<!-%q8!1i`^!4i'j!4hV"!/g^:!"Si*!_f$m
o`+u\roO45oDng(!,(g%!42X=!0$^R!iE^Mr;ZjSZgb^0VY^AkXT2Ys!!&blXT3kH!!8Ig(]==6/c_X8
XT4[a!;r_p>4DRmSc,GdHMIOBOf&un!!+[Bn>?8KqZ-QV!.=;:!8.84!3,krrW!#?jraO%!Bo*)joEI"
!!"hQ^ApLh!!"hQ^Apt(!!4I]Zhse'=RX!)VYgDo0)VgO3V!.M0)VgO7JZuc,-@U;!!#jaXT4[b!!"VK
VZ8[H!!"VKVZ9*\!!4=ASbrHf:%+t[Oo,1Z4oFFB9`+nb!!#1[joAZ_!!4b7f_b^LC@C9ba8>o;BDfLE
%.XAuJGd.^%/Kr*F2)em!;m6*=T,u7-2\2J!!$=&XT/b"!!%-=XT/b*!!6i9B_h`,$NO$%XT0RC$i0i'
>5Y8u$M"/sE;ZU6$Mj`(A>`u7!;m0(:&Usk+USSU$N0u(!!%EEjo>n^!!&Jcjo>nf!!8&?MY[>N%KL8B
jo@"2%f-/*Rf0u$VXXZa^As5g!!9LA-1q6<JH!:`Zh+4tMuBaXQLOtQXT3kH!!8ms,4tp9FT/BBU@\Ec
LAe"MOmrGLVZ;&=!!8^h+oD?:!!%!;VZ<:[!!'S.joEHl!;tsZWVHMqf]FdY!!&JejoF'+!;sS3F7K;2
)>q5L5PtKa!!"giVXsigZi7]>JFij>XT3&*!!!i5XT1BX!!4dTQLk.WUAh7pFS#S2VZ:8u!!!f4VZ8[P
!!4aMOn8VRSc5MeE:a/.joC;0!!",=joA*O!!5=Ga7K?3f`("5Re6X\1]4uf5PtNU!!"hQ^\Ij2R_MPh
!!!o8^AqC/!!"YLXT1BP!!"YLXn_quMlfG@!!!i6XT22j!!"VKVZ8[H!!"VKVtg;oL8RE3!!!f5VZ9Ha
!!#1[joA*G!!#1[k4nuY\`R/i!!",>joT8t!;?HnBDfLE%.XAu5Q/=sVYU8o5JOPs!!#^k^AoSQ!!$=&
XT/b"!!#%XXT4[`!!50_UA"Ze!!#IdXT0R<!!$4#VZ7(p!!"tVVZ;kU!!5*WSb)m^6iEn_+nYg8I/N+,
%e9T"9`=)Ra8,c:9]c?-oDekrrT4)3o`+u\rP&?0nGiPFrP&>kq>^So^GGK^!.b'`!42:t!/pfX!1*-T
!&"8Q!NgkJ!!8Ig0(],DFT/BBU@\EcLAe"MOmrDO/cDRIHMRUCOf'f'!!%!;VZ<:[!!'S.joEHs!;ZZq
4oOLCWVQSra6#PW!!&JejoF'+!;sS3F792.^Ar?P!!75VJF`a@Zi7]>N:[,KXT>P;n,WEh!,260!be]X
o)JcbriH0MoDnfe!+bR!rMKX+qZ$\.Vf;5-!1j+e!.+MBq>gHU!/g7GrT4*;qZ$\Tk*klA!8.;5!3,Yl
s!@TX!'frQ!,);G!0$gU")#BG%.jN")?%;M=S;ap,5ePC3Ud"K?2gr+J,B9K?*0D#oDek-rN-&rp&P+9
r20NRn,NGlrhfaBqu?h&Vi_>c!;?Hn(B(-2:%eSe/c=`29^i#^I/`7.WVc_uI-/HZoDek5rT4)pp&P+d
r4`4?mf3?brkAFN"onWLR_P^.o)JbarP&=Yp&P+]r2fr,mf3?RriHDA!!"4$Xd0@d!!#IdXT0R=!<5Fa
VZ7(s!;c`rOoD6`('"=XL8U.@o)JbXrMKW=p&P+tr8mthmf3@.roOG-!!"U]k/Ru'!!$:&jo@",!<4kR
^B/oc!:Tsh%%@11!2fb1!ItUL!!%*=^\%U,0)_mPFRB,0$]G"d!1*Vd!H\_?!!$^2XnMhq!<4YLVZ:](
!!*F]rhfaYrhfd9$M"/sAGrG!!<54\joCk<!!*S?roO4$roO6M%e9T"MZ2`<k48QT=L5>HlMq,RN3g:*
J0j[b!2fb1!0$LL"&P_d?0_Ip3Idd*U3%UR!;ZZqQN!udJ+EXB9q@hYlMq,JHC^t)E$=]N!0R8Y!.+5:
")?K@I-Ub99W?\,fU;dln,NI/roO3[_>jQErP&>7h>lX;!"8b-!)UN4!"/\&!);\Xg&M*_rT4)p_>jR#
rP&=YoDm2;!'1"[!$]8[!&skS![.OD_uKd2rT4)3`;ol;!-A+R_#OIKrN4BGo)Jc$rMRI3!/ga;g&U=:
!2fb1!0$[Q!K9^r!!&>aXT3kG!!.R<n,V8E!0R8Y!.+D?!I@,W!!((=joDCU!!0'(qZ,%ErP&>7q#CJ/
^LtajrN-&rqZ$g#!*u^4!!(:ErMKWiq#CJ"Vcq:ErT4/r!!)lr!ds-Xbl@_irP&=Yq>^U+^V:Z5!<)ru
,5nVD,5M9A$a$NIbl@_erMKW=q>^U)Vl(<b!:p0j/cFf3/c#GL%d)mqbl@`;rP/..!cu+hjT+KE!(Hjg
q#CJ0X^0-N!(6^_q#CJ,VcrQih#IF[rT<nU!fH,fbQ%WarkAH>q>^RQ^S^i-dJs8\riH0pq>^RLXd7-1
!+c),!1iue!rspNOim_)MZ2`<f_PRL4m'f.!!$.#^As`"!!=+R^GF%5!)WZs!/p^S!uJ)A0%L$r!!#am
VZ;JK!!="7V_-'l!,DMq!4ht,"!?[f4lHD,!!">E^At//!!=OR^J)cM!$_EE!1*N_"!XJA7I's3!!"2A
VZ;kW!!=C8VaJT,!%n34!6>!;""i0f>kS0I!!$[2^AoSZ!!??<^KAPW!+#T+!$_CB"Al5&:]ST;!*]B"
!$V=A"&5\k9um;8I-(Lmjt6Q4")?u\C<$;SJH!:eJ;ghLZSTr.pAb28riH?GJ"j'>0#dkkE;la=E-e(Q
SLrRrli7$SroOBQWS$@c4iIC*-%Ml-VMmb#!8mh],'9-QQ@Cp4!!XTcOf+=f2t$as!!Y$Da6(FA9Z$i7
-%Ml-VMmb9!6P9G,'9-QQ@Cp4!!4<_OTVMDH8i_A"tc:ak/XGpp],g~>

%%EndBinary
grestore
np
61.2066 89.1859 mo
103.567 89.1859 li
103.567 108.266 li
61.2066 108.266 li
61.2066 89.1859 li
0 0 0 0 cmyk
ef
104.327 88.416 mo
104.327 109.066 li
60.4268 109.066 li
60.4268 88.416 li
104.327 88.416 li
cp
61.1768 89.916 mo
61.9268 89.166 li
61.9268 108.316 li
61.1768 107.566 li
103.577 107.566 li
102.827 108.316 li
102.827 89.166 li
103.577 89.916 li
61.1768 89.916 li
.750271 .679713 .654902 .901946 cmyk
f
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /NAAAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b63767420fe30def0000000bc000007da6670
676d87e4a70600000898000005b1676c79666c439d4d00009990000042fa
68656164d88ee37200000e4c000000366868656112ef165900000e840000
0024686d74785b6033b500000ea8000034d06c6f6361036110da00004378
000034d46d61787013c506ad0000784c000000206e616d658f966ee60000
786c000011dc7072657039e6c80d00008a4800000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
592d2cb0024354584b53234b515a58381b2121591b21212121592d000000
000100000005028ff014735a5f0f3cf50819080000000000a2e31dc20000
0000c3077888fb74fd8c1000080e00000009000100010000000000010000
0721fe4500571000fb74fadf100000010000000000000000000000000000
0d340639011c00000000020000000200000002aa00e40344008504000025
0400006c06aa00480639004b0171005102aa005402aa002e040000910483
00250200006e02aa005302000091023900030400004a040000f00400002c
040000530400002004000062040000580400004c0400007c040000510239
00b00239008e048300250483002504830025038d005c075e006105c70010
055600220556004a05c7002304e3002a0473002105c7004805c7002302aa
0033031d002a05c7002204e30029071d002205c7ffe505c7004804730022
05c70048055600230473008004e3003e05c7000b05c70012078d001b05c7
000f05c7001304e3001a02aa00a80239000302aa004b03c100250400ffef
02aa0076038d00490400fffb038d004604000044038d004c02aa004f0400
003d0400000d0239003c0239ff63040000110239003d063900110400000c
040000450400fff90400004402aa000d031d006402390014040000020400
001105c7000d0400001b0400000c038d002903d7011b019a00a103d700b1
0454001405c7001005c7000e0556004a04e3002a05c7ffe505c7004805c7
000b038d0049038d0049038d0049038d0049038d0049038d0049038d0046
038d004c038d004c038d004c038d004c0239003c0239003c0239000d0239
00020400000c040000450400004504000045040000450400004504000002
0400000204000002040000020400006503330062040000810400003d0400
009c02cd007003a0fff204000023061400450614004507d7001e02aa00ec
02aa003904640019071dffe805c7004905b4003504640008046400180464
001804000002049c008603f4004005b4002b0696002e0464003e02310000
0235fffa027b001d062500470556004904000027038d005902aa00e40483
002404640053040000020464001e04e5001a0400004004000040080000e6
05c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed038d
0043038d004302aa00b902aa00c10464001703f4002f0400000c05c70013
0156feab0400ffe902aa007702aa007304730019047300170400008b0200
009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3002a
04e3002a02aa003302aa003202aa003202aa003205c7004805c7004805c7
004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa0017
02aa003702aa00e902aa009602aa00bb02aa004e02aa001d02aa003c04e3
00160239001e0473007e031d006404e3001a038d0029019a00a105c70023
0400004405c700130400000c047300240400fff904830025048300a50266
0088026600140266002c06000086060000860600002a0400002105c70048
0400003d02aa003304730080031d00640556004a038d00460556004a038d
0046040000260400ffef02aa00ec05c70010038d004905c70010038d0049
05c70023052c004405c7002304e3002a038d004c04e3002a038d004c04e3
00290239003d04e300290340003c04e3002902c0003605c7ffe50400000c
05c7ffe50400000c05c70048040000450556002302aa000d0556002302aa
000d04730080031d006404e3003e0239001404e3003e036b001305c7000b
0400000205c7000b0400000204e3001a038d002904e3001a038d002904a0
002505c7004c05d900470431005703c50046035c0047045000460337000c
049e00450400ffef049500e40285000207c0002c0800004f040000990800
004f040000990800004f040000980400009807d5016a05c700c004830026
04cd00990483002604d5022204d5010505abffe905ab027e05ab027e05ab
ffe905ab027e05abffe905ab027e05abffe905abffe905abffe905abffe9
05abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e
05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d5
00920800000007eb013007eb012007eb013007eb012004d500b204d50080
04d5002a082b0198086b01b807550010060000f40600006f0440003a0540
003704c0003f04150040040000250600005505ab002f046b003b04d50003
01c00089035500a206ab003403d5006404d5009202d6008302d6008304d5
00b202d6007005c70010038d00490556004a038d00460556004a038d0046
04e3002a038d004c04e3002a038d004c04e3002a038d004c05c700480400
003d05c700480400003d05c700480400003d05c700230400000d05c70023
0400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe02aa
00330239003c031d002a0239ff6305c70022040000110400001104e30029
0239003d05c7ffe50400000c059d002603f5000c05c700480400004505c7
0048040000450556002302aa000d04730080031d006404e3003b02390010
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
0002078d001b05c7000d05c700130400000c0239001605c7000f038d0049
071dffe80556004905c7004904000027023900b2078d001b05c7000d078d
001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aaffdb
0400003d04cd005a060000860600002a060000310600002502aa00c302aa
00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7ffb6
0687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a04e3
001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525004f
05c7004805c700250473002204a8002004e3003e05c7001305c7000f05e7
001805f2003c02aa003205c7001304310057035c0047042f000b02270025
03f6fffa0412006e0389000003500046042f000b03d50051022700250408
001503e10019044a0074039effd3039100460400004503fe0059032b0046
03f6fffa038d00180502001c0544004b0227000003f6fffa0400004503f6
fffa0544004b04e3002a0604003704a000250548004b0473008002aa0033
02aa0032031d002a06fa000d06fa002705ee00360556002505aa001a05c7
002505c70010049800240556002204a000250575001a04e3002a072b0012
0402002b05c7002505c7002505560025056d0012071d002205c7002305c7
004805c70025047300220556004a04e3003e05aa001a0652004c05c7000f
05c700250533fffa081200390812003905a6003606fa0025049800240548
003a083900260556ffee038d00490412004e03c700300348001f0412001a
038d004c05870017032900180448002e0448002e03e3002e03fe000c0510
002e0448002e040000450448002e0400fff9038d0046037f000c0400000c
052f00570400001b0448002e0406001e0629002e0629002e0423000c0560
002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348001f
036f0046031d00640239003c023900020239ff6305d1000c05c9002d0400
000d03e3002e0400000c0448002e039a002502cf001f0800004107a20010
040a000d000001010000001c0000003200000012000001020000008f0000
008f0000008f00000090000001020000001c000001020000012102d90056
0000008f025400e0000002af0000ff6b023900b003da005f03a4003302af
0021035a004303c5004e023b0043024a004e03d0005803ce004302220043
039e0043037600330374000f040f006403e2004e023200430270002103cd
005f03a2004303a200430386005803dc004303ae003d03ca006903c00043
04e200430400002104750043045d00430444004301ac006b02f9006b0636
0096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e20043
04e2004304e2004304e2004303da005f03da005f03da005f03a4003302af
0021035a004303c5004e023b00430279000c03ce004302220043039e0043
037600330374000f03e2004e0270002103cd005f03a200430386005803ae
003d03ca006903c0004304e2004304000021023b004303a4003303760033
038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab028d
00a002da0043034d007901a8ffba00000046000000460000004600000046
000000480000004600000046000000460435017c0435012e043500b70435
00810435012c043500be043500af043500810435009a043500db04350085
028d00c1043500b3060001000600010002420036060001000435009e0435
0098043500cb060001000600010006000100060001000600010000000046
060001000600010006000100060001000600010006000100060001000600
0100051bffba06000100060001000600010005b5003a05b5003a01f4ffba
01f4ffba060001000600010006000100060001000481003604350036043d
ffba043dffba03e9004a03e9004a067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b500240300fff70600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000000
003000000046000000460000004000000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0400001b0800000006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a8
005601d60010037500320375003201a8002d01d60013051b003204b50024
01f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4
ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba
04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba04a70046
04a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d
0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba
043500450435004501f4ffba01f4ffba024200360300fff7039affba0327
ffba0375003203750032051b003204b50024051b003204b5002401f4ffba
01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041045a
005304ce0041060001000600010000000046000000460600010006000100
060001000000004600000046060001000600010000000048000000460600
010006000100060001000000004600000046000000460000004600000040
000000300600010000000046000000460600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010006000100028d00ca028d00c7
028d00c60600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000100ffba0800ffba1000ffba05c70048043b0045
0635000b045600020000fdcc0000fc140000fd130000fe420000fce00000
fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000fcfe
0000feff0000ff030000fe9e041a00a206000088060000140000fe700000
fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000fb74
0000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae0000
fc440000fe140000fe700000fd910000fc710000fdc30000fe470000fe62
0000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a0000
fc620000fc090000fbd70239003c05c70010038d004905c70010038d0049
05c70010038d004905c70010038d004905c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004904e3002a038d004c04e3
002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa00330239
003c02aa00330239003c05c700480400004505c700480400004505c70048
0400004505c700480400004505c700480400004505c700480400004505c7
00480400004505c70048043b004505c70048043b004505c70048043b0045
05c70048043b004505c70048043b004505c7000b0400000205c7000b0400
00020635000b045600020635000b045600020635000b045600020635000b
045600020635000b0456000205c700130400000c05c700130400000c05c7
00130400000c05c70010038d004902aa00330239000605c7004804000045
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
000205c7000b040000020000ff090000ff090000ff090000ff0904a00023
0348001f072b0012058700170556002503e3002e0556002503e3002e05c7
00230448002e05c700130400000205c700130400000205c7000f0400001b
0533fffa0406001e053300250400000d05c7002b038d004c05c700480400
004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f40010
01f4001b01f4001001f4006b01f4fff90227ffce0000000f01a8fff502aa
00a402aa00a40000000e01a80056000000560000ffcf01a8000f01d6ffbf
01a8fff501d6ffcd01a8001d01d6fff501a8009301d60013037500320375
00320375003203750032051b003204b5002405b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba02b3003202b3003202b3005f02b3
005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f
02b3005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba
045a002a039a00360435ffba0327ffba064f0027064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba04a7004604a7004604a7004604a70046093e0032
093e00320740ffba0740ffba067f0014077600140327ffba041effba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba04350045
043500450435004504350045043500450435004501f4ffba01f4ffba0435
0045043500450481003604350036043dffba043dffba024200360300fff7
031a001a031a001a031a001a037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
03750032037500320375003203750032051bffba04b5ffba051b003204b5
002401f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba
01f4ffba051b003204b50024067f0045067f0045067f0045067f004501a8
00280000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e
08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000
ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff58
0000ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b40023
0242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4
006d067f001407760014022200430000fee702bc000004440043045afff5
04cefff5045a005304ce0041045a005304ce0041045a005304ce0041045a
005304ce0041045a005304ce0041045a005304ce004104350071043500ad
045a000f04ce000f0400fffb061400000498002404000096049800240400
00000556004a0556004a038d004605c70023068500000498004404000044
03c5004604e3002f040200550473ff6d05c7004805c700120629000d0207
fffe02aa002305c70022040000110239002d03e100190688002305c7ff7a
0400000c05c700480766004a05880045053300000400fff9047300240473
006e031d004804a8002002c000040239001404e300000239001404e3003e
05f2003c05c7000b063f00000400000c04e3001a038d00290450002b0450
003f038d0046038d00500400002c0400002a038c0034036000140400fff9
019a00a1023f00a101fe000a02aa00e40aaa002309540023078d00440800
0029071c00290472003d08e4ffe50800ffe50639000c038d004c05c70010
038d00490000ff0905c70010038d0049071dffe80556004905c700480400
000005c700480400003d05c700220400001105c700480400004505c70048
040000450450002b038d00210239ff630aaa002309540023078d004405c7
00480400003d07990023047b002205c7ffe50400000c05c70010038d0049
05c70010038d004904e3002a038d004c04e3002a038d004c02aaffd30239
ffa102aa00330239fffe05c700480400004505c700480400004505560023
02aa000d0556002302aa000d05c7000b0400000205c7000b040000020473
0080031d006404e3003e023900140481004b0329005405c700230400000d
0533002504d400480400004504e3001a038d002905c70010038d004904e3
002a038d004c05c70048040000450000feec05c700480400004505c70048
0400004505c700480400004505c700130400000c038d0004042f0044042f
fff704000096038d0043038d00460400004404000044038d003a0504004c
035c0047035c004004b40040038b004502aaff30040000440400004403a0
004504000011038d00000400000d0400001b0400001b0239002d02270025
02390036023900280239003d0239003d049f003d06390009063900090639
00110400ff300400000c03fa000c04000045050a00450544004b046d0045
02aafff302aafff302aafff302aa000c02aa000d02aa001702aafff303e7
003603e70036031d006402aaff3002aaff30037dff3002aaffe302390014
02390014040000020464004803c200020400001105c7000d0400000c03f1
0004038d002903f70029038d0021038d003c038d005d038d0046038d005d
038d004605c7004803c70030038b004503a000450448002e0239ff7f0400
fff40370003604000044038d005d038d0046066b004406c2004406d30044
0485001403ae001405310014064d004f0487003d047a003d041d001403d9
003c0292001e02920026013effd201bd001e01bd000501bd00050259001e
036d00040260000401c0008902ec008902aa00b902aa00c102aa00b802aa
00f702aa00f701fc001e01fc001e04830027048300250483005304830053
02aa012102aa00ec02aa007602aa012102aa001d02aa007602aa00ec0239
00b6023900b602aa00f702aa00f702aa00a602aa00a602aa00a602aa001d
02aaffef030e002d025800040154001e01b3001e0250000401fc001e0310
00960310009603100096031000960310009602aa006202aa006202aa003c
02aa0017038d004304570096045700960457009604570096045700430457
0043045700430457004304570043031000430457002f0457002f0457002f
0457002f0457002f0310002f045700250457002504570025045700250457
00250310002f0457001a0457001a0457001a0457001a0457001a0310001a
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002f0457002f0457002f0457002f0457002f0310002f0457
002f0457002f0457002f0457002f0457002f0310002f0457002604570026
045700260457002604570026031000260457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
045700420457004204570042045700420310004204570026045700260457
002604570026045700260310002604570023045700230457002304570023
04570023031000230457002f0457002f0457002f0457002f0457002f0310
002f0457004b0457004b0457004b0457004b0457004b0310004b04570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457001a0457001a0457001a0457001a0457001a0310001a
0457002404570024045700240457002404570024031000240457002f0457
002f0457002f0457002f0457002f0310002f0457004e0457004e0457004e
0457004e0457004e0310004e045700960457009604570096045700960000
fee60000febf0000fdee0000fee00000ff940000fee60000ff440000fee3
0000fee50000ffce0000ff660000fee30000fee00000fee00000ff880000
ff880000ff88000000000000ff5b0000ff5d0000ff440000ff5f0000fe87
0000ffec0000ffa40000ff510000ff510000ff510000fec10000fe8a0000
00000000fee60000ff440000ff860000ff650000ff580000ffce0000fe87
0000febb0000fee50000fee60000fee00000fee00000fec10000febf0000
fdee0000fdee0000fec10000febf0000fdee0000fe160000feb50000ffa4
0000fe870000ff440000feba0000ff230000ff9a0000fdee0000feb70000
00000000fec20000ff880000fe980000ff820000fe870000fdee0000ff66
0000ff440000fec20000fec20000fec20000ff030000ff520000fd1f0000
ffb70000ffcb0000ff530000ff070000ff150000ff770000fef90000fecf
0000ff190000fede0000fed40000fe2a0000ff350000ff5b0000fed90000
fedc02aa00ec02aa007602aa00da0412009203f6fffa05c70013071f0000
05c700130436004505440000047b000a05c70048040000450556004a035c
00450473002103930017049b0014039c001405da000a046e000006a00023
0639001104ed0046042b0045054a001e038d001d04560046045600460540
004504a60014059800480412004e03cd001e03160014047b000a0412004e
038d00460239ff6305c70048033d0046033d002804e3002a05c70025038d
004c0448002e0961004805110023055e00140458001e07be0027056b002d
05c7001204b800140843002306ac002d072b00120587001709ab0023077b
002d040200090329000005e700120502001c05c700480400004506820012
04b600110682001204b600110a9b003b089e003d061a00480487004509b4
0048065600460000fe3709610048051100230556004a038d004602ac001e
0000fea60000febc0000feaa0000fead0000fc2b0000fc4c05c700250448
002e0498002403c3002e047300220400fff9050d0025041f001f0402002b
032900180556002503e3001f064900360496000c06ce002304fc002e0842
00250650002e0556004a038d00460556004a038d004604e3003e037f000c
0660003604d3000c0533fffa0406001e0707000a045f000a0707000a045f
000a02aa0033072b00120587001705560025041f002e056d001203fe000c
05c700230448002e05c700230448002e0533fffa0406001e071d00220510
002e044800dc05c70010038d004905c70010038d0049071dffe805560049
04e3002a038d004c05c7002b038d004c072b0012058700170402002b0329
00180402002b038d002105c700250448002e05c700250448002e05c70048
0400004505c70048040000450548003b036f001b05aa001a0400000c05aa
001a0400000c05aa001a0400000c0533fffa0406001e06fa00250560002d
0498004404000044066e0044062a0044066b006605a5005404970066039f
0054074100120604000c07990023064d002e05c7004803a000450591003e
04d0000c0000ff430000fec90000ff770000ffb00000ff470000ff560000
ff740000fed70000feac000000000000ff520000ff56000000000000feac
0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000
ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae
0000ff8c000001020000ff090000ff090000fee20000fee20000ff8f0000
ff210000ff0905c70010038d0049055600220400fffb055600220400fffb
055600220400fffb0556004a038d004605c700230400004405c700230400
004405c700230400004405c700230400004405c700230400004404e3002a
038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3
002a038d004c0473002102aa004f05c700480400003d05c700230400000d
05c700230400000d05c700230400000d05c700230400000d05c700230400
000d02aa001b0239ffea02aa00330239000205c700220400001105c70022
0400001105c700220400001104e300290239003d04e300290239ffe904e3
00290239ffe704e300290239000f071d002206390011071d002206390011
071d00220639001105c7ffe50400000c05c7ffe50400000c05c7ffe50400
000c05c7ffe50400000c05c700480400004505c700480400004505c70048
0400004505c7004804000045047300220400fff9047300220400fff90556
002302aa000d0556002302aa000d0556002302aa000d0556002302aa000d
04730080031d006404730080031d006404730080031d006404730080031d
006004730080031d006404e3003e0239001404e3003e0239001404e3003e
0239fff504e3003e0239001405c7000b0400000205c7000b0400000205c7
000b0400000205c7000b0400000205c7000b0400000205c7001204000011
05c7001204000011078d001b05c7000d078d001b05c7000d05c7000f0400
001b05c7000f0400001b05c700130400000c04e3001a038d002904e3001a
038d002904e3001a038d00290400000d0239ffff05c7000d0400000c038d
004902390016043100570431005704310057043100570431005704310057
043100570431005705c7001005c700100654000006540000065400000654
00000654000006540000035c0047035c0047035c0047035c0047035c0047
035c004705fc000005fc0000073c0000073c0000073c0000073c0000042f
000b042f000b042f000b042f000b042f000b042f000b042f000b042f000b
06e0000006e0000008200000082000000820000008200000082000000820
000002270025022700250227ffaf0227ffaf0227ffff0227ffff0227ffd3
0227ffd303c3000003c30000050300000503000005030000050300000503
000005030000040000450400004504000045040000450400004504000045
065400000654000007f8000007f80000073000000730000003f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa06e00000
082a0000082a0000082a00000544004b0544004b0544004b0544004b0544
004b0544004b0544004b0544004b067f0000067f000007fb000007fb0000
076f0000076f0000076f0000076f00000431005704310057035c0047035c
0047042f000b042f000b0227002502270025040000450400004503f6fffa
03f6fffa0544004b0544004b043100570431005704310057043100570431
005704310057043100570431005705c7001005c700100654000006540000
06540000065400000654000006540000042f000b042f000b042f000b042f
000b042f000b042f000b042f000b042f000b06e0000006e0000008200000
08200000082000000820000008200000082000000544004b0544004b0544
004b0544004b0544004b0544004b0544004b0544004b067f0000067f0000
07fb000007fb0000076f0000076f0000076f0000076f0000043100570431
0057043100570431005704310057043100570431005705c7001005c70010
05c7001005c7001005c7001002aa00db02aa00d802aa00db02aa001602aa
0016042f000b042f000b042f000b042f000b042f000b05fc000006130000
06e1000006f7000005c7002302aa002702aa002702aa00160227fff10227
ffd10227fff30227fff30227ffd00227ffd002aa003302aa001603c40000
03da000002aa002702aa002702aa001603f6fffa03f6fffa03f6fffa03f6
fffa03fe005903fe005903f6fffa03f6fffa05c7001305c7001307090000
07330000058c000002aaffea02aaffea02aa00760544004b0544004b0544
004b0544004b0544004b06cd0000062f000006e400000632000005f2003c
02aa00ec02aa00db04ef00460556004a0556004a0639001105c7ffe508d0
0023078d001b05c7002204e3003e080000290400003004c100660000ffcb
0000ffcb0000ffb70000ffb70239002d0239ff630400000f047300220400
00440239003d0400000c0289001404ff001e04ed001e02aa009202aa0092
02aa00d102aa00d102aa009702aa007602aa004e02aa004e02aa00150239
00b002aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a
0000ff7b0000ffa00000fee00000ff230000ff7b0000ff7b0000feb20000
ffa00000ffcb0000ffcb0000ffcb047300240400fff90405000505290005
0556004903b8002d03d300450432002d0432002d038e002d032900180239
003c025f00190451002d038f00230510002e0448002e0400004503d3002d
04550045044d00450455002105c7003e037e0045040000450400004503a6
002e03aeffff03aeffff037f000c044c002d040a002d053d002d0409002d
0400001105c7000d038d002903290018032e0045044f000f0348001f0400
00110448002e03a6002e043a000f03fe000c03600000044e00000318001e
0318001e0370001e02f6001e02f6001e0376001e0386001e0199001e01f9
001e03aa001e02f8001e0452001e03b3001e0387001e0358001e02b0001e
02a7001e0347001e02e6001e03a0001e046e00000230001e0230001e0283
001e031f001e027a001e027d001e020d001e020d001e01ef001e01ef001e
0268001e014f001e0286001e03e9001e0241001e024e001e020c001e024e
001e024e001e027d001e0188001e029f001e0272001e03e9001e025a0005
028d00050242001e021f0005022b001e02ad001e02420005014f001e01d6
001e029f001e025a00050242001e021f0005025e001e02ad001e02420005
05ed00460a66004606130046075b00460541ffba01e9003c045a00110000
ff0d0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e
0000feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039a
ffba0327ffba0506005f0486004304f1004e04a2003304a0000f053b0064
04ec0043052c0021048300250000fe4b0000fe4c0000fe4c0400ffee038d
00430355000701a8ffba01a8ffba01a8ffba01a8ffba0658001509c50047
0400000008000000040000000800000002ab000002000000015500000400
000002000000019a000000ab0000000000000556004a071d00220510002e
0616000206310044062e004405c700100556004a0400008104e3002904e3
003e031d0064038d00290445005d000001020000ff420000fea40000ff3a
0000ffcb03fe000a055600470556004a0556004704a000250348001f0000
ff430000ff6b0000ffae027000580000ff39021affba0250001e0000ff3a
0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5
003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
045a002a039a00360435ffba0327ffba064f0027064f00270224ffba021a
ffba064f0027064f00270224ffba021affba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba02b4002302b400230327ffba0327ffba02b4002302b40023
0327ffba0327ffba043500450435004501f4ffba01f4ffba043500450435
004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d0047
040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692
003e0692003e043fffba043fffba0400ffa80400004402aa001406390011
0400000c0400ffae02aaffbc02aaffbc031d001e0239ffbd038d00290400
003d0296001e03c50041062100140239002c022700250400fff9044c002d
046400190400fffb0400004402aa004f04c6003d040000110239003d0639
00110400000c0400fff902aa000d031d00640365ff30040000110400001b
038d0029038d0049042f004404000044038d004c035c0047035c0040038d
004c0239003c038d00430384000a04000002038d002102830005020c001e
020c001e024d001e01ef001e01ab001e01abffa60221001e0292001e014f
00150175001e0151001e0151001a018b0000014f001e014f001e022a001e
0395001e03e9001e029fffa4029f001e0293001e024e001e0291001e01b3
001e01b9ff920188001e029f001f0289001e029a001e0253001e025a0005
0231001e0231001e026e001e0220001e0228001e0000fe930000fe930000
ff730000febc023900b00230001e020d001e024e001e02520005020d001e
05c7004805c700100473003c0556004a02aa005304310057043100570431
005704310057043100570431005704310057043100570227ffcd0227ffd1
0227ffd10227ffd10227ffcd0227fff10227ffcd0227fff103f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa0227ffd1
0227ffd10227fff10227fff103f6fffa03f6fffa03f6fffa03f6fffa045a
005304ce004a032e00130556002205c7000b05cd001c04e3002a038d004c
031d002a0239ff63059e004a040000440556002302aa000d05c700130400
000c038d0043038d0046038d00430239003d04a000230348001f05c7000f
0400001b05c7000f0400001b0402005503290042056d001203fe000c0000
fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff350000ff7b
0000feb2070e000503550045038d004304e300290239002d04e3000a0473
002205560023038d00490239000e05c700230400000d05c7002204000011
04e3001a038d002903c60041054600230409002e049e00450000ff3b0000
ff510000ff080000fef90000fea40000fea40239003c0000000000000076
000000760000007600000076000000760000007600000076000000760000
007600000076000000760000007600000076000000760000014600000146
000001a0000001a0000001a0000001a00000028400000284000002840000
028400000284000002840000028400000284000002840000028400000284
000002840000028400000284000002840000028400000284000002840000
02840000028400000284000002840000047e0000047e000005a0000005a0
000005a0000005a0000005a0000005a0000006bc000006bc000006bc0000
095c0000095c0000095c00000b6400000b6400000b6400000b6400000b64
00000b6400000b6400000b6400000b6400000b6400000b6400000b640000
0f5e00000f5e000011bc0000148e0000186e00001af200001af200001af2
00001da800001da80000221200002212000026dc00002a4400002cb00000
2f7c00002f7c000031ac00003670000038c600003b6a00003e98000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000042fa000042fa000042fa0000
42fa000042fa000042fa000042fa000042fa000042fa000042fa000042fa
000042fa000042fa000042fa000042fa000100000d3400f2003c009d0007
00020010002f0056000005e204eb0005000200>
<0000003a02be0000000300000000006a00000000000300000001001e006a
0000000300000002000e0088000000030000000300720096000000030000
0004001e01080000000300000005001e0126000000030000000600220144
000000030000000700ce0166000000030000000800300234000000030000
000900860264000000030000000d029a02ea000100000000000000350584
0001000000000001000f05b90001000000000002000705c8000100000000
0003003905cf0001000000000004000f06080001000000000005000f0617
000100000000000600110626000100000000000700670637000100000000
00080018069e0001000000000009004306b6000100000000000d014d06f9
0003000104030002000c0846000300010405000200100852000300010406
0002000c086200030001040700020010086e00030001040800020010087e
0003000104090000006a088e0003000104090001001e08f8000300010409
0002000e09160003000104090003007209240003000104090004001e0996
0003000104090005001e09b40003000104090006002209d2000300010409
000700ce09f4000300010409000800300ac2000300010409000900860af2
000300010409000d029a0b7800030001040a0002000c0e1200030001040b
000200100e1e00030001040c0002000c0e2e00030001040e0002000c0e3a
0003000104100002000e0e46000300010413000200120e54000300010414
0002000c0e66000300010415000200100e720003000104160002000c0e82
0003000104190002000e0e8e00030001041b000200100e9c00030001041d
0002000c0eac00030001041f0002000c0eb80003000104240002000e0ec4
00030001042a0002000e0ed200030001042d0002000e0ee000030001080a
0002000c0eee0003000108160002000c0efa000300010c0a0002000c0f06
000300010c0c0002000c0f1200a900200032003000300036002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0052
006500670075006c00610072004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c00610072003a00560065007200730069006f
006e00200035002e0030003100200028004d006900630072006f0073006f
00660074002900540069006d006500730020004e0065007700200052006f
006d0061006e00560065007200730069006f006e00200035002e00300031
002e0033007800540069006d00650073004e006500770052006f006d0061
006e00500053004d005400540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e0054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e004d006f006e
006f00740079007000650020005400790070006500200044007200610077
0069006e00670020004f006600660069006300650020002d002000530074
0061006e006c006500790020004d006f007200690073006f006e002c0020
0056006900630074006f00720020004c0061007200640065006e00740020
00310039003300320059006f00750020006d006100790020007500730065
0020007400680069007300200066006f006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
002000450055004c004100200066006f0072002000740068006500200070
0072006f006400750063007400200069006e002000770068006900630068
0020007400680069007300200066006f006e007400200069007300200069
006e0063006c007500640065006400200074006f00200064006900730070
006c0061007900200061006e00640020007000720069006e007400200063
006f006e00740065006e0074002e002000200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002ea9203230303620546865204d6f6e6f74
79706520436f72706f726174696f6e2e20416c6c20526967687473205265
7365727665642e54696d6573204e657720526f6d616e526567756c61724d
6f6e6f747970653a54696d6573204e657720526f6d616e20526567756c61
723a56657273696f6e20352e303120284d6963726f736f66742954696d65
73204e657720526f6d616e56657273696f6e20352e30312e337854696d65
734e6577526f6d616e50534d5454696d6573204e657720526f6d616e2069
7320612074726164656d61726b206f6620546865204d6f6e6f7479706520
436f72706f726174696f6e20696e2074686520556e697465642053746174
657320616e642f6f72206f7468657220636f756e74726965732e54686520
4d6f6e6f7479706520436f72706f726174696f6e4d6f6e6f747970652054
7970652044726177696e67204f6666696365202d205374616e6c6579204d
6f7269736f6e2c20566963746f72204c617264656e742031393332596f75
206d617920757365207468697320666f6e74206173207065726d69747465
64206279207468652045554c4120666f72207468652070726f6475637420
696e207768696368207468697320666f6e7420697320696e636c75646564
20746f20646973706c617920616e64207072696e7420636f6e74656e742e
2020596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
004e006f0072006d0061006c006f00620079010d0065006a006e00e9006e
006f0072006d0061006c005300740061006e0064006100720064039a03b1
03bd03bf03bd03b903ba03ac00a900200032003000300036002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0052
006500670075006c00610072004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c00610072003a00560065007200730069006f
006e00200035002e0030003100200028004d006900630072006f0073006f
00660074002900540069006d006500730020004e0065007700200052006f
006d0061006e00560065007200730069006f006e00200035002e00300031
002e0033007800540069006d00650073004e006500770052006f006d0061
006e00500053004d005400540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e0054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e004d006f006e
006f00740079007000650020005400790070006500200044007200610077
0069006e00670020004f006600660069006300650020002d002000530074
0061006e006c006500790020004d006f007200690073006f006e002c0020
0056006900630074006f00720020004c0061007200640065006e00740020
00310039003300320059006f00750020006d006100790020007500730065
0020007400680069007300200066006f006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
002000450055004c004100200066006f0072002000740068006500200070
0072006f006400750063007400200069006e002000770068006900630068
0020007400680069007300200066006f006e007400200069007300200069
006e0063006c007500640065006400200074006f00200064006900730070
006c0061007900200061006e00640020007000720069006e007400200063
006f006e00740065006e0074002e002000200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e004e006f0072006d0061006c004e006f
0072006d00610061006c0069004e006f0072006d0061006c004e006f0072
006d00e1006c004e006f0072006d0061006c0065005300740061006e0064
0061006100720064004e006f0072006d0061006c004e006f0072006d0061
006c006e0079004e006f0072006d0061006c041e0431044b0447043d044b
0439004e006f0072006d00e1006c006e0065004e006f0072006d0061006c
004e006f0072006d0061006c004e0061007600610064006e006f00740068
01b001a10300006e00670041007200720075006e00740061004e006f0072
006d0061006c004e006f0072006d0061006c004e006f0072006d0061006c
004e006f0072006d0061006cb9005403ecb3032a1f3f411503e4006003e9
009f03e500df03e50004001003e4001003e5003f03e5007003e400ff03e4
0005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003
e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb24242
32b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de0002
03de03df0028001fffc003dfb3282e32f0410d03df0001037e000f010100
1f00a003dd00b003dd0002004003dab32426329fbf03cc000103ca03c900
64001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fff
c003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d
0004006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f
03a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5
008f03a50004005403aa0001006b03aa000103a8036a0022001f038c0394
0015001f038b03930015001f03a40393001a001f03a20394001e001f03a1
0393001e001f039f0394001e001f039b0394001a001f039a0393001e001f
039903940016001f039803940016001f03970393001b001f03960394001b
001f03950393001b001f03760375001a001f03740375001a001f03a00373
b21e1f10411e039300200393003003930003002003940030039400400394
00030000039400010383036c001e001f03b1036c0032001f036d036c0032
001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0
037d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c
00b0037c00c0037c00d0037c000400300373004003730002000003730010
037300200373000300e0037300f00373000200b0037300c0037300d00373
0003008403730090037300a0037300030377036a0029001f0389036ab228
1f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100
400366b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100
400365b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b
036300020014036300240363003403630044036300040363b2242f1fba03
4e006d0800400e1f7f027f037f047f050430440112bf033200500800001f
0012032d003c080040291f5f3c0137600970098009031009200930094009
5009056f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ff
c04047063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006
3006400650066006700680069006a006099006900702600b700b800b0310
0b200b300b400b500b051f0701a041850362000100000362001003620070
036200900362000400f0035f00010020035e0020035f0030035f0040035e
00040000035e0000035f0010035f00d0035e00e0035f00050010030f0020
030f0030030f00d0030f00e0030f00050000030f0010030f0050030f0060
030f0070030f00d0030f00060000030f0010030f0020030f0030030f00e0
030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e
0002030e004a00e0030d00f0030d0002030d002700d002fc0001001002fc
002002fc005002fc000300d002fc00e002fc0002000002fc001002fc0020
02fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc
003002fc004002fc000302fc406127c02901b02901a02901902901403c3f
413240223f41321212125f235f255f285fa5046f236f256f286fa5044f23
4f254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f
281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8
ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02
af00df02af0003001f02af002f02af003f02af006f02af000402af02af00
1f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02
ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad000200
0f02ad001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac00
9f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300
b002ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02
ac003f02ac0003000f035a0001000f035a001f035a003f035a005f035a00
70035a000500cf035700df03570002000f0357001f03570070035700af03
570004035a035a0357035702ad02ad02ac02ac032c400d31151f00161600
0000121108104110020c004a000d01a8004a000d0198004a000d0189004a
000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe022800
41000d01940041000d0121400b410db4410d4f410d29410d411002170021
000d02150021000d02060021000d01eb0021000d014e0021000d012c4014
210df9210df3210df1210d9d210d71210d3d210d4110021c001f000d0214
001f000d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f
0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b01
41000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c29
1fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc
01f9010f0101001f01f6b224e41f411501f401490401001f01f301490401
001f01f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c
811f411501a3010f019a001f01a200220801001f01a100500401001f019f
0149019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a
002c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2
259e1fb8016ab23c2a1f4111016700240201001f0163002502ab001f014c
010f019a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144
b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb2
23e41f4115011d0023019a001f011c00230801001f011b00250801001f01
0e010f0401001f010d00220401001f0108b223811fb80106b425e41ff73c
bb0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901
490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21f
bf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21f
a523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f
006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb8012540
0a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb6
1f2a24e41f2623b80156b21f5537ba023500070175402c07740762075607
51073b0733072d0720071d071c071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b534201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101
018e59b0382bb00288b801005458b801ffb101018e851bb0124358b90001
012f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a
515ab0052342180016763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb04753205c58b90271026f4544b90270026f45445958b9017a027145
5258b90271017a4459594bb04753205c58b9002202704544b9003c027045
445958b901b30022455258b9002201b34459594bb04c53205c58b9014900
224544b1222245445958b901c20149455258b9014901c24459594bb06753
205c58b9002402714544b90050027145445958b9021e0024455258b90024
021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00
010f455258b9010f0c004459594bb01c53205c58b125254544b12c254544
5958b13725455258b125374459594bb0ab53205c58b125254544b1232545
445958b901590025455258b9002501594459594bb8010153205c58b12525
4544b1282545445958b902080025455258b9002502084459592b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361
dc6463456523456023456560234560b08b766818b080622020b164dc4565
234520b003266062636820b003266165b0dc236544b064234420b1616345
65234520b003266062636820b003266165b063236544b0612344b1006345
5458b163406544b26140614523614459b3a67f434b456523456023456560
234560b089766818b080622020b1437f4565234520b003266062636820b0
03266165b07f236544b043234420b1a64b4565234520b003266062636820
b003266165b04b236544b0a62344b1004b455458b14b406544b2a640a645
236144594b5242014b5058b108004259435c58b108004259b3020b0a1243
58601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b0
0c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342
b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b01123
42002b0018456944456944456944456944737373747373737475752b7373
747475184569447373742b4bb021534bb046515a58b03cb03c45b0406044
59012b2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f
3caf3c0575755943584012bf22cf22025f226f227f228f229f22af220675
7559435c58b6403c9f22ef220375592b2b01747474744544737374747575
454473454473744544737475737373737300757575737575752b2b757575
752b752b435841220063032d00010003032d0013032d0023032d0033032d
0053032d000500c3032d00d3032d00e3032d00f3032d00040083032d0093
032d00a3032d00b3032d0004032d032d4518694474747575592b4358b900
180332b330353238b80332b361663238b80332b3535a3238b80332b3454e
3238b80332b33c413218b80332b23f330a410f0332000100ba033200ca03
3200da033200ea033200fa03320005033203324518694474752b2b2b2b2b
2b597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373
737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b
2b2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b2b73
2b00732b752b2b732b2b2b2b2b2b2b2b2b73742b2b00000000>
[16025 1123 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

2 0 3 <> NAAAAA+TimesNewRomanPSMT AddT42Char 
2 326 16 <000100530180025802170003003f40200205801d64367f050101000200b0
030300021001500160019001a001d0010601b80134b5008004545a182b10
f6fd5d3c103c002fed3c103c3130015d2b13211521530205fdfb02179700
>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 416 20 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 1150 44 <0001003300000278054c001f00c1406f21401010025521400d0d02552140
2835192161116436081f1b022122181f1b122122191f1b012123091f1b11
21231211020201081819021313025519080f0f025519040d0d0255192209
70088008e00803ff0801300850086008035f08c008d0080308040f0f0255
081a0d0d025508b8fff8b41313025508b8fffe401d101002550861207021
8021e0210330215021602103c021d0210261dc182b4e5d717210f42b2b2b
2b5d7171723c4dfd2b2b2b3c003f3c3f3c2b2b2b2b31302b2b2b2b251521
353332373635113427262726232335211523220706151114171617163302
78fdbb305426180d0a1f2c30300245315326190d0a202b3025252531207a
036c6721191218252531207afc94672119121800>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 2916 68 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 3934 70 <00010046ffe4034a03af002101f5b2080401b102024354584020021a060c
10100255060c0f0f0255060c0d0d02550616250f0907602170210221b8ff
c0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002f
ed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d34
0023430d5d36170d5705021c135404530553065407581b581c0767057605
80008021b41bc520d020e000e50509370147015618551c5f236018601c76
18721c8a128e1390119018a601a402af23b301c101c707c719e908e41cea
20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe000
1fffe0b2001d00b803464030102101602180210200211021202150216021
70219021a021b021c021d021e021f0210d21661ddf0f010fc7162509071d
b8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f0c020c2f
100030004000600070009000b000c000e00009300040000200aa731a831a
02501a019f1a011ab8010c4012f006010006100620063006400605064322
43b9029100182b4e10f472714ded5d7271fd715de47172ed003fed2b2b3f
eded7110f45d7172e412b10602435458400a531d631d731d03931d01005d
7159393130383838013801715d005d017200722b2b435c58b4001018391b
b8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b5959017101060623220235340033321615140623222726262726232207
061514163332373637034a25d8839ce80101b487ae312c3b1e110b23233e
643d51a189624e3734015cb5c30106dfd8010e8f4d262f2615761f1e4a62
a1a4fb432e79>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 5262 72 <0002004cffe4035303b00014001d037db10202435458402808161415000c
0f100255000e0c0f1002550e0c0d0d02550e153040000120003000020000
10000200b8ffc0b41314025500b8ffc040111111025500000b1b25110700
0710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ffd6b41314
025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b
2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d158000a0
00b0000320003000400003000010000200000b1b2511070807b8ffc04024
1010065510072007b00703000760078007a00704079204a204b204030431
0b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c0f0f
0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc011
12392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019
125f185d1960006014d6030519201c3917201c3916401c391fb8ffc0400a
434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e341b061909
58135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f3031312600760087007800789
09c107c80ff007080401070d84020309baffe00006ffe0404a3609460247
094f1f5402540962027202891389199913a409a40ab808b509b00ac702e7
02e00cf40a1408d007010007d007027107010007100720079007a007b007
06077d041400301615b8ffc040131239125f157f159f15df150415151bd3
040104b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b
011b25110707cc0816281b390f16016f167f168f160316f4141480080130
0890080230088f08df08031008400860087008b008e0080608aa0e150400
89000200b8032c4012300e400e500e03000e100e200e03f00e010eb8ffc0
4009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c
10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b
3cfd3c10f45d5d7172393130015d00383800715d014358b4060001020271
5971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c402d390d40
2d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b21b39
08b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8
ffc0400e093915101939192011390d201139002b2b012b002b2b2b2b2b2b
2b2b2b2b2b2b595959130617163332363717060623220235341233321615
252126272626232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701
a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
4081>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 6898 76 <0002003c00000207058e000b00220249b10202435458b90024ffc0401d0d
0d0255120d080d0d02550d21181010025521180f0f02552113180309b8ff
eeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb610
100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f
025518b8ffd6b5101002551820b803e240174f216f217f210321226f0001
0060060106400f0f025506b8ffc0b71313025506220613002f3fd62b2b5d
cd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102bc4313001
2b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b06
5506b8ffc0b44141065506b8ffc04019373706554006010006a006026006
0106000020212207130309b8fff6401c10100655090924230d0210100655
0d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6b40f0f06
5518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b1112392f2b
cd002f3fddcd3fcd5d71722b2b2b3130012b2b1b40199024016024702490
24a024f024052024502402402450240224b8ffc0b332323424b8ffc0b338
3a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a3418291e
134a220d291e124a2321271941201e21440c190c1390060106390000220c
0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0
180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72003f3c3f
3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d715d017259
590132161514062322263534361311141616331521353236363511342726
26232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c28
0e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20
190f2470>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 7592 78 <000100110000040c058e003703bfb10202435458402b1a0c10100255190c
10100255200c0d0d0255110c0d0d0255010c0d0d0255200c0d1002551f16
0d10025526b8ffe8b40d0d025526b8ffe8402b10100255262136272e1f01
21080d0d025521040f0f025521060c0c0255212e0e131302552e16121202
552eb8fff6b40d0d02552eb8fff4b40f0f02552eb8ffeeb4101002552eb8
fffe40100f0f02552e1001111f04260a171a2528b8ffe8b40d0f025528bb
03e20026003503e240123640090d025536370026190c0c0d0d02550cb803
e2b6090c0d0f025509b803e2b10a06003fed2bed2b2f2f3fdd2bed10fd2b
c0c0c011121739012f2b2b2b2b2b2bdd2b2b2bc0c610c4c610c42b2b3130
002b2b2b2b2b012b2b1b40b90f391f3902120610010610019309950a900b
900c9b0f9a119b129a1f9f39b30a0a3919391a5f105f115f1f6c106f116f
1f9b0209eb1eed1f028009810ec603c60fe902e90fed11ef12083f113f18
3f1f38203f39460f720a750f082f022a10202520262f3938013810071510
5501521054200423105701570fe610f510054911481fc209c20ae30a0517
0916101f1d1f1f4502420f060b110f130d1a0c1d0f1e0e1f065303550453
0559105411541306190f1d1d1e1f530204b10602435458402f3618101006
55200110030a27353637007c0c010c7b0901090a0619270c0c3938012102
10100655210c0f0f0655212eb8ffe6b4101006552eb8fff0b40f0f06552e
b8fffab70d0d06552e2e39381112392f2b2b2bdd2b2bc01112392f002f2f
3fcd5dcd5d3fddcd111217393130012b1b4055100f01021112131310191f
1a1e192e291e2727220a02091e0a21291e26272336272f41351e3644002f
000b13101024201f14200102201f0f101030010214010102012000201f13
010427020f0a1010180a37000017b801ec404c180ccc0b0b0a0627262619
19180a0b300c800c02f00c01d00ce00c02700cc00c020c2f17179f180118
1a1f39013921242e00242f2f002e102eb02ec02ed02e05502e01802e902e
022e603839b80178b321a66e182b2b4ef471725d3c4d10ed10ed4e1072f6
5d3c4d10f45d5d5d713c003f3c103c103c3f3c10ed10ed3f3c191112392f
12393912173901103c3c870e2e182b0e7d10c487082e182b0e7d10c40011
12391810f5edfc01f52b10ed0110c02b10ed0110c0870e7d10c4c4070759
313001727271715d005d72015d5d5d5d5d5d00710071435c58b90010ffe8
4014120b3f1f281239012812391d400f391f280f3902b8ffc0b20b390bb8
ffc0b211390fb8ffc0b2113909b8ffc0b211390cb8ffc0b11139012b2b2b
2b002b2b2b2b2b012b59015d590111373637363534262735211506060707
131617161716331521353636353427011114161617152135323736373635
113426262322072725014fe94a0c082126018e526d41ebeb62223024193e
fe43261b28fee7192e4dfe2e4623150b0f0e201a152a110110058efc70d5
44120c0c141d022020022e3bd9fed77b212f0e0a242401151317330167fe
d0593818012424110b17215103429f471b112370>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 8722 80 <000100110000063003af005703d3b1020243545840175940121202555940
0d0d02551711080d0d025511554c30b8fff4b40f0f025530b8ffeab41010
025530b8fff4400f13130255302b080d0d02552b313746b8fff4b40f0f02
5546b8ffeab41010025546b8fff440211313025546414741080d0d025541
040f0f025541060c0c0255414c14121202554cb8fff4b40f0f02554cb8ff
f6b40d0d02554cb8ffeab4101002554cb8fffa40190c0c02554c0a131302
554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f025537100d0d02
5537b8ffd4400b10100255371c1212025537b8ffea401f0c0c025537020d
0d02553702131302553711040f0f025511060c0c02551120b8ffe8400b0f
0f025520300d0d025520b8ffc2400b10100255202a1212025520b8ffda40
0b0c0c025520020d0d025520b8fffc400b131302552016192f324548b803
e24020475455400c0c02552f55014f556f557f5503555606473118252c0b
073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0012f2b2b
2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2bcd2b2b2b
c410c42b2b2b10c4102bc42b2b2b10c6102bc431302b2b1bb10602435458
403c252c0b3c2c050b070507545556071831471102101006551120041010
0655202b060f0f06552b02101006552b3741060f0f065541021010065541
4c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8b40f0f06
5537b8fff2b70d0d06553737584cb8ffeeb40f0f06554cb8fff0b4101006
554cb8fff8b70d0d06554c4c59581112392f2b2b2b11392f2b2b2b11392f
2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f10ed10ed313001b0
0d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a18191818183838
3838383838591b401c3407d059ef16038059011159600d5d362b0d019059
01200820291e18b802fcb42237291e31b802fc400b224c291e474a221129
1e17b8030eb4232b291e30b8030db42341291e46b8030d403e2355274d41
541e55440829374d4039292808000725475657073c2c05252c0c0a0b0706
0405074746313018170a5917171a101124213020017020b0200220b80135
400f37292e2b24383037017037b0370237b8013540164d5741244c4c1f4d
504d02804d904d02004d104d024db8ffc0b61416344d605859b8025ab321
a67f18b80164852b2b4ef42b5d71723c4d10fd3c10f471723cfde410f471
723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed3f3c1112
17390111123900f5edfc01f52b2b2b2b2b2b31304379401422240c0f0d25
2326240c211c010e0f220e251c012b01103c2b2b2b81810172005d2b0171
5d5959013637363633321617363633321617161511141716163315213533
323736373635113427262322060707171114161633152135323637363511
342726232207060711141616331521353236363511342726262322072725
33015064122d6833567c15678e4b497121160d0a363dfe3c133b21170a04
1b2756356b4c0202153a46fe314c390b05212c4f3635532d19314bfe3b3f
321a09071e1a1c270f01142b02ec640f262a645f784b4b553a7cfe765620
161f24241710231150018a702e4035480b2bfe4b5e2e1f24242424115201
8a7031401d2c37fe155a361b24241b3b55015e972c21190f2470>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 9948 81 <0001000c000003f703af003302d3b102024354584017354012120255300c
10100255310c101002550e080f1623b8ffea402e10100255231d24290808
0d0d025508040f0f025508060c0c025508162412120255161a0d0d025516
0c1313025516b8fff4b40f0f025516b8ffdeb41010025516b8ffee40260c
0c025516001d040f0f02551d080d0d02551d060c0c02551d291812120255
290e1313025529b8ffeeb41010025529b8fff0b40f0f025529b8fff6b40d
0d025529b8fffa400a0c0c025529001c022430b803e24009314009100255
31320dbe03e2001003e2002203e2002503e24009240f2432071a2c020700
3fed3f2f2f10ededecec10dd2bed11123939012f2b2b2b2b2b2bdd2b2b2b
c02f2b2b2b2b2b2bcd2b2b2b10c410c42b10c410c431302b2b2b1bb10602
435458405e2f1610100655300c10100655311610100655001c0224303132
071a2c02070f24080c0d0d065508021010065508060f0f06550816020d0d
065516021010065516080f0f065516163534001d0c0d0d06551d080f0f06
551d02101006551d29b8fff0b40d0d065529b8fff0b41010065529b8fff2
b70f0f0655292935341112392f2b2b2bdd2b2b2bc01112392f2b2b2bcd2b
2b2b002f2f3fed3fddcd111239393130012b2b2b1b403a35402a35083560
0d5d3630355035603570359035052d040140356035703580359035b03506
b035d03502b0350160358035c035031d0816291e0fb8030f40112229291e
244a2208291e0e4a231d291e23b8030e402e2331272a41301e31441c0023
3233071a2c02072423230f0f0e0a17162407900801b008010f0870089f08
cf080408b802bd401b29331d242a1f295029602970290480299029b02903
002910290229b8ffc04009141634296034a67f182b10f62b5d71723cfd3c
10fd5d71723cfd3c003f3c103c103c3fed3f3c113939f5edfc01f52b2b2b
2b3130437940121819030604251903171c01050618051a1c012b01103c2b
2b8181015d71015d71005d01722b2b595901363332161716151114171616
331521353332363736351134262322071114171616331521353332363511
342626232207272533014ba1924b6c20160e0b3142fe3b1340330a04414d
77760b0e314bfe3b1446310f1f1a1c270f01142b02edc24b563c7cfe7957
1f191c242427260f4f01777d7182fe1d5d161d1b242447640154a5481a0f
2470>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 10820 82 <00020045ffe403b903af000f001d020cb10202435458401c140c06101002
550c0c0f0f02550c0c0d0d02550c100b0b02550c1a04b8fff4b410100255
04b8fff440130b0b0255040c0f0f0255041725080b10250007003fed3fed
012f2b2b2bcd2f2b2b2b2bcd31301bb10602435458400910250007172508
0b1ab8fff4401b0d0d06551a04140c0d0d0655140c100f0f06550c100d0d
06550c04b8fff0400b0d0d065504041e0c0c1f1e1112392f11392f2b102b
2bcd2b10cd2b003fed3fed31301b404512801501a716b616c501c909c41d
d9090612e70a0148094516571585018c09890fd91b071f403235041f430d
5d369f1f01c615c91a02401f014908102500071725080b1204b8ffc0402b
120b3f4f0401400401d0040140045004600470049004b0040604ec0c4012
0b3f400c9f0c020c431e434b182b4e10f4722b4ded5d5d71722b4bb02853
4bb050515ab10c1e49b11f0449525a58bd000cffc00004ffc0001fffc038
3838594358bc001a0332000400140332e910e91bbc001a03320004001403
32ed10ed59003fed3fed313043794036011d12250e2602251c260a250626
110f1420001d011a2001160914200018071a2001130d1020011b03102001
150b17200019051720002b2b2b2b012b2b2b2b2b2b2b2b2b2b8101720171
722b2b71015d0143584011750275067a0a7a0e7a1278167518751c085d59
5d005d435c5840091c1011391b10113915b8fff0b10b39002b2b2b595959
013217161514060623222726353436361722060615141233323635342726
0200d07e6b76cf7fcf7a677dcc53356b429f82617e694703af9e87af7bfc
80a58bad7ef977413f9e7cc8fedea0c3f48c6000>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 11440 83 <0002fff9fe4a03ba03af002700390222b1020243545840293b4013130255
320a2a131302550a060f0f02550a1813190020032913080d0d0255132016
1313025520b8fffab40d0d025520b8fffcb40f0f025520b8fff4400d1010
02552003282b12040e061aba03e2001703e2400b1819182e250e36590607
27b803e24009004009100255000107003fdd2bed3fed2fed2f2f10eded11
121739012f2b2b2b2bdd2bc0c010c6c410c42f2b2bcd31302b1bb1060243
5458b90032fffcb50d0d0655320ab8fff040180d0d06550a0a3b3a032913
0c0d0d06551302101006551320b8fff6b40d0d065520b8ffee401b101006
5520203b3a0328060e270001190e2e250e0b365906070107003f3fed3fed
3f10ddcd11123939011112392f2b2bdd2b2bd0c01112392f2bcd2b31301b
407e0a3b430d5d36391049105b10891104862c013b2c3f3b4b2c5b2c6a11
6a2c73087911792c8408a507e908f9090d303b583359346c3404403b012f
08032829121320291e19862213291e1827230027214f271e004402122b28
03042e1036013659060702072e250e0b19180e32311f0a900a02600a800a
af0a030aeb200213b80167401b2020502170210280210100211021b021c0
21d0210521603ac24b182b10f65d71723c10fd3c10fd5d72ed003f3c3fed
3f3fed7211173910f5edfc01f52b2b030e103c3c3c3c3130437940202f35
070d082534260c26302535073220012f0d3220013309362001310b2e2000
002b2b012b2b2b2b2b2b81810171725d00715d2b59590325331536363332
171615140706232227262711141616331521353316373636351134262623
220705111417161633323736353427262322070602011a26478f4f8a5c71
8870aa4a36283217394bfe20193727131510231e18250134090e6d53643e
515c4058302f24033972d679616c84d4ed9b7f150f2dfee95e331e252501
160b316403625930180e7ffeaa6f233a584e66b9d2714e181200>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 12156 85 <0001000d000002b703af002801b5b1020243545840282a4013130255061f
171127040f0f025527181f0111080d0d025511040f0f025511060c0c0255
111fb8fff4b40f0f02551fb8fff6b40d0d02551fb8ffee4011101002551f
14121202551f0e131302551fb8fffc400b0f0f02551f011003181619bb03
e20018002603e2400e4f276f277f2703272807180c0307003fcd2f3fdd5d
ed10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10c410c431
302b1bb10602435458402301100318262728076f097f0902090c03071806
1f01110c0d0d0655110410100655111fb8fffab40d0d06551fb8ffeab40f
0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd2b2bc010c400
2f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f4002400f82
0407402a015f2a011f291e18272211291e17862327272041261e2744000a
0b2a111420100104188009010939100c010c590303000718170a5f060140
0601062e1f2a012a0011241f1f1f2001802090200200201020b020c020d0
2005206029a66e182b4e10f45d71723c4d10fd3c1072e47172003f3c3f3c
10ed72ed5d11173901111239390010f5edfc01f52b2b3130017271005d59
590115363332161514062322262322070607111417161633152135323736
373635113426262322072725014c73793748342423571512152d30130d42
3efe2b4622190a050d231a1f270a011503afcece432c27364514295efe49
4c271b24242416102311500163a03d1c0f247000>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 12716 86 <00010064ffe402d503af00310434b1020243545840273340131302553340
0b0b02550201181010025501180f0f0255010f1b1a08270c0b0b02552721
0fb8ffe0b4101002550fb8fff440320f0f02550f310708270f2104122b05
017905016c050105252f0101012a0719771e01631e011e25201a01601a70
1a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd
2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f2708042a16
1e122e05022a3107601a701a021a19124b05016b057b050205252a07441e
01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a080e0d
0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc400
3fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b4029092c
192c0212122e400b392c280b391814590c5a269b109424050a070a280a29
603370338033060f33b8012040870d5d36cb0dcb0ec424c425d723d624d9
2ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c03161412
1c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f335f3378
29782c860ea823af33e803e61c0c2908311e00bd021e011f012f010201b8
012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a021ab801
2bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e
2f2a31000005252a071a7e191918b803464014162f1e25120b02cc120101
12cf21df21ef210321b80314400b700f01600f700f900f030fb801364019
271a192e1f0801082c9f270160277027802703202730270227ba01200032
0120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2ff21015d
59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed
1112173901111217394358400a242323240d0b140d0d0b870e2e2b0e7d10
c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4edb1060243
5458b42e20090d34002b5931304379401c28291f20101106071f11211c01
0629081c0020101e1c000728051c01002b2b012b2b81818181015d435840
09fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b
9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b2b435840
0b2f232f248b2c9b249b2c055d59435c584011282019390928193901400a
3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c400a392c40
09390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8
ffc0400f123901401239024012392c20123924b8fff0400f0f392c180f39
03100d392e400d3923b8fff040120d390c100d392c200d392c1811392c18
1139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b59005d59590111232626232206151417161717161514062322
272623220723113316163332363534262427263534363332171633323637
02902126775c4656201f5f92cbbd75546c2115170d21211c9e62455761fe
de2d2d9b7b364d331110120c03affec8936a4a2d3828292e4763a27d991e
0a1a01478c8e5139455e903a39577198170f0e18>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 13936 87 <00010014fff1023c04c1001b01fdb1020243545840251d40121302551d40
101002550b0c18121202550c15130105131812120255130e1313025513b8
fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255130b082c
0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b2bddc010
c62f2bcd31302b2b1bb106024354584019170c10100655160c1010065515
0c10100655160c101006551bb8ffe8b4101006551ab8ffe8b41010065519
b8ffe8401410100655700b010b0f1b01156914014914011404b8011b401c
0106082c0f0b1b0105021010065505080f0f0655050c0d0d06550513b8ff
eeb41010065513b8fff0b40f0f065513b8fffab70d0d065513131d1c1112
392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d3130012b2b
2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d99119919bf15bf
16b819e819079f1d01891a014f0c4f0d5f0c5f0df5180506181518271803
161518191a030118191a03141ba00103153004b8011b401c010330020201
060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec402c200c01
0c2e2f1db01d021d000101040405241450130180130100131013b013c013
d013e0130613601cab89182b10f65d71723cfd3c103c103c105df45ded10
ed10f45d3c003ffde43f3c10ed10edfd3c10e40111173900111739123931
3000715d0171725d00722b59590111331523111416333236373306062322
2626351123353636373637014ad6d63328213e11272380442e582a913773
2d172904c1fed346fdae593e29286263335f63026821166948266500>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 14534 88 <00010002ffe403fd039400250230b1020243545840162740121202550801
080d0d0255010b20281212025520b8fffc400b0f0f0255201e0d0d025520
b8ffe4401310100255201a080d0d02551a121c1212025512b8fff8b40f0f
025512b8fffab40d0d025512b8fff4b5101002551224ba03e2001703e240
0e1825060b200e18061d2c0e0b0708b8ffc0b509100255080a002fdd2bcd
3fed3f1239393f10edec012f2b2b2b2bcd2b2f2b2b2b2bc0dd2bc431302b
1bb1060243545840570740086008700803080a0b200b180e242517182506
18061d2c0e0b0b010810100655010a0f0f0655010c0d0d065501201a040f
0f06551a04101006551a0a0d0d06551a1208082620080f0f065520060d0d
065520202612b8fff2b41010065512b8fff6b40f0f065512b8fff6b70d0d
0655121227261112392f2b2b2b11392f2b2b11392f10cd2b2b2b10cd2b2b
2bc0003fed3f3f10cd10cd111239393fdd5dcd31301b40350127600d5d36
202760277027b02704340b371f3a20481f4820051a08134f1e182723214f
1e25272308270141071e0844200b251d08b8014540130a00252519191806
1d2c0e0e0a0b0a0b0b2120b80167400e00b001010f0170019f01cf010401
b802bd402512191a241212501390130280139013b01303001310132013b0
13c013d01306136026c27f182b4e10f45d71723c4d10fd3c10fd5d713cfd
3c3c103c003f3c10ed3f3c103c103c10ed11123939f5edfc01f52b2b3130
437940101b1c0f111c0f1a1c0010111b101d1c002b01103c2b8181005d01
5d2b59590111141616333237170523350606232226263511342626073521
11141633323637113426273503630f21161f270efeee2d767c454d712c1c
37480141593f2b6d4b395a0394fdd59f471c112371c28042598c80019941
321b0125fd9b8050364c02074e370225>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 15210 89 <00010011ffe403ed0394002002c1b10202435458b60909001a120614be03
e2001103e2002003e2000203e2b10006003fededecec3f2f1239012f3130
1bb106024354584031180a091b080909222109001a0b1416101006551413
06112a10100655111206021610100655020106201610100655200006003f
cd2b3fcd2b3fcd2b3fcd2b3f1239011112392fddcd10ddcd31301b400912
530a58185b190319b8ffd8b20b3522b8ffc0406115351419141a2309220a
2111201224182019201a3a09390a3a12391835193a1a4a084909440a4518
4519491a69089c0899099d1a9a1b9f22a900a808a509a219a21aa81bbe08
b509b60ab618b719ba1abb1bc022d518f60af618fb1a2d9f090122b8ffc0
b332603422b8ffc0b32b313422b8ffc0b31e293422b8ffc0b347473422b8
ffc0b327273422b8ffc0b323233422b8ffc0b311113422b8ffc04040191c
340f227c007201720270057c20810585118f22093a08340a3418391bc606
c021d81a07880a891887190337124818021318141e13001b201e00120a11
1e12b8ff86402c091a192018191930090a1409090a1b1a1a240908140909
08070605040408021e01131212010100061a190b18b8011d40125f0a0110
0a240a9f0ab60ad40a050a7d091bb80167401040062fa008b908ce080308
7d0919751abb011b00200009ffc0b30f123409b8ffc0b3191d3409b8ffc0
b2323509b8ffc0b70c350009c0090209b801bfb610220180220122b8ffc0
b3191d3422b8ffc0b60f133421ab89182b19102b2b7172f45d2b2b2b2b1a
fd18e61910f45d18f41aed1910f45d7218ed003f3c3f3c103c103c10ed01
111739872e2b0e7d10c487052e182b0e7d10c42b180010ed0110c00010ed
0110c00010ed0110c03130015d5d5d712b2b2b2b2b2b2b2b005d015d2b2b
0172435c58b50a20160d3f08b8ffe8b7160d3f09240b3918b8ffe0b21339
0ab8ffe0400a1339082013391b201339012b2b2b2b002b012b2b59595913
211523220615141713133635342726262335211506070607012301262627
26271101af1c272915d5d617080b2234012b3414231cfebb29feb916281f
113203942526202330fe06020d381d0e090f0b252504111e46fcee030536
2f100908>NAAAAA+TimesNewRomanPSMT AddT42Char 
2 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>NAAAAA+TimesNewRomanPSMT AddT42Char 
NAAAAA+TimesNewRomanPSMT /CharStrings get begin
/space 3 def
/hyphen 16 def
/one 20 def
/I 44 def
/a 68 def
/c 70 def
/e 72 def
/i 76 def
/k 78 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/v 89 def
end
NAAAAA+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 49 /one put
dup 73 /I put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/ZWRLRB+TimesNewRomanPSMT /NAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut
/ZWRLRB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one 23{/.notdef}rp /I 
23{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
/.notdef /k /.notdef /m /n /o /p /.notdef 
/r /s /t /u /v 137{/.notdef}rp]
ZWRLRB+TimesNewRomanPSMT nf
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
32.6768 274.666 mo
(I)sh
36.0267 274.666 mo
(n)sh
41.0267 274.666 mo
(p)sh
46.0267 274.666 mo
(u)sh
51.0267 274.666 mo
(t)sh
53.8268 274.666 mo
( )sh
56.3268 274.666 mo
(p)sh
61.3268 274.666 mo
(a)sh
65.7767 274.666 mo
(c)sh
70.2267 274.666 mo
(k)sh
75.2267 274.666 mo
(e)sh
79.6768 274.666 mo
(t)sh
82.4767 274.666 mo
( )sh
84.9767 274.666 mo
(v)sh
89.9767 274.666 mo
(e)sh
94.4268 274.666 mo
(c)sh
98.8767 274.666 mo
(t)sh
101.677 274.666 mo
(o)sh
106.677 274.666 mo
(r)sh
110.027 274.666 mo
( )sh
32.6768 286.666 mo
(a)sh
37.1267 286.666 mo
(t)sh
39.9268 286.666 mo
( )sh
42.4268 286.666 mo
(t)sh
45.2267 286.666 mo
(i)sh
48.0267 286.666 mo
(m)sh
55.8268 286.666 mo
(e)sh
60.2767 286.666 mo
( )sh
62.7767 286.666 mo
(s)sh
66.6768 286.666 mo
(t)sh
69.4767 286.666 mo
(e)sh
73.9268 286.666 mo
(p)sh
78.9268 286.666 mo
( )sh
81.4268 286.666 mo
(t)sh
84.2267 286.666 mo
(-)sh
87.5768 286.666 mo
(1)sh
250.807 159.026 mo
243.127 159.026 li
243.127 153.026 li
250.807 153.026 li
250.807 159.026 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[8.02133 0 0 6.32433 -101.317 139.139 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 39 
/M[47 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
n5og"JX3ROm(WY-H<=;='a,UVE1*KfXTOt]'c$3\"=R;jQ(RcJpSS+Y9HYJI!!Ed:MT=B9jo`Xt!!)Lj
"C?YFZ+959"0m/S=R[%++&W/ZRA9,N".;Xo(%<=K-rt>QTBrHXPtW;Cn,NS$>`-SSm,eDj9E5(j=SGnu
F/7s5!kDE8neD0hK]]B<UD4O7+9=l_m&0`Y!hUSXnc/\RWTN=EfDkpD=936Cj1kUroG%B_RJ<oNXoB..
+9=Ngj/;o"oDenDa5c=^!;BRs=BLXD^B0Hu=S3C/BB$#pB,)0S+96-9VZWi2+<^=W!.<eg!djtJpK.H.
X80L3\Zr^?^\=c0SU19;pD!]XO85mZUR@nSXo>HsNraStrY>/M!A]Z1VZNKUTD5>YN<+B"rZLq8!?\lJ
joX2Uf_FV'\H/-mrW)^q!G8n@^B;6cQ?2t+!ICR=^Ar*A=SNU3.AQdB!H:7#'`ggXqlKiSo+h$C!A^;E
VZCd*r#c#6KDVPH3qFHo!;QTq+5$JQ!K'&<!!,cmqrRl1o)SSg!G8n?^As)a=9*pM^At)$=SW[4.AQgC
!*f14!)i`s!JD3[(&8sQ18"KB!+,CB!*9#q!/'kcq#CF;f_jk3CA.].>l<^aWUg,d=93$ErP&B<B)Gd-
=9+0T^Ar*B=S`a5.AQjD!LYD0'`_J9XT10L(&B$R18"NC!L5G5+95aGVZ8dM+Su-?!$BkljoNLEo`+u,
r8mu2oDn_i!3uL;!3>Zm!3uL;!1*7Zq@s!urN-'\neD.mrN-'=r"]#BqB,d'rMKXTnfRptrMKX8oH<u1
!6>'#!4hY#!6>'#!/gCKqcEihrP&?5oN;)p!.k*`!3u/uq\9*XrN-'\nJ)%%rN-'foG.6G!.4[B!0-Lk
!*9&r!1!1!qZ$VbrT4*jnGiPorT4+#oDnek!.+RX!+tb'!+u/D!+,>#r"T3%r2frJnJ)$Qr2fr@p_EcC
r#bu5r20NMnK7fer20NCocX/4!)3=Q!$C_2!$D.$!"SZ%rE'),\c'8CJaZ\@^\tnID"Up/'`fDOrN-&t
mhPc&!&O9_r?)+hTDbYf<pq1/VZ8dN+T29@%bUaB!*oF%oDngO!%mjDrE'&crP&?;mTBD%!.+<?r=o<O
rN-'fmM5Z%!(Z\sru_@c+E@@X!0uspr20NgocX25!/ga;!6=L-r8muQo`4tn!+,T<!.jQ?r4`5_oiV2.
!$D-@!)i5"r2frsobIHK!%@cC!*8M1r20NqocX56!"Sqh!*o3tq#L?T!*o0sr`B/drP&?Cm9';$!.+<?
rY5EPrN-'pm1oQ$!(Z\srZD2\rhfdpTC!d!VZ9E`+T;?@MZ)Z;f^/\:joA*J!!68)?MqP<M!e@FB)KCD
D#@E3=993P+8i5@>OE4+.K$:J1\DIa+<W*1VZ:&k+941pVZ8dN+9DNC%fGGhC@D3)!!",=jo@"+!!68)
Jc*7_B'rb$D#D$JB(]7-'bsXEXT0g<'`^&fXT0gC'`oL#<rAiq1B&Ed+94J#VZ8LF+9DNC>l<^a+79+/
/c=`2+8#U8=BMBt^AtP+=9+0T^\1b4=BH:QK`/"QRI(^h>PtVq'`oL#KDh\JQ0f[o?Mp_n+9DNCWVtrZ
a6`j.C?F[Xk4AZR=T#o6O6p$LSc-;'\b'#((&Y06BC-E6Hi:&HU\#<$+T/,;C%rhE+96ceVZ<@]+TDH>
joBer!!&JdjoF'+!<7BC^Ar?B=9,o1^Ashs=9:u_Xo5@%54''bU]%:pHh8'Q9`1dg7-u)sTDbYfHh8H\
9`4#Q4m`4Lf_sq6RK*?]!<8,X^[5,'B)KCDHLt>>BDen!'`]]\XT1l`(&r"GVt(u.+941pVZ9E_+THie
k3W-K+8k7$9_8>bQMnPuZ0bWnM#>$Z=T<@=XT4dV'`_J9Xn*;-EW)d8Q0f[o?Mp_m+TI>tjoEHh!!$d3
k48TQV#A%.Sb6+\=9,W)^At)$=T='QXT3_8'`a[#XT4%G(&rpbVZ;)2+97]*VZ;A@+TJG?joOV5m/R.,
rT4*Zo)SfqrP&>gmT9I$r4`5Qo2u$\rN-'(mM,^Nr2fr_r"\uAs-<P\!+,(9!&FJM!(?E$s2Y*#!,Cp%
!$D.$!'ToRs/Z+5!.jWA!a&QcrP&?.nlYpQrN-&tmM,_7rN-'QneM1arMKWrmN;LDrMKXJnf[tCrT4)b
rW)Hg!.=b-!3,Mhs.oV.!.+*9!+,T<!+te(s+L?Q!(ZJm!$D-@!%IUVr>#?brMKWhmiVTYr20NMnf[t3
rT4)Rmf3=tr8mu$nc8]UrP&>RmoTRUrkAKKSafh^E;cm=5493dE;cm=HgqjNEW)d87.25uEW)d8Hgr6Y
MZ)Z;4o#*P!!%oTjoCk?!<7BD^ArTL=9)t3^B(TGnQ>f]rN-&in.bpPrN-*g+7U'G9E7cbVZ9E[+941q
VZE&2nK@j*rT4)Rn,NG1rT4.$%e0Q!?N%V=M""LHV#A%.B)Pj(=T9KAXT2Sp'``pcXT0g>(&o]\VZ:&m
+97&mVZ8LA+TDrMjoB/g!;ultWVtrZ+7K73=BMBu^At)"=9+Zc^ArTK=993PK`8(RK^fcWE;cm=8+./o
+<Z=9VZ;A>+96E[VZ9EZ+9DNCWW)#[WUTrgMZ)Z;9^_r_=BKYC^AqU3=9*pN^As)`=SZ&#'brq2XT0I7
'`_/1XT2Sn'`oL#7/a"`..\P]<rJor?LAp;!!#1\jo>n_!!6EfjoX]-C@2*$=9,/r^As)^=9*[G^ArTI
=T0$8K`8(R>P&X18,]Oi8*q&j+97&nVZ:'&+SQuY9`:jh9^Nu%!!'"tjoB/g!!#^kjoA*B!<-($?Fg'M
!+tq,!1*W!!P*%8=T2G%'`fDOriH/Lp([RHriH3r1[GkU+9<m_rhf`Op)j?Trhfdh3p\!g!!*S^roO2&
p&G)MroO76/c>\=!<$"'B">[k\SV(D!Gnh9^B(-BlWF*#"Y$4KXeR]J'`g+OriH3S.I.`I+9aNmVl-.J
q]Gt`+?GM]VZDE*lQH-+"WuCZk1D9]!!+[^roO6\+6rq)=93$=rkAJpB)Ym6?@&[O^B(T\kuds#rY5G_
RJs;hB.<fp!ZspnriH3h53Wg[+9=6_rhfd21B&Bt-qoX"VZE&Nkofm(!?]A]joKiOrW!!09Y(/b!QR@r
!;-?g=93u`rkAKEZ2D?;Uk.]2q@s$/U].@rURD%^!JFA6(&B$R<hKAh!M>YTVZDENk90U$!F4:VjoO,T
r8n$Z>iu+^=:'&7X1?!UX.>&Qj]M?o$PaC?E0$crUQ9b++6=74+:1GUNM!,@NI+t[jWO<u#sF0Vf]Lhs
RVE?!!;Z]j=:'&7X1?!UX.>&Qj]M9m#sN<hUTL;PHWqTR(&/mX6ue3YVk8rq?7>Xmllc''#sF0Vf]Lhs
RVE>o!.Y~>

%%EndBinary
grestore
np
382.567 223.226 mo
382.577 216.39 388.297 210.816 395.352 210.816 cv
402.407 210.816 408.127 216.39 408.127 223.266 cv
408.127 230.142 402.407 235.716 395.352 235.716 cv
388.297 235.716 382.577 230.142 382.567 223.226 cv
0 0 0 0 cmyk
ef
382.094 222.599 mo
382.145 221.941 li
382.23 221.293 li
382.347 220.654 li
382.496 220.027 li
382.675 219.412 li
382.884 218.809 li
383.122 218.221 li
383.388 217.647 li
383.682 217.088 li
384.002 216.546 li
384.348 216.02 li
384.718 215.512 li
385.112 215.023 li
385.53 214.554 li
385.97 214.104 li
386.431 213.676 li
386.912 213.269 li
387.414 212.885 li
387.934 212.524 li
388.473 212.188 li
389.029 211.877 li
389.601 211.591 li
390.189 211.332 li
390.791 211.1 li
391.408 210.897 li
392.038 210.723 li
392.68 210.578 li
393.333 210.465 li
393.997 210.383 li
394.67 210.333 li
395.352 210.316 li
396.034 210.333 li
396.707 210.383 li
397.371 210.465 li
398.024 210.578 li
398.666 210.723 li
399.296 210.897 li
399.912 211.1 li
400.515 211.332 li
401.103 211.591 li
401.675 211.877 li
402.231 212.188 li
402.77 212.524 li
403.29 212.885 li
403.792 213.269 li
404.273 213.676 li
404.734 214.104 li
405.174 214.554 li
405.592 215.023 li
405.986 215.512 li
406.356 216.02 li
406.702 216.546 li
407.022 217.088 li
407.316 217.647 li
407.582 218.221 li
407.82 218.809 li
408.029 219.412 li
408.208 220.027 li
408.357 220.654 li
408.474 221.293 li
408.558 221.941 li
408.61 222.599 li
408.627 223.266 li
408.61 223.933 li
408.558 224.591 li
408.474 225.239 li
408.357 225.878 li
408.208 226.505 li
408.029 227.12 li
407.82 227.723 li
407.582 228.311 li
407.316 228.885 li
407.022 229.444 li
406.702 229.986 li
406.356 230.512 li
405.986 231.019 li
405.592 231.509 li
405.174 231.978 li
404.734 232.428 li
404.273 232.856 li
403.792 233.263 li
403.29 233.647 li
402.77 234.007 li
402.231 234.344 li
401.675 234.655 li
401.103 234.941 li
400.515 235.2 li
399.912 235.432 li
399.296 235.635 li
398.666 235.809 li
398.024 235.954 li
397.371 236.067 li
396.707 236.149 li
396.034 236.199 li
395.352 236.216 li
394.67 236.199 li
393.997 236.149 li
393.333 236.067 li
392.68 235.954 li
392.038 235.809 li
391.408 235.635 li
390.791 235.432 li
390.189 235.2 li
389.601 234.941 li
389.029 234.655 li
388.473 234.344 li
387.934 234.007 li
387.414 233.647 li
386.912 233.263 li
386.431 232.856 li
385.97 232.428 li
385.53 231.978 li
385.112 231.509 li
384.718 231.019 li
384.348 230.512 li
384.002 229.986 li
383.682 229.444 li
383.388 228.885 li
383.122 228.311 li
382.884 227.723 li
382.675 227.12 li
382.496 226.505 li
382.347 225.878 li
382.23 225.239 li
382.145 224.591 li
382.094 223.933 li
382.077 223.266 li
382.094 222.599 li
cp
383.077 223.279 mo
383.077 223.253 li
383.093 223.894 li
383.092 223.868 li
383.141 224.5 li
383.139 224.474 li
383.22 225.097 li
383.216 225.072 li
383.328 225.685 li
383.323 225.66 li
383.466 226.262 li
383.459 226.238 li
383.631 226.828 li
383.624 226.804 li
383.824 227.383 li
383.816 227.359 li
384.044 227.925 li
384.034 227.902 li
384.29 228.453 li
384.279 228.431 li
384.561 228.968 li
384.55 228.946 li
384.857 229.468 li
384.844 229.447 li
385.176 229.952 li
385.163 229.932 li
385.519 230.42 li
385.504 230.401 li
385.883 230.871 li
385.868 230.853 li
386.269 231.305 li
386.253 231.287 li
386.676 231.72 li
386.659 231.703 li
387.103 232.115 li
387.085 232.1 li
387.548 232.491 li
387.53 232.476 li
388.013 232.846 li
387.993 232.832 li
388.494 233.179 li
388.474 233.166 li
388.993 233.489 li
388.972 233.477 li
389.507 233.777 li
389.486 233.766 li
390.037 234.041 li
390.015 234.031 li
390.581 234.28 li
390.559 234.271 li
391.139 234.494 li
391.116 234.486 li
391.71 234.681 li
391.686 234.674 li
392.293 234.842 li
392.269 234.836 li
392.887 234.975 li
392.863 234.97 li
393.492 235.08 li
393.468 235.076 li
394.107 235.155 li
394.083 235.153 li
394.732 235.201 li
394.707 235.2 li
395.364 235.216 li
395.34 235.216 li
395.997 235.2 li
395.972 235.201 li
396.621 235.153 li
396.597 235.155 li
397.236 235.076 li
397.212 235.08 li
397.841 234.97 li
397.817 234.975 li
398.435 234.836 li
398.411 234.842 li
399.018 234.674 li
398.994 234.681 li
399.588 234.486 li
399.565 234.494 li
400.145 234.271 li
400.123 234.28 li
400.689 234.031 li
400.667 234.041 li
401.218 233.766 li
401.197 233.777 li
401.732 233.477 li
401.711 233.489 li
402.23 233.166 li
402.21 233.179 li
402.711 232.832 li
402.691 232.846 li
403.174 232.476 li
403.156 232.491 li
403.619 232.1 li
403.601 232.115 li
404.045 231.703 li
404.028 231.72 li
404.451 231.287 li
404.435 231.305 li
404.836 230.853 li
404.821 230.871 li
405.2 230.401 li
405.185 230.42 li
405.541 229.932 li
405.527 229.952 li
405.86 229.447 li
405.847 229.468 li
406.154 228.946 li
406.143 228.968 li
406.425 228.431 li
406.414 228.453 li
406.67 227.902 li
406.66 227.925 li
406.888 227.359 li
406.879 227.383 li
407.08 226.804 li
407.073 226.828 li
407.245 226.238 li
407.238 226.262 li
407.381 225.66 li
407.376 225.685 li
407.488 225.072 li
407.484 225.097 li
407.565 224.474 li
407.563 224.5 li
407.612 223.868 li
407.611 223.894 li
407.627 223.253 li
407.627 223.279 li
407.611 222.638 li
407.612 222.664 li
407.563 222.032 li
407.565 222.058 li
407.484 221.435 li
407.488 221.46 li
407.376 220.847 li
407.381 220.872 li
407.238 220.27 li
407.245 220.294 li
407.073 219.704 li
407.08 219.728 li
406.879 219.149 li
406.888 219.173 li
406.66 218.607 li
406.67 218.63 li
406.414 218.079 li
406.425 218.101 li
406.143 217.564 li
406.154 217.586 li
405.847 217.064 li
405.86 217.085 li
405.527 216.58 li
405.541 216.6 li
405.185 216.112 li
405.2 216.131 li
404.821 215.66 li
404.836 215.679 li
404.435 215.227 li
404.451 215.245 li
404.028 214.812 li
404.045 214.829 li
403.601 214.417 li
403.619 214.432 li
403.156 214.041 li
403.174 214.056 li
402.691 213.686 li
402.711 213.7 li
402.21 213.353 li
402.23 213.366 li
401.711 213.042 li
401.732 213.055 li
401.197 212.755 li
401.218 212.766 li
400.667 212.491 li
400.689 212.501 li
400.123 212.252 li
400.145 212.261 li
399.565 212.038 li
399.588 212.046 li
398.994 211.851 li
399.018 211.858 li
398.411 211.69 li
398.435 211.696 li
397.817 211.557 li
397.841 211.562 li
397.212 211.452 li
397.236 211.456 li
396.597 211.376 li
396.621 211.379 li
395.972 211.331 li
395.997 211.332 li
395.34 211.316 li
395.364 211.316 li
394.707 211.332 li
394.732 211.331 li
394.083 211.379 li
394.107 211.376 li
393.468 211.456 li
393.492 211.452 li
392.863 211.562 li
392.887 211.557 li
392.269 211.696 li
392.293 211.69 li
391.686 211.858 li
391.71 211.851 li
391.116 212.046 li
391.139 212.038 li
390.559 212.261 li
390.581 212.252 li
390.015 212.501 li
390.037 212.491 li
389.486 212.766 li
389.507 212.755 li
388.972 213.055 li
388.993 213.042 li
388.474 213.366 li
388.494 213.353 li
387.993 213.7 li
388.013 213.686 li
387.53 214.056 li
387.548 214.041 li
387.085 214.432 li
387.103 214.417 li
386.659 214.829 li
386.676 214.812 li
386.253 215.245 li
386.269 215.227 li
385.868 215.679 li
385.883 215.66 li
385.504 216.131 li
385.519 216.112 li
385.163 216.6 li
385.176 216.58 li
384.844 217.085 li
384.857 217.064 li
384.55 217.586 li
384.561 217.564 li
384.279 218.101 li
384.29 218.079 li
384.034 218.63 li
384.044 218.607 li
383.816 219.173 li
383.824 219.149 li
383.624 219.728 li
383.631 219.704 li
383.459 220.294 li
383.466 220.27 li
383.323 220.872 li
383.328 220.847 li
383.216 221.46 li
383.22 221.435 li
383.139 222.058 li
383.141 222.032 li
383.092 222.664 li
383.093 222.638 li
383.077 223.279 li
.750271 .679713 .654902 .901946 cmyk
f
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
386.427 225.616 mo
(x)sh
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
386.427 225.616 mo
(x) false chp
.38753 lw
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
393.677 228.266 mo
(t)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
393.677 228.266 mo
(t) false chp
.25025 lw
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
396.777 228.266 mo
(+)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
396.777 228.266 mo
(+) false chp
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
402.027 228.266 mo
(1)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
402.027 228.266 mo
(1) false chp
@
82.5187 115.55 mo
78.9987 109.562 li
79.8627 109.559 li
76.3828 115.57 li
76.2838 115.692 li
76.1527 115.777 li
76.0017 115.817 li
75.8457 115.809 li
75.6997 115.753 li
75.5778 115.654 li
75.4927 115.523 li
75.4528 115.372 li
75.4608 115.215 li
75.5168 115.069 li
79.4268 108.316 li
83.3807 115.043 li
83.4377 115.189 li
83.4478 115.345 li
83.4077 115.497 li
83.3237 115.628 li
83.2028 115.728 li
83.0577 115.785 li
82.9017 115.794 li
82.7498 115.755 li
82.6177 115.671 li
82.5187 115.55 li
cp
79.2767 214.168 mo
78.9297 109.31 li
79.9297 109.307 li
80.2767 214.164 li
79.2767 214.168 li
f
393.519 117.993 mo
397.052 112.013 li
396.188 112.008 li
399.655 118.027 li
399.754 118.149 li
399.885 118.234 li
400.036 118.275 li
400.192 118.267 li
400.338 118.211 li
400.46 118.112 li
400.545 117.981 li
400.586 117.83 li
400.578 117.674 li
400.522 117.528 li
396.627 110.766 li
392.658 117.485 li
392.601 117.63 li
392.591 117.786 li
392.63 117.938 li
392.714 118.07 li
392.834 118.169 li
392.98 118.227 li
393.136 118.237 li
393.287 118.198 li
393.419 118.114 li
393.519 117.993 li
cp
396.577 210.819 mo
397.122 111.761 li
396.122 111.756 li
395.577 210.813 li
396.577 210.819 li
f
66.8467 225.026 mo
66.8268 218.14 72.5468 212.566 79.6017 212.566 cv
86.6567 212.566 92.3767 218.14 92.3767 225.016 cv
92.3767 231.892 86.6567 237.466 79.6017 237.466 cv
72.5468 237.466 66.8268 231.892 66.8467 225.026 cv
0 0 0 0 cmyk
ef
66.3438 224.349 mo
66.3947 223.691 li
66.4797 223.043 li
66.5967 222.404 li
66.7458 221.777 li
66.9247 221.162 li
67.1338 220.559 li
67.3717 219.971 li
67.6378 219.397 li
67.9317 218.838 li
68.2517 218.296 li
68.5977 217.77 li
68.9677 217.263 li
69.3618 216.773 li
69.7798 216.304 li
70.2198 215.854 li
70.6808 215.426 li
71.1617 215.019 li
71.6638 214.635 li
72.1837 214.275 li
72.7227 213.938 li
73.2787 213.627 li
73.8507 213.341 li
74.4388 213.082 li
75.0407 212.85 li
75.6577 212.647 li
76.2878 212.473 li
76.9297 212.328 li
77.5827 212.215 li
78.2467 212.133 li
78.9197 212.083 li
79.6017 212.066 li
80.2838 212.083 li
80.9568 212.133 li
81.6208 212.215 li
82.2737 212.328 li
82.9157 212.473 li
83.5457 212.647 li
84.1628 212.85 li
84.7647 213.082 li
85.3528 213.341 li
85.9247 213.627 li
86.4807 213.938 li
87.0197 214.275 li
87.5397 214.635 li
88.0417 215.019 li
88.5227 215.426 li
88.9837 215.854 li
89.4237 216.304 li
89.8408 216.773 li
90.2357 217.263 li
90.6057 217.77 li
90.9518 218.296 li
91.2718 218.838 li
91.5657 219.397 li
91.8318 219.971 li
92.0697 220.559 li
92.2787 221.162 li
92.4577 221.777 li
92.6068 222.404 li
92.7238 223.043 li
92.8077 223.691 li
92.8597 224.349 li
92.8767 225.016 li
92.8597 225.683 li
92.8077 226.341 li
92.7238 226.989 li
92.6068 227.628 li
92.4577 228.255 li
92.2787 228.87 li
92.0697 229.473 li
91.8318 230.061 li
91.5657 230.635 li
91.2718 231.194 li
90.9518 231.736 li
90.6057 232.262 li
90.2357 232.769 li
89.8408 233.259 li
89.4237 233.728 li
88.9837 234.178 li
88.5227 234.606 li
88.0417 235.013 li
87.5397 235.397 li
87.0197 235.757 li
86.4807 236.094 li
85.9247 236.405 li
85.3528 236.691 li
84.7647 236.95 li
84.1628 237.182 li
83.5457 237.385 li
82.9157 237.559 li
82.2737 237.704 li
81.6208 237.817 li
80.9568 237.899 li
80.2838 237.949 li
79.6017 237.966 li
78.9197 237.949 li
78.2467 237.899 li
77.5827 237.817 li
76.9297 237.704 li
76.2878 237.559 li
75.6577 237.385 li
75.0407 237.182 li
74.4388 236.95 li
73.8507 236.691 li
73.2787 236.405 li
72.7227 236.094 li
72.1837 235.757 li
71.6638 235.397 li
71.1617 235.013 li
70.6808 234.606 li
70.2198 234.178 li
69.7798 233.728 li
69.3618 233.259 li
68.9677 232.769 li
68.5977 232.262 li
68.2517 231.736 li
67.9317 231.194 li
67.6378 230.635 li
67.3717 230.061 li
67.1338 229.473 li
66.9247 228.87 li
66.7458 228.255 li
66.5967 227.628 li
66.4797 226.989 li
66.3947 226.341 li
66.3438 225.683 li
66.3268 225.016 li
66.3438 224.349 li
cp
67.3268 225.029 mo
67.3268 225.003 li
67.3427 225.644 li
67.3417 225.618 li
67.3907 226.25 li
67.3887 226.224 li
67.4698 226.847 li
67.4658 226.822 li
67.5778 227.435 li
67.5728 227.41 li
67.7158 228.012 li
67.7087 227.988 li
67.8807 228.578 li
67.8737 228.554 li
68.0747 229.133 li
68.0657 229.109 li
68.2937 229.675 li
68.2838 229.652 li
68.5397 230.203 li
68.5287 230.181 li
68.8108 230.718 li
68.7987 230.696 li
69.1068 231.218 li
69.0938 231.197 li
69.4258 231.702 li
69.4128 231.682 li
69.7687 232.17 li
69.7538 232.151 li
70.1328 232.622 li
70.1177 232.603 li
70.5187 233.055 li
70.5027 233.037 li
70.9258 233.47 li
70.9088 233.453 li
71.3528 233.865 li
71.3347 233.85 li
71.7978 234.241 li
71.7798 234.226 li
72.2617 234.596 li
72.2427 234.582 li
72.7437 234.929 li
72.7238 234.916 li
73.2427 235.24 li
73.2217 235.227 li
73.7567 235.527 li
73.7357 235.516 li
74.2867 235.791 li
74.2647 235.781 li
74.8307 236.03 li
74.8087 236.021 li
75.3887 236.244 li
75.3658 236.236 li
75.9597 236.431 li
75.9358 236.424 li
76.5428 236.592 li
76.5187 236.586 li
77.1367 236.725 li
77.1127 236.72 li
77.7418 236.83 li
77.7177 236.826 li
78.3568 236.906 li
78.3327 236.903 li
78.9818 236.951 li
78.9568 236.95 li
79.6137 236.966 li
79.5898 236.966 li
80.2467 236.95 li
80.2217 236.951 li
80.8708 236.903 li
80.8467 236.906 li
81.4857 236.826 li
81.4617 236.83 li
82.0908 236.72 li
82.0667 236.725 li
82.6848 236.586 li
82.6607 236.592 li
83.2668 236.424 li
83.2437 236.431 li
83.8377 236.236 li
83.8148 236.244 li
84.3947 236.021 li
84.3727 236.03 li
84.9388 235.781 li
84.9167 235.791 li
85.4677 235.516 li
85.4467 235.527 li
85.9818 235.227 li
85.9608 235.24 li
86.4797 234.916 li
86.4597 234.929 li
86.9608 234.582 li
86.9407 234.596 li
87.4237 234.226 li
87.4057 234.241 li
87.8687 233.85 li
87.8507 233.865 li
88.2947 233.453 li
88.2777 233.47 li
88.7007 233.037 li
88.6848 233.055 li
89.0858 232.603 li
89.0707 232.622 li
89.4497 232.151 li
89.4348 232.17 li
89.7907 231.682 li
89.7767 231.702 li
90.1097 231.197 li
90.0967 231.218 li
90.4037 230.696 li
90.3918 230.718 li
90.6747 230.181 li
90.6638 230.203 li
90.9187 229.652 li
90.9098 229.675 li
91.1378 229.109 li
91.1288 229.133 li
91.3297 228.554 li
91.3228 228.578 li
91.4948 227.988 li
91.4877 228.012 li
91.6307 227.41 li
91.6257 227.435 li
91.7377 226.822 li
91.7337 226.847 li
91.8148 226.224 li
91.8127 226.25 li
91.8618 225.618 li
91.8607 225.644 li
91.8767 225.003 li
91.8767 225.029 li
91.8607 224.388 li
91.8618 224.414 li
91.8127 223.782 li
91.8148 223.808 li
91.7337 223.185 li
91.7377 223.21 li
91.6257 222.597 li
91.6307 222.622 li
91.4877 222.02 li
91.4948 222.044 li
91.3228 221.454 li
91.3297 221.478 li
91.1288 220.899 li
91.1378 220.923 li
90.9098 220.357 li
90.9187 220.38 li
90.6638 219.829 li
90.6747 219.851 li
90.3918 219.314 li
90.4037 219.336 li
90.0967 218.814 li
90.1097 218.835 li
89.7767 218.33 li
89.7907 218.35 li
89.4348 217.862 li
89.4497 217.881 li
89.0707 217.411 li
89.0858 217.429 li
88.6848 216.977 li
88.7007 216.995 li
88.2777 216.562 li
88.2947 216.579 li
87.8507 216.167 li
87.8687 216.182 li
87.4057 215.791 li
87.4237 215.806 li
86.9407 215.436 li
86.9608 215.45 li
86.4597 215.103 li
86.4797 215.116 li
85.9608 214.792 li
85.9818 214.805 li
85.4467 214.505 li
85.4677 214.516 li
84.9167 214.241 li
84.9388 214.251 li
84.3727 214.002 li
84.3947 214.011 li
83.8148 213.788 li
83.8377 213.796 li
83.2437 213.601 li
83.2668 213.608 li
82.6607 213.44 li
82.6848 213.446 li
82.0667 213.307 li
82.0908 213.312 li
81.4617 213.202 li
81.4857 213.206 li
80.8467 213.126 li
80.8708 213.129 li
80.2217 213.081 li
80.2467 213.082 li
79.5898 213.066 li
79.6137 213.066 li
78.9568 213.082 li
78.9818 213.081 li
78.3327 213.129 li
78.3568 213.126 li
77.7177 213.206 li
77.7418 213.202 li
77.1127 213.312 li
77.1367 213.307 li
76.5187 213.446 li
76.5428 213.44 li
75.9358 213.608 li
75.9597 213.601 li
75.3658 213.796 li
75.3887 213.788 li
74.8087 214.011 li
74.8307 214.002 li
74.2647 214.251 li
74.2867 214.241 li
73.7357 214.516 li
73.7567 214.505 li
73.2217 214.805 li
73.2427 214.792 li
72.7238 215.116 li
72.7437 215.103 li
72.2427 215.45 li
72.2617 215.436 li
71.7798 215.806 li
71.7978 215.791 li
71.3347 216.182 li
71.3528 216.167 li
70.9088 216.579 li
70.9258 216.562 li
70.5027 216.995 li
70.5187 216.977 li
70.1177 217.429 li
70.1328 217.411 li
69.7538 217.881 li
69.7687 217.862 li
69.4128 218.35 li
69.4258 218.33 li
69.0938 218.835 li
69.1068 218.814 li
68.7987 219.336 li
68.8108 219.314 li
68.5287 219.851 li
68.5397 219.829 li
68.2838 220.38 li
68.2937 220.357 li
68.0657 220.923 li
68.0747 220.899 li
67.8737 221.478 li
67.8807 221.454 li
67.7087 222.044 li
67.7158 222.02 li
67.5728 222.622 li
67.5778 222.597 li
67.4658 223.21 li
67.4698 223.185 li
67.3887 223.808 li
67.3907 223.782 li
67.3417 224.414 li
67.3427 224.388 li
67.3268 225.029 li
.750271 .679713 .654902 .901946 cmyk
f
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
70.6768 227.366 mo
(x)sh
ZWRLRA+HelveticaNeue*1 [13.55 0 0 -13.55 0 0 ]msf
70.6768 227.366 mo
(x) false chp
.38753 lw
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
77.9268 230.016 mo
(t)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
77.9268 230.016 mo
(t) false chp
.25025 lw
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
81.0267 230.016 mo
(-)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
81.0267 230.016 mo
(-) false chp
@
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
84.5768 230.016 mo
(1)sh
ZWRLRA+HelveticaNeue*1 [8.75 0 0 -8.75 0 0 ]msf
84.5768 230.016 mo
(1) false chp
@
288.607 93.0261 mo
274.687 93.0261 li
274.687 72.626 li
288.607 72.626 li
288.607 93.0261 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[14.2912 0 0 20.7579 -69.7721 205.122 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 77 
/H 116 
/M[77 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 77 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 77 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 77 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 77 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
aoMGf])_a/s!"lOruoqni;im0[K-=RnGpQ/s!#2Xp]1=;[K-=Zg&Tt0"*;5lB=IpDBW\CBp&Mu1"(\=-
>/UF6!!A,@k'XZ=")#B`VV_C-!!?N/Xd6Hs"'VV#Ono'm!!@W2k/YOCnGiPFrkAFN\GuU^riH/:j8da2
!%n2J!#E*F!'U>D!ZqCB\cD`E!*IJGli@$e!)U0*rhf`jkQ'!1roO2q\,ZPu^B)*<\,ZVhXf[N/!9aCb
L8Ur(\,ZWAk2s5@!6kKD9`Dd,%(cK@!!#IeXT/a>!!#CcVZ7(T!9=+[>lNjc%_)N<^Aqp:!6>0>XT2YA
!;Z]pVZ9o1!<2*\I+eSX!!%QK^An\Q!!%-?XT/b&!5nj;E;la8$H)r<!!&Jejo>n%!!!o9^Aqp(!8@JR
(]LN:?+Bq8(B133>5A67!!",?joBeM!:^$hF8ioS%(Q?<B`>+6$fh<=!!$R/VZ7(7!!%oUjoQ"m!4r42
%0"!AN6M@i!!!E+XT3j]!!!B*VZ;&,!7CiI%fYSjWOMp/B>4M_^KC(-`rH*FriH/s_#X92!*]B"!):!(
!.=e.!,C9hh#IGDrkAFZ\GuVfriH/Ep]//2!/CKN!$T>^oDem%roO24\GudAZbO8])<(YL!!Nb)Xf\<6
\c;m@SYrBV(B"6I!!Nkbk2t;<b5gu2!&OVh!OEZT!!"YNXT>.4k5a!3!%n2J!M(";!!#1]joF$6+1V@O
=T6&9ZR+!!l2Uf\riH3q,.[aS:&_$kSK[>"cN!r[roO76/\1o_!*K37!)0s(!)WWr!(GH=jT#9TrMKW_
\c;_FrT4)bnGpZ2!*K37!ItTp!;c`r;#RKsF:5\\!)<Ei!H8D$!8mhWCAm8qRLZn/!'gCr!)3.f_uKct
r2frf`W5]4!&shR!(4?u!)3=Q!*o="!t6J37dX=@=922[p+l\]r4`<>=:G*-!t-;*5grO182g/o!+#N)
"JS^#!!)uu!t$2'51<4,75X]i!*];u!hE$mqu?g//Nm+bCAqrK?qBuS!.=_,!n_5trW)s9\\A8[!!!fO
mB+X8"C2!-()FN[#,eA&!!")_\`O$B!!#\df"^7[rs\or\?5c=s$Q=SaJ]%Fs'3>$qW7qk%L`c)Zb4$X
J/J=e$O_HYgo]P;#BUa^!"''ZS\1j*E#&ER%M#JjpZBKX!Lb+F!!*'nr4`8R)8#qL7Js7gBG];$jT#9J
r20R+(;'VI>l<^bMBDEib5_N`rP&Al)8?1M!!$^2XT<nfqZ+G4!+c&+!I>O'!:p0jMZ)Z<W?8bQ!0$ol
!OG#M!8.>PJ,ZPNU,fdb!.+XB!M)1J!58F5WW)#\fM'HgnGiQJrkAK2%(ZE=J,ZPNQ4)dSec5\rrhfdZ
$G$3;WW)#]`sr*^!!%QK^As5:!:BgeFT/BBJ%5OZE;la8HKP:W!!&JejoDBl!!$.#^Arep!!#jpXT3Ih
!:'Ub:&_$jE4GrKCB!>qRd'n#!!">E^As5'!!+:G!j/SS\GuUQrhfaBdK&J2!%n34!3*O0":VWO^S^>t
c2[tTU91P`\c;m6$D")mOgtGp%bTq+a411O!!%*>^AoRj!!$^3XT0R7!6P9AAH&J,+hdsS!!%oUjo@!E
!!!o9^AqBg!9*tY(]LN::q6Q+(B133:%JA*!!",?joB/4!;QTsN5*-)\,ZV\Xf[oD!8[\XHDd['\,ZW1
k2s_X!5nj;-2tXZ5K!Qq!!"5BXT1Al!!"2AVZ8[5!8@JR/cOl49Xt-*N5*,rq#J21"+RGTMoPhg!!@PF
VhV\]"0(GF\`*VA!!!H,^Aps<!!!E+XT1fg!5/@4$N?q'6d#Ju!!!N.joAYs!!??<^U*#%e,TSIXf\>-
!!H#oVk!hW!6P9DC?F[2]`@s1"/`iJF1;2PQE@9&fDsk1"-KLZA@MUAa6)NAo)Qf2!"AkA!&MFkq#CC&
riH/Q\GuU:rhf`Jg]612!"T"j!'Rjm!'gItp&Mu1!'1%\_uTH1!&snT\,ZM&roW2?!XpA2#Y\?5J;fr'
^N8E8"*;5lN8agF$R.2l:gJ0mMk[=eirB0pXf[*L!9jIk$6^ug9j2L^L7P5QirB0lVl+k#!"08g4^;`L
R]3jMk)/a1nGiZKk2rZ'!!%QC^ArfE!!??<^GFmM!-Iq:!-I6$"&Q,%0&lp3E;$10E8pp#9rFm@rW)'\
!1NWD!1MpJ")?u\4lZMBZhD-69_SP1!!&beXT1f/!;ultSbAr]6bra&f_4G->i5VA!!P/\B4lb$qnE+K
_#OWk:gI@KUAM%m(]+3Q!!OrK>$>m9qkjE0aT2,:"[-UJI%&^bjo?L8!!'A(^AtV#!8%8OUA_1oU:L=)
Sc,GdSc/W&!!([MjoF&X!:KmfZi.W=J@Y^\UA_1oFQWYR!!&SgVZ:\I!!([MjoCj^!!!H*^ApsS!:0[c
$iI+,7CrO"$N-e%6gFa"!!!N,joAYu!!,=!rP&=Y])Vgkr2frCe,\\4!&shR!$SrS!)3=Q!%mX>bl@`b
r4flE!WW46r2mO1!+c#*f)Xk3!/g^:\c;`-rP&>knc6c3!1*Sc!.VcaqZ$VYrMKXA\c;`NrT4*ZgAp^C
nc/Xur4`56])Vg=r2frqjT*m4!"/Y%!):'*!"Sqh!GVVI!!#7]^AoS*!:Bge3W,uZ,.dgT2uKQR+mB!U
!!#^jjo@!F!!%*>^]2'[!!$^1XjI.6!!$R-Vn)j.MYuW'!7(WFVZ"70N4JuhQMmocJ%>U[Oo;0XHIW#X
!!((<joDBm!!!H*^AqC*!6bEC$iI+,:qcr/!!!B(VZ9H'!!!N,joB/L!94%Z5Q&7r-+a-W3W,uZ,4klV
!!"tUVZ7mW!;ZZq9`4#Q/\:u_F8Wf.!8dbVB`,!D!!$R-VtU20!!%oSk/@>o!!&np^As_6!!&>`XT4:;
!8@JROo;0XL:R?ba8P-#\bcBC!!!H*^Aqog!:p0j$iI+,?+U(:$N-e%>3#\9!!!N,joBe@!!"hQ^B-1k
!5/@40)VgO0$OCb!!"VKVZ8<\!!#1[jo@R.!7UuKBDfNU!!$='XT5K7!!$4#VpGG0!!%EEk.1NmRf0u$
Rem'j5BDd\^U'ef9_nb9!!%rUXT4:V!!kSuJ!R42Q?5R;!!%cPVZ;JK!!kMoHBG+rO`3\0!!'S.joDsh
!!l8UWQ4/Ra-p8n!9aC_%/dj?BDql4)/$;T^B([<rP&B>=NgaF$iI+,?2ag*(L<d7XT>/^rN--q:]S`?
!"/Y%!*]@%!Z"t1rhfdfOo;0YSP@B0!WW31r8n!,rW!!AI+\G\!SGHkjoO+LbQ%W!r4`Ln!!#^-^U%Q!
r;Zj_Zi7]>JEd.(!;-<l0)VgW/cYl?Xf\=',5hKB3MQMT!-HHc!%n,H#V?#V6`6iQ=s<hE!B6SKVZ:].
!87DQ4oFFJ4TGIek2t<D/c>YM9\B@,!1M.4!,)5E"98j\^U!o6q#CC@rP&>Fc2[iMr2g,&$ZrMF7JQo`
,5nVD?/>SO!!$4#VZd&-E2T6oq#CC<rMKX!c2[ilr8n._%[uP4>kn@"/cFf3I/*cn!!&Jd^BL&+R_Odi
pAb2^rP&=McN!s'rN-*Y!!A.]IgbuN!/pfX!#Nr]!/CHM"bm#3Vg8^E!!%cPVZ7Lm!:9ad\c(Xo\H'2&
W=JY&!4i'j!$BPf!"Ae?"*9F9JFrmB9`;^+F8c0g!!!E)XTN6dX`X49!(Hjg!,0^Z!"/_'"fJ8/HDb`T
!!#CbVZ:8S!!!N,jo^L?k*krC!*oKb!/fq>l2Uf?r4`<>^OYqV!&OSg!2e*C!&"2O!huf=oDekDrN-'c
ci=%tr20UeVf;8.!%n/I!0PV.!'U8B!ncY(oDekSrT4+#ci=&YqnE-.o)Jb:r4hOtjo>BeqlKjao)Jb7
r2n<G!*]8t!0QjQ!$V9<ci=&nqrRn!o)JbBr8uK/r;ZhdqnE+Ko)JbHr4`4?d/X0)qlKi7o)JbCr2fr,
n,VGJ!/CBK!#G/+!%n,H!".*R!4i!h!$Cn7rVup]r8mthd/a'Y!*Jdl!)3=*!"@N\q#L;o!)W4d!(Hgf
!"70SqkjEgnc/YWr20N%oDm_JqrRlnnc/Ypr8mthdJs8'r4`6/p]1-j!,)8F!41&Q!&"2O!1*-T!+#Q*
!2A6Kp&G(Er20OWnGiPmrMKXdd/X/0r8n""nGiQ:rT4+4pAiqJ!,)5E!&O-F!.b$_!1M:8!+#N)!&"0L
p&G)7rN-'Xd/X/Mr20NHnGiQ.rMKXMhuN<J!.=_,!'TiP!1NlK!4gJW!1Nl$!1NBW!2f_0!.aqHf)Pf/
rN-'Xn,NHSrN-'Ad/X0$rMK^O!!)Qi!0R5X!-$<c!4i'j!4hS!!6>'#!1MsKmK!1"!,(g%!"Ae?!*JIc
!"A,mr2fs)nGiOsr2g#s!!)<b!"8&lr20NunGiOrr20Nhkl:\jl2^eF!Tne"!!!N,joB/\!!!Mp!!"hQ
^Ap([!!#^j^AoSG!!69;^Ar?A!!"YLXT1!D!!#IcXT0R2!!?'"X_@&$!%n,H!%m^@!(6^_!N.+,!!>rn
Ve#,o!'U8B!'TiP!*oHa!%mL:")?u\MX1<CBDfO6!!%QI^Ztk"-2kRY%.+#p?2Uho!!%-=Xm5re,5nVD
$haSq!!$4#VsjZdE;ZX"!!"2@VZ7(k!!%EEk3r?NRf)=@!;?Hn/cFf3%da5rRf0u$Rd^:WZi.W=N9^HD
F8`l?!!%rUXT4:T!;HNoUA_1oJ*R(7B`5("!!%cPVZ;J@!!&SgVZ;&/!!$R.Vtg>b!!'S.joDs]!!([M
joDCH!!%oTk3N*G^Aqp:!!">C^Apt'!:p0jZi7]>N9gQBXT2Ys!!"5@XT1fU!!&bmXT3k;!;r_p>5\Ho
!!"2?VZ9*M!!&ShVZ;&0!;tsZI.71:/c=`2>jD@if`("5WVlhe!!"hQ^Ap([!!$[0^Ao/<!!!o8^AqC'
!!"YLXT1!D!!$=&XT019!:Tsg(]CH9;!e5_/c;LH/b&f@>5Y8u(@2#$(B(-2:$ho\4oFFB4n/LPI/N+,
+7&t-+8t=%C@)!$BDfO6!!'A(^At.s!!#^k^AoSI!!$=&Xmc;jUA_1oQKnMN7K'=g,4,@1>5Y;f!!&Sg
VZDn[li7#QrMKW=m/R-6r9!JK!8.84!6=C*!*oKb!%mR<!h-m=!l)L=nGiP8r4`56lMpp8rkAH>li7$D
rN-'XnGiP5r2frqlMps-XTGW,U?hj[LAe"ML@G6D+oJ5<:$VcZE;la8Sa6=V\c(Xj\a]Y"/cOl6k2pFE
!!&JejoF'#!;sS3BCPs%F8WcQ)=%8&Zi7]>JF*=:!;rr!?1@mpB`+t4([D&$UAh7pFR0#*VZ9oj!!$R-
VZ7M"!!3-#Sc5MeE9mT&joBf!!!%oSjo?Lh!!([NjoCk;!!"hQ^Ap([!!'A(^As_g!!!o8^Apsp!!"YL
XT1!D!!&blXT4:F!!!i6XT1f[!;ult/c;LH/b&f@Sc,GdL?eg>(B(-26gXjR4oFFB4n/LPf_sq4\aTUs
!!",>joAZR!!$[0^[V:(1]4uf=R,qe9`;^+)=7D(?2Uhs!<)ru0)VgO;!S)]7K'=g([V2&>5Y;g!!"VK
VZ9HW!!#CbVZ7M*!;QTpI/N-s!!#1[joB/^!!$:&jo?Lj!!&Jd^As_m!!%*<^An]=!!5B8%/p8%!!%QK
^AtV,!!%rUXT4:L!!$^1XT/b*!!50&$hXK"FT/BBU?hj[LAe"MLA1cF!!$R-VZ7)#!!5)u$M=B!E;la8
Sa6=V\c(Xj\a]Y"MYuT:%f-/,9UZIa!!&JejoF'/!;-?i^Aqp:!!'A(^As5g!!9%4)>sO91UHSc!2f>f
r2fs)nGiQ`rN-'Lq#CG]XT019!!+^Hn>u\Vo)S]d!*\mm!1j(d!.+G@!g0Arr;ZjMSa`NWOn/SNjoBf,
!;6Bmf_sq4WVHMqa6"KB!!,78nE'_koDekIr4`4rnc/YGr4`5*q>^RC^U*h<!*Ja*!PbN(!!"YLXT1BP
!!"YLXT1fd!!4@HUAOuk;"(LdQLk.W/c;LH2t?qK/c;LH6i-ic!$S82qu?^kn#$/JoDekSr8muQnc/YQ
r8muaq>^RKk1KS3!,Cub!6=^3!,)5E!=Su"!!%QI^An]=!!75VF8>n7$ijE.^AoSX%.XAu?2Uf)$h=8t
FSr6@$i0i)BWYtE!;m3);#RKs+q+>Wnc/Ynr20N%nc/Z/r20N%q>^S-Ve#W(r!EEurMKW=r!Mup!.=_,
!"SQ"!1NiJ!Y,21qu?eUk)0!8r!i^ArT4)3r!r8t!1Nl$!2f8dr4`5jq#CK&^ErOQ!.b'`!42"l!/piY
!Nh[X!;rr!J,''GU9,X4!!%-?XT5*^!!%cPVZ;kL!;r_pHMIOBSYmY(!!7,;VZE]dnc8Oe!4i'j!6=U0
r8n!Yq#CKKjt66+!1NoL!8-W<r4`5Qnc/Y-r4`4rq>^RQ^S^l.q>^N%rkAG`li?sc!,1p'!#PR8!'0lU
!\UU@oDelcriH0Bli?s]!+bd'r;Zg5r20NRq>^RKVigTO!1j+e!-%9)r8n!:nc/Y3r8muQq>^R[k/[)o
!8.;5!1NT]p](:Mr4`4rnc/YGr4i%-!h-kto`+t0rP&>7m/R,=r2frZnc/YBr2obp"H0BN!!)`n!#PU9
!)W%_!%n,H!&sHK!%n,Hq#CJNVaL+W!#GO2!);h\!'U8B!)34hq#CCXr9!eT!kIGuo`+t6rT4)pm/R-!
r4`4?nc/YSrP&?0q>^R]^U*P4!)3@+!%%IAoDeksr2fr,nc/YMrN-'cq>^RWXePFf!(Hjg!$^e1!*];u
!"/8s!&skS!0R*X!B6nVSb)m^6iEn_+mf70I/N+,%e9T"9`=)Ra8,c;9]k""!!$:&jo@"#!!&Jd^At/0
!;-<l1]>&gN;<MUVS=qZ!!%QK^AtV,!!%rUXT4[W!!"YMXT3kI!!8Ig0(],DFT/BBUAY)]!!%cPVZ;kL
!!"VLVZ;&>!!8:\/bB#CE;la8Sa6=V\c(Xja70-04oOLCWVc`!!!((%4nJ^SRf;FLf^&V9^Ar?E!<'Y4
F8Gq=F2*7s!!'A)^As5Z!;rr!B^c$#XT3&3!!6i9FRoJ4UAh7pJ*[15VZ:8s!<&eqAGZ?.A>aD<!!&Sh
VZ;&0!;tsZMXUWEjoC;9!!8&?Re$LZf`("5WU0Zc-2bLX5O\XQBE#XHMu`eV")#BG%.jN")?%;M=R?(g
,5ePC3Ud"K?2gr+J,B9K?*0D#oDek-rN-&rm/R22Vl0Nl!&sBI!*]B"!.+PC"'VUb$M4;u(B(-2:$ho\
/c=`29^i#^I/`7.WVc_uI-/HZoDen6k5OKCC@)!$9`2X*%.=/rVZ+=8)#sX_R_P^.o)JbarP&=Ym/R,T
r2fr,mf3?RriHDA!!"4$Xd0@d!!#IdXT0R4!!#CaVZ7(m!!&/\V[!t;!$R)pOUC[[!(6^_!$Ub1!<?C&
jo>n[!!((=jp)t.!%kbD`t%\@!*oKb!%mR<!&OSg!.aJ;!=YFr^At/1^B&inoDepm!-A+Rli7#<rN-'A
mJm7qMuKgYQN!ueF:7X>!,2>5li7#;rMKX7nGrOg!=FS\VZ;kYVZC`Dnc/Z#rMSu^!'U;C!1N<U!=l[>
joEI$joLn\nc/ZIrT<VMqZ$_#Za4<1!!YZHZbNhs-1Cm7VZ+=1N9^HG:nj[ilMq,LJ"j'>F<^DYqZ$V^
riH0MlMq#]SXisM!!YB.SYr#t+n,I3OoD6YHKtP5C=q0doDnXd##)#Kk1H+Sn,NI/roO3[\c;^=rP&>7
o`2u3!"8b-!)UQ5p](:$rMKWi\c;^?rT4)ph>l@3!'gFs!%#2V!'1"[!$_4=_>jQprMKW=`rP`3!)3@R
!%kb^!-A+Ri;hO2!,2>5\GuV?rMTPn^&S.jrT;6&n,NHcrkAGlp](>R9Z-o2QN!udJ+s!EImri,eGoT3
rhfaBp](>@6c8s)a8Y3%W;u_o!NB?#!6YB@^AqC3!!6fJB?1)O!<'#";#((m?*.DN!<&eq:&+bj>,PQa
!9+"WjoB/l!!7Q1I)Q'c-2kRY-2ITD%)9OprW(">!$_BD!$_7>!t265(X)mU!!"2@VZ7n:!!<S+V\[5O
!%n03!%n$I!tOJU+6NX]!!#^k^\Ij2F2)A+!!#IdXn_quBWYRY!!#CbVtg;oA>`VW!;6Bm>lEg\!!8&?
I)H!bF8ioSZhaY'1V]gO!8@JRB`>+6UA=ik0!1GW!!$R/VZ<:a!!4aMOi%/!MZ2`<f_PRL4m'f5!:g*i
=T6&8Rem'e)8EpB_Z0[5riH0YqZ$^7XfX5C!7q2N:&_$jLALrQ(8n&^_Z0[OroO3krW)ot"!?[f4i77"
-2tXZVYgDr-*t?[eH#";!$_EE!1*N_"!XJA7D]$)+o\A>Oo,1]+e>Mun,Uo;!%n34!6>!;""i0f>epCA
B>;1^^ErjZ"'E=Q=MOn:?2gr+,5qQE:p$irfDt.9!*]B"!$V=A"&5\k9u$`/I/`7./cG_PC?FYno)R#8
!.b'`"b;Q<^U#`3!!3-#FT/BGFFU$eU+X.[!-%q8"`SdYVk#Eo!9=+[Rf;FQR]4s%fKHnJ"snes^SZrS
oDlr4"sS/TXd4Gs_>sE4"sIrJVic9a])W$eR`FR2WD)+JhZ*j,J>U)YN'FoS"sS/TXd4Gsp]/54"sIrJ
Vic9a`W5]4"tc:ak/XGpo)O:~>

%%EndBinary
grestore
np
400.567 104.306 mo
386.647 104.306 li
386.647 93.3861 li
400.567 93.3861 li
400.567 104.306 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[14.102 0 0 11.102 42.2825 193.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 155 
/H 122 
/M[155 0 0 -122 0 122 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 155 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 155 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 155 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 155 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcPZJs!<O&hZ3[#V?"L6ruo5ZVZ?`Kh>iH6s!@LAJcP3=s!!d0dK':jZN.E6s"2OsRfEP3^V=FJ!.k4M
!!?o:X^-b`iW''kVl*^p!6,!@MWX&K_#UJ8")#B`VVM64!!?N/Xd8b_JcP<@"'VV#Od6!t!!@W2k/Xb-
\GuUcrkAFNcN'L9!&"8Q!#Or$JcGfO/cMXJ(5MtO!!#1]jo?L!!65*=^AqBO!36,!XT22Q!07-ZVZ9Hd
!.k4A!<2*\C6\eM!!A\)^RDD-\c;hjXf[NM!.k4J!!@tRVhU-1hZ*bhk2s4Q!5ed:9`Dd,%)i4E!!#Ie
XT/af!/ggW6iNt`$N0sV!:Bge>lNjc%[mCF!<0_5B=7fJ!<0)#?.&_@!</kr>4)BB!;lirjoBde!8mhW
JH!:`%&a0E!!%-?XT/aI!2oktE;la8$K(oC!!&Jejo>nh!.k4>!!!o9^Aqo7!7LoJ(]LN:?*s[A!!!f6
VZ9oJ!1Nrg+9(C&I-goc!;ultF8ioS%#Y,E!!$^3XT/a,!6"p<AH&J,$GukC!!%oUjo>nK!0$sY%0"!A
N;EU,!:Tsg$i[7.J!^5c!!!B*VZ;%M!4W"/%fYSjWU^%@!;HNoBE#XG=HEO<!!$=(XT22!!5JR7>5kE"
9um=1!!%EGjoB/W!/COSRf:&%-%Z-^!!%rVXT0Q:!6tQELAn(N+h@ZZ!!'S/jo@!a!1!Tg%(!^`ZPi?7
JcPTH"Uh',XeHVn!8RVY$D")mSJJ:,_#OWKf]M>K+34GX!!"hS^B(YYjT():!&"8Q!MUB^!:'Ub/cMXK
SJIdscN!r.roO76+1_HX!!$.#^B(Yef)V*:!)WZs!MUe0!.k4H!!#amVZE>3O9"):!,DMq!SB!*!5JR7
=T,u79Z[:1!!#joXT1fO!/LUT:&Usi6\5=(!!$d4joAYX!6tQE=T,u8J.0'jZ2al$rN-*B$i0jT!:p0j
:&UsjE!hp3f)PecrT4-L%^Q/H!!#7]^ApsS!1j/j3W,uZ7I1#+!!"tUVZ9)@!9F1\9`4#Q>kS-t);?qI
7f$3f:H[er!Ba0V=Su8%:HZrZ!,)5E!jbu;q#CC2gF`IkqG72`2Z58o/cdk$peUu^2U<uU?2Uf+U/26n
!!!f!/b:Oo55ItS75X0Z!Am7?9`[[>cRf-#r20Ue9a^durVup?gH>O:qJ$%=8EW,:87;4-!FSIS4nCf:
I/N+.fP1om!!&mi^WsRoBDVZ/QG'E+XT2Z(!!&/7Vj=4\>5J:"a7\SHk5"->I/<o+^YHU(%/g1.Xh_(=
$iL(IVkg6j$N0tdk(r1"%fHA.B;U?smCr[P)>aC7?'_.cdB*Fk(]+15>*6Iq[AO%E(Ae(4I)jn%RH=O=
+7&u]!!5j/^](tKEuB`5kPtTOr2g!5(S^uS!!#CaVZC<D^AtJ<!*oHa!K%ut!.k4A!!%*=^B'92QiP\;
!,2>5!Ikom!4i.1AGrD,H5=j-ScAbJrT4-[+7&u[!!%uW^B(Z*LB-H:!.Y!M!MVTL!6P9AHN'fCSN":`
XoJI$roO769\TQ2!!%uW^B(2?p&K[Ep&G)BriH3e$^1SE!!%?EVZDneY5l9:!3,t[!QP\n!2BMoJH!:`
N9(%p!!%-?XT3j&!9sOaE;la8HCb,^!!&JejoDBl!4)Y*=T6&8JCOXd!!#jpXT3J5!.k4I!!#amVZ:[r
!8[\UCB!>qR]6A*!!">E^As53!2fes,6"\EJ)LBc!!"2AVZ;&A!.k4=!!"VMjoDBL!7LoN%(!^`VR6E5
!!E\(Xf[o\!.k4G!!EY"Vl,Z=!8IPW%bTq+a/f9V!!%*>^AoS$!2KSpB`>+6,3/`[!!$R/VZ@q@JcP*:
!/gd<!%j`Aci=%`rkAG8\,`l9!#PX:!)V/FQiI+%rhf`jn,S%?qZ$U<roO2qN<%i9",t"0VPjL4!!@_Q
Xd6m*VZ6gFVl,[8!/ggZWTN?`quD<Kmf3>6rkAFtR/k\9!$_EE!'.Fe[f?COrhf`Td/]X9!%n34!)2b[
JcPcM",t"0RY_%(!!@_QXc'"U`W-*eVl,9c!3-#$WTN?Rh#NK9!"AkA!)31gJcP?A!"8e.!(E1Rec5[W
rhf``Z2hH9!"T"j!*o!nJcPZJ"'E=QZ]"nA!!?'"XeM`o_Z0d5Vl-*(!2ff!C?F[2huJZ8"/`iJF8Q#i
!:BghQE@9&R/kY8"-KLZA@2EG!!C:(k).OdRfEEsrkAFhm/V_<rVup+riH/QM?)W9!"/_'!%k&J`W,uK
roO2D_>pS9!'gIth#NH8!'1%\q#H!HnGiPJrhl%^eGoSCroW;B$Oe=;9NYqXN1.)fF4pW)!!@;W^Pq7S
$O\.278R93IuC&'B_DFs!!?o:XafU9qu@*3+Y?&U>&\eBSYp"^!!E:4Vl+k&!"08g4^;`LR]3jMk)->B
j8]:>k2rZ*!!%QC^Arf-!6>-B=MMU,jo>C'p8n=:k5_R`"&Q,%0'3-6E;-72Vf7e!"&5\k/b]87!!&J]
joCjC!:p0mC?FYAjo>Cfp:gT$]E#GA!2B1h!(GN?U]C2j!1ih]!(3(Qh#IH-p>u?[ZN.fA"Z'7nB7R>c
^Ao.t!2TZ!/l5hZFJAZ7!#Or$M#[`39j1_>SYuC`!#C@jli72PC4(Dtf_ae2+/AnZ!!'A(^AtUT!3Q;%
UA_1oU>#[2!!&SgVZ<:^!.k4D!!([MjoF%u!8.>PZi.W=J?T$e!!&blXT3Ie!20AmSc,GdE9I:U!!:g8
joX]-RY:b+!!!H*^Aps$!6kKD$iI+,7D/]+!!!B(VZ9*;!0mNa%fGGh>kJ)K!;HNo5Q&7r-'A8`!!#%W
XT0QJ!5JR72uKQR+j'e\!!#^jjo@!q!/LUTF8We)!:'UbB`,!(!7(WFAGi@:!4)Y*MYuVf!2KVe!!&np
^As4X!8%8OQMmocJ$B!d!!&/[VZ;%f!2';la8P-#WTaD:!!3SD^](tJ=G?h>!!!E)XT21l!6bEC$N-e%
9tgV3!!!N,joB/M!0dH`5Q&7r-2%=j!;?Hn3W,uZ,*N#]!!"tUVZ7mD!5AL69`4#Q/^"-h!!%*<^ZGNO
!!$^2XT5JU!9sOaAGi?t!6tQEMYuVK!3uS)VZ"70N7S&q!!&>`XT3kB!.k4H!!&/[VZ;%)!8RVTa8P-#
WN6*:!!!H*^AqBW!2]_r$iI+,:uhV6!!!B(VZBKlJcP0<!"Sqh!,A&)d/X/2r4`4X\H'#;!'0tZ!$]qn
U]C)g!&shR!$RR,g&M+Hr8mu2YQ2B;!-A(Qb5e7:!,2;4k5^5:!+c),s/1MMkl:^@r8sXPbl@a@rP&?$
]E#2:!1*Sc!/oJ0PlLfHrMKXMoDjICp](<7rT4*jOT=2;!"Ae?!,&D6_#OHCr2fs)aT/.;!"/Y%!*\Ia
M#[Mcr8n!,JcP-;!&OPf!&L2Hci=%ur2frO\cB);!%n,H!%lb%QiI+Lr8muBnc47AqZ$V/r4e6lhZ*X^
r2lt!_Z0[?r27O7VZ6^Er8uu=MZ<aGrP&?$rW)ot#X<BhVSBI7J4tt'mJm6FrN-'XqZ$m^BRc>MU6]mi
WW:HI!/CHM!/C@N#WH:?Of+b4E'qVF[K$<<rT4*jqZ$mqMQ+YYfZ0FciW,bSp](:&r4`5ErW!!;B=%TP
!OJ[%^B(ZCUB''L!"8_,!+#R(!Z,.:riH3qQMmodU/8T)^]4?Ar20NurW!!8>+PYj!M,AOVZE>_gAn#L
!"Sqh!.=bG!ZugBroO76a8P-$fP:-\L]@E2r4`Ln!!#^-^U%Q!r;Zj_Zi7]>J<^-#!!"YLXU$NZ!(F#l
U0SuA!!,*SriH0BYlN)M!%n,H#V?#V6`6iQ=s<hE!B6SKVZ:\\!4)Y*4oFFJ4TGIek2t<D/c>YM9\B@,
!1N-PQN."ur4`C8%"Q+!9_eYg-2kRYB86K`!!$=&XT\\4FKM9+q#CC=rN-'*UB'-N!*];u"TSmKVk$3N
!!"2@VZ9o8!5\^9I/N+1!"PI[fNe4P!%n03!.<N$V>pUbrP&N)!1LZ]%/0`%Rf0u$)>F2h!!%rUXTFC\
MZU#1$hjW$MuBaX(R5!f!!%cPVZheTL8T>)pAb2JrMKW2YlN/O!4i'j"h=WDk,Ajb!!'S.jo?LJ!4Dk-
%/djBF,[kao`+tcrP&>Rkl@.P!"8_,")*1dFS,V77BQQk!,.)er;Zg)r20X-HDb`T!!#CbVZ:8%!9!nX
%fGGkMQ,a,o`+tsrT4*;^&Z+P!&OPf!jfXloDekIrP&?0g&S)P!&"2O!huf=oDekDrN-'cp&L'P!%n,H
"J)H0!!)]m!%n/I!0NHFn,NGOr8n(5k*koB!'U;C!6;8Ce,TJ]qnE-.o)Jb:r4gDT\,ZM7qlKjao)Jb7
r2o,^U]C2j!*]8t!0QjQ!$V9<V?#EP!.=\+!6=[2!%n-2_>qCP!1Nf"!#bA.!&OPf!"@`bV#ULRqlKi7
o)JbCr2fr,qZ)HQ!/CBK!#G/+!%n,H!",(nli7$rqrRl#o)JbRr8mthZiJGQqnE,5nc/Y`r4`4?ciCEQ
qlKipnc/YYr2fr,li<CQqkjEgnc/YWr20N%M#dDQqrRlnnc/Ypr8mthV#]ER!&OPf!2f8d!,)8F!40H@
_uKcir2fsbnGiPprN-'og]48Q!%n,H!0QdO!*]?!!1ilbMuWi@r8n""rW)Qj!.=b-!8*P:mf3?#r4`4f
nGiQ>rP&?$YlO+j!t:X51[G)A?2Uf)0(AoAFT&<AMp27K!!<UeXY/r?!*];u!%m^@!-%n7!/B_<ZiC18
L8QWi!!%EEjo@R7!!/PNroO3kS,`X$\`Q'D!<)ruRf0u$Rd^:WVZ"70J>*&A!!G*T^V<n;!!%rUXT4:K
!!&>`XT3IW!8mh[/s`WA;!\/^LAe"ML@>0COo;0XE7t<1!!Fm9Vl*8U!!'S.joDs]!!((<joCkD!2ol#
4ic^IC?tru^AqpD!;?Hn%/dj?=Qoec%(H9<5E,QU!*K.!nGrKh!+#*p!"8_,!)Vn[!"6jJnGiSMJ,QJL
;!\2[VZ9oj!!!B(VZ9HU!!!Ae!7_&M2gYG#!);e[r8n!,nGiP!r8muokl:_o!4`(19WA!Q!,D**qZ$UP
r4`4fnGiP_r4`4XlMq#h^V=jK!!6f>9]H*W!"9`$9QRQ;^AqC'!!"YLXT1!D!!#IcXT0R2!!?'"X_?Yn
"C7`j!!)'["Uc,!7;/FmXT22b!!"VKVZ8==!!#CaVZ7n+!!>rnVe#Q&l2UlhSO;B:"UZ"s6Y)bbVZ9HY
!!#1[jo@R7!!$:%jo@"0!:g*lC?FZ9i;`q,fNdD9"V)V;>`.22joB/`!!$[0^]"6)!!%QI^Ztk"-2kRY
%,q6gZbMsh!!%QH^B(3^rP&A8!:Bge?2Uho!!%-=Xm5re,5nVD$fV-fU90@C!;$6kFSi0@Q?<)-!)W%_
!*];un,NH-r28i\!$V<=!".ukq#CJeVhX43!-%h5!Kh@"VZ9HY!!%EEk3r?NRf)=6!!"VLjo>nN!!:g8
\`3YiReu4Ja-uth!,Cm$!1Nl$!1NBW!42X=!0$4D!-A+Ri;`qo^S^#k#_97fVLVbp!%%TY!*Jakr;ZhU
rN-'Xn,NH_rN-'LlMpourN5#Y!j/SjirB+%U'@?XFAO.],5nVD;!e5_LAe"ML@>0CSc,GdHKtP2AGrFb
!!9'rOo5:C!!mP7SWRkc+TN\aVZ9HY!!'S.joDs]!!([MjoDCH!!%oTk4SfA!!;<Fa5[.*Rb695RVFDS
/cFf3C@)$!^Aqp:!!">C^Apt%!;-<lZi7]>N8Xa<^V?Z#!!">D^AqC'!;rr!?2O]r!!"5@XT1fU!!&bm
XT3k0!!9:)QJ2B>,5nVD;#UIa!;r_p>4DRm+oJ5<6gF^PSc5MeHJni*Vl,[F!:Bge+oS;=:$hrYjoBf!
!!"VKjoAZP!!([NjoDCD!;c`tk2s_=!!"VLjoB/a!!"hQ^Ap([!!$[0^Ao/<!!!o9^B))Oi;`qo^S]`c
!%%TY!*JXh!&"2O!&!dA!+#T+!j/R@li7#%rN-&ri;`q]Xd7]A!$_BD!)W+a!<=_LVZ8==!!$4#VZ7M!
!!!f5VZ9HM!!9'rOl$0;!!"2@VZ9HZ!!#1[jo@R7!!%EEjo?Li!!",>joB/T!!;<Fa85kq!!"VLjoB/a
!!$[0^[M4'Zi.W=VX"3^9`;^+-1h3*!!9pMVV;(N-2kRY=RH.h?2Uho!!&blXT4[Z!;HNo7K'=g,2iM'
Xf[oD!!"5AXT22c!!$4#Vtg>f!!&SgVZ;kF!!#CbVZ7n!!!9'rOkTj9+oS;=:&G"_!!%EEk3r?Nf_sq4
a6N^*>lEdb/`?[2k2s_N!:Tsg/cFf3C@2'%Rf0u$Rdg@X-2bLX=R,qeJH!:`ZfD,b!!9pMVV;(N-2kRY
=RH.hMuBaXMt$cI,5ePC;!S)]FT/BCU&a-P!j/SjgAh3trN-&ro)S[g!/CHM!/C"D!$V9<!);bZ!-%q8
!1i$J!iMrYirJlT!$V<=!);k]!4i'j!4hV"!%n-2!,Cg"!1NoL!8-30"Qnje!!(gT!%n03!,Cp%r4`5E
nGiQ1r4`4LlMppkrkAG`pAjIY!l)LIgAh4"rP&>7mK!0e!+#*p!,2;4!#PD1oDelcriH0BhuEh\Xd7]A
!$_BD!)W(`r20Nur;cKj!+c#*!#Fl#!1j+e!-$ir!iMrYgAh3srMKZj!:KpcjoBf!!!%oSjo?Lh!!([N
joCk.!!;<Fa7')q!!"VLjoB/b!!"hQ^Ap([!!'A(^As_g!!!o8^Apsk!;QTr^V?Z#!!">D^AqC)!!"YL
XT1!D!!&blXT4:F!!3t=XTGW,7Gn.IXf[oD!!"5AXT22d!!"VKVZ8==!!8^hVZNcoL?eg>(B(-26f7qG
Vl,[3!!"2@VZ9H]!!3-#4oFFB4n/LPf_sq4\a'4q+8t=%>i5S`k2s_C!;c`r/cFf3C@;-&BDfO7!!"hQ
^AqC%!!#^k^Ao/0!!9pMVYpMP!!">D^AqC)!!$=&XmlAk0)VgO;!S)]7K'=g(\Idp!!9:)QJ2B>,5nVD
;""Aa>5Y;g!!"VKVZ9Ha!;?Hn6iEn_(>o/oVl,[3!!"2@VZ9H[!!%EEk5#)Q!!#1[joB/^!!$:&jo?L]
!!;<Fa4gRo/cFf3CAn5(!!&Jd^As_m!!%*<^An]=!!5B8%.sT#JH!:`Zek`a^V?Z6!:Bge-2kRY=RQ4i
MuBaXMt$cIB`+t4$i0i)3HPZ%!!%-?XT5*W!;c`tXf[oD!!"5AXT22d!!%cPVZ;JA!!$R-VZ7)#!!5)u
$M=B!E;la8S_jDKVl,[3!!"2@VZ9H[!!'S.joDs^!!%oSjo>nf!!5i_%eTf%Rf;FLf\ZZ1k2s_=!!"VL
joB/b!;sS3BCPs%Zi.W=N;3GTVS=#I!!+m^n@nt#jo>It^S]lgr;ZgDrP&>7mf<9f!+#*p!2BFo!.XeE
!g]r)r;ZjNU@>8bQKA/KXf[od!9!nX,5nVD;""D^VZ9oj!!&SgVZ;&=!!8:\(B"46/Y2C/!0R'WmJm<d
Vif^6!$V<=!);n^r8n!,nGiRArT4*Zq#CK:jraO%!Bo*)joEHa!!;<Fa4gRo/cFf3C@D3'1]4uf5PP6U
!!"hQ^Apt(!!4I]Zhse'=RX!)VWIj[^V?Z#!!">D^AqC6!;-<l0)VgO3V!.M0)VgO7JZuc,-@U;!!#ja
XT4[L!!9:)QL"V@!!"5AXT22e!!"VKVZ8[H!!"VKVZ9*\!!4=ASbrHf:%+t[Om2rF!!9'rOkTj9+oS;=
:%/,_4oFFB9_&/`4oFFB>l"F%/`t^`!!$d*k5FEBa6!@'k2s_=!!"VLjoB/f!<)ruBDfLE%.XAuJGd.^
%/Kr*F2)em!;m6*=T,u7-2\24!!9pMVW.[P!!">D^AqC*!!$=&XT/b"!!%-=XT/b*!!6i9B_h`,$NO$%
XT0RC$fh9jXf[lh!8RVT,5nVD;"+Gb>5Y8u$M"/sE;ZU6$Mj`(A>`u7!;m0(:&Usi+oD]E!9sOcVl,[3
!!"2@VZ9H\!!%EEjo>n^!!&Jcjo>nf!!A,@M?*MRr!i^ArT4)3r!qcf!p8XcgAh4*rT4)pn,NHWrP&?0
qZ-?jr4`5jq#CK&^ErOQ!.b'`!41M^!l)LIgAh4"rP&A8!:^$hMuBaXQLOtQXT3kH!!8ms,4tp9FT/BB
U>>kOXf[oY!:0[c,5nVD;"+GbLAe"MOmrGLVZ;&=!!8^h+nYg8E;la8S`TqJ!!9'rOkTj9+oS;=:%/,_
\c(Xja700-joDCV!!:g8/bK)DRf;FLf\QT0k2s_=!!"VLjoB/c!;sS3F7K;2)>q5L5Pb?]1V]gZ!!'A)
^Arf@!!9pMVV;(N-2kRY=Rc@k!;rr!B^u-'(]:B83Vi^W0!1H3!!&bmXT3J"!!9:)QJhi@!!"5AXT22e
!;r_pAF]^#(At'12u3LU/Z4a'!!&ShVZ:\m!!9'rOo5:;!!"2@VZ9H\!;tsZMXg`I+8k7$9_n_j4m'fW
!!([NjoCkA!:0[ek2s_=!!"VLjoB/d!!"hQ^ApLh!!"hQ^\Ij2R_MPp!;QTp)?%;M=Pa#Z^V?Z#!!">D
^AqC+!!"YLXT1BW!;ZZq0)VjI!!8(\7J-W\(]CH9:u20RXf[oD!!"5AXT22s!;$6k/c;LH2t?qK/c;OB
!!7nQ6hLEZ(B(-2:#5jOVl,[F!:Bge+oS;=:%82`4oFFB9_&/`4oFI<!!9^n>kJ's+8t=%C?,Bl!!;<F
a4gRo/cFf3C@M9(BDfLE%.XAu5Q/=sVYU8o5JOPs!!#^k^B#V\hZ*_m^S]`c!%%TY!*Jak!+#N)!"8>t
!'1"[!gWfdqu?dYXePFf!(Hjg!$^8"!j/SjgAh3trN-&rnGiSnVu<Ln$M"/s2uTWSOno%Z2lE5=!!#Cb
VZ7ms!!9'rOl$0;!!"2@VZ9H]!!%EEjo>n^!!#^kjoEHu!!5jVf^o.D>lEdb/`$I/k2s_]!9!nX/cFf3
C@M9(Rf0u$VXXWd1]>&gN;<MUVS=qZ!!%QK^AtV0!:Bgg^V?Z#!!">D^AqC+!!%rUXT4[W!!"YMXT3kI
!!8Ig0)>SF!!%-?XT5*O!!9:)QJ2B>,5nVD;"4McLAe"MOnJeQ!!"VLVZ;&>!!8:\/bB#CE;la8S_X8I
Vl,[3!!"2@VZ9Hh!;6Bm\c(Xja70-04oOLCWVQSra6#PW!!&JejoF&i!!;<Fa6Wfq!!"VLjoB/d!;sS3
F792.^Ar?P!!75VJF`a@Zi7]>N8Xd8!!9pMVV;(N-2kRY=RcChXT3&(!<'#"B_qc2BWZCJ!!&bmXT3kL
!9!nZXf[oD!!"5AXT22h!<3&sVZ:8s!<&eqAGZ?.A>aD<!!&ShVZ;&!!!9'rOlHH;!!"2@VZ9H]!;tsZ
MXUWEjoC;9!!8&?Re$LZf`("5WSIOWk2s\a!8RVT/cFf3C@_H*-2bLX5O\XQBE#XGN;NYXB>:;PoDek/
rP&>7oDnjj!Ec\^^B(Z*mf3>6rP&>7o)Se7r2frZn,NGoriH0Mqu?h)Xd0@n!;HNo(]CH9;"4Md:nl[G
!MVUC!!"5AXT22h!<45?VZ8[P!;?Hn>5kE"HMdaF>,RJioDek,rMKWinGiSaS_BtBSN$!;!$V<=!DNRd
!<4YKjoA*E!!%EGjoDCY!!@W2`t%_A!$D1%!,D$(!G^9AjoX\t9^_r]/cFf3C@_H*9`2X*%.=/rVZ+=8
)#sX_R_P^.o)JbarP&=YnGiQdp:oY&!0$@H!%%TY!*Jgms$cjf!"85q!1*Vd#8[@?,)`Rh$hF>u7K'=g
,4PX5QIr;>J+!@;,5nVD;"F\e6i<h^$L[rpOoD6`('"=XL8U.@o)JbXrMKW=nGiQOfV\^qmf3>2rMKWi
o)Seqr8mthmf3@.roOG-!!"U]k/Ru'!!$:&jo@"'!!('ljoDCR!;c`r/cFf3C@_H*1]>&gJF3C<%%@11
!2fb1!ItUL!!%*=^[M4(9UbFIrkJE/o;2PW1[b;D-2kRY=RuOm0)_mPFRB,0$]G"d!1*Vd!H\_?!!$^2
XmlAm!(Dh7QN"#TQ2umrmf3>3rN-&ro)SeBrMKX7mJm7pLAn(NOoD6ZE!lC@q>^M+rMT,b!CMV1OoD9I
OTC1gmf3>2rMKWio)SeRrT4*KpAjsg!=l[>joEI$joLn\nc/ZIrT<SL!F32(a8Y5i`rW_6mf3>>rT4)p
rW)Qj"'Dn9BBoO%5E)q`Z[a@k!!&nq^As5J!!9pMVX=HP!!">D^AqC+!!?&lU0['b#!%1-XeKn]n,NHS
riH0MiW/iU!j/SjgAh3trN-&rnGiYcSXisM!!YB.SYr#t+n,I3OoD6YHN!p%!!9'rOkTj9+oS;=:%82c
C=q0dlMq#\WS$>7fU=D]!!((=joDC9!!;<Fa4gRo/cFf3C@;/N!!!H+^AqBk!!9pMVV_CP!!">D^AqBO
!!!E*XT22Q!!9:)QMU[@!!"5AXT225!!!B)VZ9H[!:BggVl,[3!!"2@VZ9H0!;ult%fPMiC>8djk2s_=
!!"VLjoB/S!9!nX5Q/=s-/8J%^V?Z#!!">D^AqC6!6"p<3W6&[,2</"Xf[oU!:Tsg,5nVD:r!&22uTWS
+lEA!!!9'rOkTj9+oS;=9u$`/9`=)R/c5V-!!;<Fa4gRo/cFf3C@_GN!!%*=^Y8_i^V?Z+!;QTp-2kRY
=MOn:B`5'f!!KF+Q2gp@!!"5AXT225!!$R.Vt'iQ!!9'rOkTj9+oS;=9um>1!!%oTk1]k;k2s_=!!"VL
joB/W!8RVTVZ+=1N;*ARN(i@6!l)LIgAh4"rP&A8!5SX8QN!udJ+s!EImrK"!j/Sjn,VeT!$_BD!)UH2
!0R8Y!.+D?!I@-$!;QTrVl,[3!!"2@VZ9H,!!((=joVL^!;ZZrWEeQc!p8XcgAh4*rT4)peH"q9rP&>7
q#CJ/^Lu[/!l)LIgAh4"rP&>7nGpo9rN-&rq#CJ%X^1&h!j/Sji;i`T!$_BD!)UH2rMKWiq#CJ"Vcr3_
!iMrYr;b^T!$V<=!):6/rT4)pq#CJDk'[%+li7+Lk/Z3V!%n03!,BLRqu?^CrP&=Yq>^U+^V:ZK!!9pM
VV;(N-2kRY=Q0>=!!"5AXT0RA!!<V2XV^+"!j/SjgAh3trN-&rrW'k:!$V<=!$V1=!t(s((?PSuVl,[F
!:Bge+oS;=9u-f0/cFf3/c#GL%d)mqli?n_!p8XcgAh4*rT4)p_#OI/rP/71rW!"@^LuX.!l)LIgAh4"
rP&>7dfAh:!(Hjgq#CJ0X^1#g!j/SjgAh3trN-&rmf:f:!(6^_q#CJ,Vcr0^!iMrYhZ3TT!$V<=!):90
!*oKbq#CJRk'Z7j!p8XcqZ,RT!%n03!,B=M!-A.S!42M%!].TgpAjU]!l)LIgAh40rP&>7_uTc:!,2A6
!2B;i!\UU@j8]7`Xd7]A!&"5P!)VSRiW&shrhfaeq>^RKVig$?!iMrYgAh4*rMKWiquF_:!/gd<!8.,J
!^5\dj8]8Dk/Zfgn,NGOrT4)p_#OI;rkAH%qZ$^9^V;Sg!;um!^V?Z#!!$."^Arf#!!#jpXT4:V!!!f:
XfX5:!!9:)QJ2B>;#RKrFRoLY!!#amVZ;JK!!="7V_-s0!iMrYirJlT!)<Ei!-#aS!,DMq!4ht,"!?[f
4lcSGk2s\a!8RVTCAm8pR_\t(-2tXZVYgDr-*t?[q>fd\!l)LIiW/rd!uWC@BD]FGJ3P=trX@*Qq>^L>
riH0dqu?gCU9-lE!!9:)QJqoD$Nh1h/m\@V"*?OI(]Fg.!8[\U+o\A>Oo,1]+e>MuirB.YVifs=rX&`C
+Y?mpVZ:Z;2^&t9$HN2I/cOl4a8>o>/_K2jirB/Ck/Zrko)Sb""!9*XI/E%.RS5:TrXQsK!,);G!%%UE
"'E=Q=R#n^!!9pMVW.XV1[VpW=NCIB?2gr-+ohTG!)Tf":uVHVXf[oL!!"Y=XT22R!:0[c>5kE"+oVHD
9rFm`iW'%XVig!>!%mT9!)<7hci=&nroO24rW!%8k2pF<!!;<Fa5[.#4m)1p!,BOS!.b'`"b;Q<^U#`T
!!9pMVYpMX!!"hS^](S=VZ3+aVZ*q$^AqBV!!%-?XT`frU91.Bp&OFZ!j/SjirB'3riQ0org*SBrg*PX
riH/sc2d\@!-%q8"`SdYVk#Eu!!9'rOlHEA/cM[ISc4cOLAm>7Sc5Me:$M`8!!&Jejoq3Qf]LgLi;`rA
k/ZK^!'U>Drn.4js1/-Ls4@>(roO2q`W-2hJ>U)YN'H2"!l)LImJs'`"sS/TXd4GsjT,/X!j/SjOoP\0
E07&\H8j^]!iMrYVZ?&`"tc:ak/XGphZ*`?k/Y@>VZ6e5^S]lgMZ<g\Xd8haJcP3=!iMrYQiPP7!p8Xc
ZiIN7!l)LIciBL7!j/Sjli;V;r;ZnsVicf9i;`rAk/YLBUAtA1^S^#kLB%IZXd/qeJcP'9!iMrYS,gh7
!p8Xc\,`f7!l)LIe,Yd7!j/Sjn,S%?q#CJoVicr=h#IN=k/XG$_#OPC^RE+AV#URkXc)-<M#[UJVhY-M
JcP-;!ncYGRK1\7!b\i5[K*Z7!aVNhdK#X7!a;-^mJqh=qZ$\FfNa=7hZ*^jZV77s_Z0aDU.)s"VZ6d%
SO;97MZ<g+fNe:RblE7~>

%%EndBinary
grestore
np
89.4067 104.306 mo
75.4868 104.306 li
75.4868 94.1059 li
89.4067 94.1059 li
89.4067 104.306 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[14.1008 0 0 10.3789 -268.877 193.931 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 156 
/H 116 
/M[156 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcPWIs!<R'h#RI!VuXU5ruo>]UB(<GiW+]5s!@[FJcP!7s!"!6b5hPc\cAl5s"2h&OoPT*^V=FS!.k4C
!!?o:X^.+jf)Pn`Vl*_&!4i.4MWX&KblF:7")#B`VWn/5!!N?&?*15pL]HE7"'VV#Oei&s!!@W2k/Y==
VuQfRrkAFNhuJZ8!&"8Q!#PS6JcP0<!%n2J!#D%(ci=&/roO2&\,`f7rkAG8eGtj7riH/snc47ApAk2j
!)8OTg&V-7!,AV9]`8/'^V?5[!2';oMlj+>mf7q>q>^VPVl,9/!8RVW\`W%bWW9g7!)3C,!"?pKUAt9_
riH/.jT(#8!(6a`!"+>YkPtTfroO1jTE*+7rkAGG]`>/7riH0+g&R37rhfa"pAfdFnc8[O!.:%3eGoT"
rkAFAZN.K8!-J4B!"7-RRfEG-rhf`'m/V_<r;ZhdroO1jMZDZ8!#bdN!,&51_Z0ZQriH0+`;lb8!#GR3
!*\@^M#[MtroO90!!%TNl2Ug*rkAFAScI"8!,2A6!"6C=YQ+Z6rhf`'fDq*8!/gd<!"SZ%JcPHD!"AkA
!0!*AfDkmZriH0MYQ298!"/_'!.)liScAa#roO3[nc47ApAb2+rkAG8OT=)8!+#T+!)Tfu]`8%9rhf`j
b5e18!.=e.!,C]tJcGe>rkAFZLB-B8!/piY!$\3=`rH*orhf`>_#UJ8!4i*k!%m%-N;s+jZbO8])>jJd
!:Kmk$_jc*U)06udJsFXSYrBV(:O:O!!Nkbk2t;<e,Yg8!&OVh!OE[7!.k4H!!"YNXT>.4O9"&9!%n2J
!M(".!5AL64oXREfH869T`>'prkAK?-0P>^!!,ou"0J]",)-*[!!#amVZE>3UB&C9!,DMq!SB!>!36)"
=T,u79\oc0!!#joXT1fe!.k4?!!#alVZ9)P!7LoJCAm8p>daX?!!$."^B&ineGts:!)WWr!H\_G!.k4A
!!#alVZC`DQiPY:!,DJp!LaM+!4Mq.5Q&7r9[a!1!!#%WXT1fZ!.k4K!!"tUVZ9)E!8dbV9`4#Q>kS-t
);6kH7f-9g:H[er!])r7pfIPm4O5e`BDfLGZWIY3!!!hh/c\07:]aHa2WcUm2G!U>!D#,p/c]2TXTG4n
$i'c&(@a!A/HA!39`[[>jt-Tj7JKRX75W=B!*]?!"/h\a$MaZ%+5/jX<VpM3?qBEC!D$VnC&q^5k<8&m
!.=_,!n_5tq>^MmX1uQe!,)0/!1(^.VQBi(qZ$VYjems5!*]7"!69`SlfJ1pqZ*8'c+j8er;aL4Yc[p5
r;bNKPGeEfr;cQRK')agrsnu-!GA9q^Y6F'J/S4a!F;"tXhCh;F;OfS!EtW4VkBpgE#/<N!IVrTk(Ddr
RK+F^!:9ad9`2X+EuCPLci=&7r2g!5(V9[R!!#CaVZC<DfDq3;!*oHa!K%ut!.k4@!!%*=^B'92R/k_:
!,2>5!Ikoo!4Mq.AGrD,H5=s0RK*>FrT4-[+7K8^!;ultN;gQmZTjBKhuEb,riH3q3N3"r!!%?EVZE>I
`W2k9!3,t[!SC*+!/^aVN;gQoV@3G)JcP-;!.Y!M!L=+a!7(WFHN'fCOUAZ"Z2am(roO7%%bC]H!!%QK
^As5`!.k4G!!%-?XT3j4!8@JRE;la8HE@1]!!&JejoDC'!29Gn=T6&8JE?ic!!6!!XT>PGKE108!)<Hj
!-"V3aoDEVroO3L^&Y;9!%%WZ!0#V3OT5A*riH0MpAfdFo)Jb6rhfaBPlTA8!%n34!3*7(\c;jAZbO8P
c2aC8":Ls+Xd8PYJcPNF":C]tVid)Ag&M6cf]M>:XoQ-8!-A.S!%#egTE"t*riH/EkQ$58!+c),!$R's
jT#:<roO24UB&C9!#bdN!*Hu9X8i5:riH/sg]3B8!#GR3!)<7hJcP<@!$D4&!,@i#e,TT0^V?YP!4Mq1
J$#i=ciBL7"+$lCOmN.#!;lg!WTN?`MZDZ8!%%WZ!'dC^_Z0Z\riH/\`;lb8!$V?>!&rm;M#[N-roO8U
!!%TNlMq$G^V?5-!6tQHJ$#i2\H&l7"+$lCL=Q?h!!B4_k.1'`JcPNF!"AkA!)/LTg&M*\riH/hXoQ-8
!"/_'!(4p0TE"s%roO2cn,S%?q>^V"^V@+7!8RVW:p$joWW9g7"&5\kS]:`*!!?uuk1J_pL&_=Q^V=iA
!9aCbQE@9&T)d%7"-KLZA@qoF!!C:(k).glOoPIjrkAFhp&K[EoDek!riH/QPQ9;8!"/_'!%kGU\c;^?
roO2Dc2aC8!'gItl2ZD9!WW3\riLtViW&s;rhlRm`;fm3roW;B$Oe=;9NYqXN1.)fF6Wb(!!@;W^Pq7S
"UcM,78R7nFFT4CX_<gs")+g=J,B<3!"0,W/ON69E-d80VduV(m/R6!Vl+k&!"08g4^;`LR]3jMk)."U
ci=0*k2rZ*!!%QC^ArfA!4)Y-=MMU,jo>C'p8n=:quE#_"&Q,%0(Ar8!!%!3VZ:\)!;HNr9rFm@jo>CM
p>u@D[fG._")?u\4lu_EZhD-69[j'7!!&beXT1f[!/^dP!!&S`VZ9)N!8IPSf_4G->dOLG!!P/\B4lb$
qnE+Kd/]m@"YNVW?$)h<XT01*!/1CS/PTCM>&^&0VZ7Kk!9X=c4_f@lRb7N"!$A0?_uKeDrP&?=`;le9
!2BFo!2AHQM?!XIrMK^f!!%TNli7%<rT4+4SH-t9!42X=!._W\Z2am!rN-'Af)V'9!1j(d!-%Q1JcPNF
!8.84!1K&NgAh3^r4`5*Y5l9:!"8_,!(G*3T`>'"r20N^kl?A:!=n8jjoAYA!9O7]5Q&7r-):O_!!#%W
XT0Q]!3?/#2uKQR+l33[!!#^jjo@"1!.k4@!!%*<^R,#N!!$^1XgJ/<!!$R-VpYR6!!%oSk3i;-!;$6k
VZ"70N0OCp!!&>`XT3jV!4i.1Oo;0XHHuS^!!((<joDCI!.k1O!"Ae?!*G*YirB&er2frqVZ=^:!"/Y%
!):B3W;lo.r8muoi;ef:!'gCr!%%UEJcP3=!'0tZ!$[p5d/X/*r20N<\H&u:!)3=Q!%lb%QN.#,r4he&
JcPTH!,2;4O9"&9!+c#*XT6*9!/g^:aoJ.9!2f_0!0$(@K`D1?XfVZ,Xac$)k5YLErMKXAU&`=9!6>'#
!3*^5XoJG1r4`56g]3H:!"8_,!)WIkJcPBB!"/Y%!)8d[ec5[[r8muoZiIW:!'gCr!%$"mS,`OLr2frC
mJr+Ep&G(Or20N<PQ9A:!)3=Q!%kGU]DqqQr4gJVT)\k)r2o5aJcGd]r25>Nj8]1;r8sgU`rH+:rP&?$
_>pS9!1*Sc!/o_7N;rs@rMKXMquD<Kmf3@.rT4*jRK1e:!"Ae?!,&b@[K$:8r2fs)e,Ym:!"/Y%!*\mm
JcPZJ!"Sqh!.9h-h>dO3r4`4fX8p':!&"2O!%u@nU]:BHr20NHjoC/:!'U;C!TlOu!9jI`BDfN;!6bEC
?2Uh<!3ZA&>5Y;P!0R<^I/N.$!.k4C!!&Jd^As`"!!kf1N2F@rVLV@9!7q2NMuBaXMu*J[3G<o.XeM,'
7DSu8!!%cPVZ;JK!!kMoHBG+rO`3\E!1a)i\c(Xj\bc@49T#gik1I_C>l+MY!;HNo%/dj?BDql4)/$;T
^B([<rP&B>=JGlN!!!E)XT2Z+!!3sBUAh7qU6bb[!MWE+!58F5$N-e%>5eL'(0[:.VZE?NrMK[e:#,fC
!!!N,joBf.!!46if`("6fZ3sQ!SD/`!/(=Q1V`n'#VuG\9Y\?KB-mKV!C*pi^AreP!9O7]0)VgW/cYl?
Xf\=',5hKB3MQMT!-GXLaT);mr20fP!!#BaVk%!7r;ZjWSc5MeE74fg!!#1[jp4*M!*n[KfR,:L!!,dG
roO3Ln,SLL!,)5E"oo'^^U$T6q>^LArP&>FNr\\M!+#N)"TSpPXeJ8[!!"5AXT2Y.!7UuK>5Y9%!"*\C
SO<2Q!$V<=!*[JE[f?DUr8n._%[uP4>kn@"/cFf3I-(Et!!&Jd^BL&+R_OdipAb8`^V9ib^DV_*qu?_T
rN-6]!/mt/$hjW$MuBaX(SUoe!!%cPVZheTL8T>)pAb2JrMKW2^Au+N!4i'j"h=WDk,Ajb!!'S.jo?LY
!2]_r%/djBF,[kao`+tcrP&>Rq#H6O!"8_,!,)F`X`X49!(Hjg!,.]!lMpnlr20X-HDb`T!!#CbVZ:87
!6tQE%fGGkMQ,a,o`+tsrT4*;d/^EO!&OPf!jfXloDekIrP&?0mJrIO!&"2O!huf=p]16m!&"5P!1&QD
p&G(Er20UeVf;8.!%n/I!0O5\f`2"8r8n(5k*koB!'U;C!6<(Z]DqqEqnE-.o)Jb:r4h7lT)\jsqlKja
o)Jb7r2fr!M?*GP!*]8t!0QjQ!$V9<V?#BO!.=\+!6=[2!%n-2_Z7FO!1Nf"!#bA.!&OPf!"@fdU&Y1O
qlKi7o)JbCr2fr,rW%WP!f!VNrMKW2o)JbBr20N%S,h^P!4i!h!$Ce4!'U8B!"QO>aoM=R!*Jdl!)3=*
!"@EYXT87#!)W4d!(Hgf!"8AuO9#0U!)<:iq#CC^r20N%OT=qPqrRlnnc/Ypr8mthXoR#Q!&OPf!2f8d
!,)8F!40fJ\GuU^r2fsbnGiPprN-'ok5_"P!%n,H!0QdO!a;M"!iMreK`M)P!'U8B!6=U0!.=b-!8+"G
i;`jjr4`4fnGiQ>rP&?$^B!'i!t:X51[G)A?2Uf)0(AoAFT&<AMqe<J!!<UeXY/r?!*];u!%m^@!-%n7
!/C:LUAtB'L8QWi!!%EEjoIUFnc/ZYrT4*jRfEO#\`Q'A!!&Jd^As_l!!&np^Arek!9jId1T%q%=R6"f
MuBaXMsp]HQMmocFO:*4!!Fp?XfYFd!!%cPVZ;J@!!&/[VZ:](!3ZA*/Wls/:$_i[\c(Xj\b#n#!!((<
joCj?!!GI*k2pFP!;?Kk^Aqp:!!!H*^AqC#!!!GE!;6Bn5E,QU!*JRfr2fs)nGiOsr2frqkl:\khZ2=0
!BGZ.XT22a!;r_p>4DRm$N-e%:$DWX$N'n:!!,$)rMKWili?tG!.=;:!"Sqh!GVW"!!!M<!!,cmrT4)p
o)SXf!&OPf!&O-F!)3=*!%$q2"'E=QF2.b\!!!EF1JDkrqnE,5m/R,=r2frOnGiPXr2frClMq#`XfZ9m
!9*t^$PtEaBVPC+!)W%_!%n,H!%m^@!(6[^!$UY."&5\kAGQ;F!!N]F/OO'>qkjEgm/R,Lr8muBnGiPo
r8mu2r;c9d")?u\MS9&o%Ndi=MV.gg!,Cm$!,)8F!5J"'!.b!^lMpo2rP&=@^]4@bqnE30JA;)u!*JUg
!+#N)n,NH1r2o8b!$_BD!"76UmJm6/qlKmbFT&<A;!e5_>5Y;f!!%!9Vs=<_+oS;=$Le&C!!%!8VZDp!
rMKWim/R-6r9!JK!1NiJnGrFd!%n03!"QdE!1NfI!QUZ-joB/`!!&Jd^As_s!;ZZqZi.W=N9^HDF8`kg
!!n+]Z_i7T,lf7i^AqC4!;$6kMuBaXMsp]HUA_1oJ*R(7B`5'R!;QU#FJ>LqFAO.],5nVD;!e5_LAe"M
L@>0CSc,GdHKtP2AGrFe!8IP[E1NP^E(qJU+oS;=:$ho\\c(Xj\aTS!f_sq4WTsNaMZ)\P!!o%GfZ0Fq
/H@C$joB/`!;sS3BCPs%-2kRZ^J*qn!42[>!0"Ae!%%TY!*J[irrDu!!+#*p!$_?C!(H2R!2BIp!.VW]
qu?^@rN-&rm/['^!*\mm!$V9<!(6&P!1j+e!.*;uhZ*X"rMKWim/[(H!.=;:!%n-2!*ngi!8.;5!3,Yl
_>jQfrT4)pmJm5Cr4`4fnGiQ%r4`4Lp]0se!#baM!*H]1!%%TY!*JXh!&"2O!&"6NoDeksr2fr8li7#%
rN-&r[f?CPrN-&rmJm5=r20NHnGiPmr20N1li7#$rMKWic2d,0!$V<=!);k]!'U8B!'TiP!.=_,!$CP-
!$D1%!,Cg"bl@_qrT4)pmJm6"r4h_$!42X=!2f)_!<>gl^AoRh!!">D^AqC(!!$=&XmuGn!!&blXT4[Q
!!#IdXT0QS!!"5AXT22k!;QTp>5Y;f!!&SgVZ;kF!!#CbVZ7mX!;-<l+oS;=:$qu]I/N-r!!([MjoEHf
!!$:&jo@!k!8%8O/cFf3C@2'%Rf0u$Rdg@X-2bLX=R,qeJH!:`Zhsg8!!">D^AqC(!!%rUXT4:L!!"5@
XT22s!:BgeFT/BBU:(%%,5nVD;"F\b!!%cPVZ;JA!!"2?VZ9HW!!%!;VZ<:&!;HNo+oS;=:$qu]\c(Xj
\a]Y"/c=`2C?kj"Rf;FLf\?J]!!"VLjoB/a!;sS3BCPs%F8WcQ)=%8&Zi7]>JGB2Z!!">D^AqC(!;rr!
?1@mpB`+t4(]+4&!!&bmXT3IO!!"5AXT22c!;r_p>4DRmAGi>*(@(r#Sc5MeE4,`I+fG=;!);k]r8n!,
nGiQHr8mu$lMpq;roO3Ld/`;/!%n03!,Cs&!&OPf!&O-F!42X=!1N3R!#baM!)2e\aT);erP&>7mf3>?
r2frOnGiQ`rN-'Xmf<:d!#PU9!(F<r!$_BD!)W+a!%n,H!%mmEqu?_frMKXMlMpo#rMKW_[K$:NrMKWi
q>g3h!'U8B!'TiP!8.84!4hCq!$D1%!*mMDnGiP@rT4)pmf3?#r4hb%!&OPf!*JOe!)3@+!#aese,TIp
rP&>7mf3>nr2oJh!&"2O!)Vt]!(Hjg!>baF!!"5AXT22d!!$4#Vss`e/c;LH:$VcZ6iEn_(:F2C+oS;=
:%&&^I/N-s!!#1[joB/^!!$:&jo?L8!;lfs/cFf3C@;-&Rf0u$Rdg@XF8WcQ%/Kr*5Ca18!!%QK^AtUl
!8dbV-2kRY=RQ4iMuBaXMt$cIB`+t4$i0i)3HPZ%!!%-?XT5*f!5\^9,5nVD;""AaLAe"ML@G6DAGi>*
$Mj`)2fK*(p&G)3rhfae[/^1MrMKWimf3?urT4*jquHEj!/g^:!"Si*!_f$mo`+u\roO45[/^1YrT4)p
mf<:#!,(g%!42X=!0$^R!iE^Mr;ZjSZgb^0VUGP1!!">D^AqC)!;rr!?1@mpUA_1oJ,''GQE:u%!!+^H
n>u\Vn,U]5!$_BD!)W+ar20NunGiQ[rMKXAq#CJYV\]42!A0l>VtR"gOh:Yo+oS;=:%&)[joBf!!!([M
joDCV!!:4'+8l0?4kT8d!6;_P!%n03!,D3-qZ$UPr4`4rnc/YGr4`5*q>^RC^U*h<!*J^)!2dg;o`+t<
rP&>7n,NG@r2frZnc/YBr2frfq>^R@XeP^n!)W-d!1)^HfDkmqrN-&rn,NG?r20NRnc/YAr20N^q>^R?
Vk*_c!);p[!0Ono!$V<=!);q_!'U8B!)2q`!'U8B!*oF%"98ERk1KS3!,Cub!6;_P!%n03!,D**rVuq2
r4`4?nc/Z?r4`4?q>^S<^N95Or!WR-rP&=Yr!^ICp](:?rP&>7n,NGor2fr,nc/Z3r2fr,q>^S1X_@P2
r!NL$rN-&Dr!VE_gAh3trN-&rn,NGlr20N%nc/Z/r20N%q>^S-Ve#W(r!EEurMKW=r!NB&^&S-VrMKWi
n,NH9r8mthnc/ZYr8mthq>^MQ!To:9!;m<,CAm8p/c6*i!!"VLjoB/c!!&Jd^B184!:p3g^As5g!!9LA
-1q6<JH!:`Za9]5-,9Go!*J^j!/pfX!1*-Tr2fsKq#CJjXWmE<!-J4B!2@d>jo>B*rN-&rn,NHCrMKXX
nGrKb!.+G@!hH54o`+u2rhfaeli>--!$V<=!);q_!4i'j!6=U0r8n!Yq#CKKjt6?.rVuqeroO45ZiC(X
rT4)pn,WC$!-@c4!WW3<r4`4rq>^RQ^S^W'!42[>!._EV!%%TY!*K'tpAk,n!,1p'!#PR8!'0lU!\UU@
oDelcriH0B_uT<-!$_BD!)W.br20O*nc/Y*r20NRq>^RKVigTO!1j+e!-$lse,TIlrMKWin,WCK!/g=I
!$D.$!)34h!^5\doDemDroO3LrW'D-!%n03!,D$(!&OPf!'g#S!&OPfrW)ir!h-kto`+t0rP&>7ZiC(P
rP&>7nGiSBXo5@%3V!.M0)VjI!!8(\7J-W\(]CH9:q6T(!!"5AXT22f!!"VKVZ8[H!!"VKVtg;oL8RE3
!!!f5VZ9HB!8dbV+oS;=:%82`4oFFB9_&/`4oFI<!!9^n>kJ's+8t=%C@_GB!!"VLjoB/d!!$[0^An]5
!!#7^^At/-!!5C"Zi'n!!!#^k^AoRe!!">D^AqC+!!$=&XT/b+!;HNo3W6&[QMLR_3N]%J!!#IdXT0QP
!!"5AXT22f!!$4#VZ7(p!!"tVVZ;kU!!5*WSb)m^6iEn_+j0lN!!"2@VZ9H]!!%EEjo>n^!!#^kjoEHu
!!5jVf^o.D>lEdb/a*2Z!!"VLjoB/d!!&Jd^At/$!!"hR^As5h!!9%41\:YJJA20#^U(6H!%%TY!*Jak
!/pfX!1*-T!A:MRXT3kI!!8Ig0(],DFT/BBU9ah",5nVD;"ane!!%cPVZ;kL!!"VLVZ;&>!!8:\/bB#C
E;la8S\G0t!!"2@VZ9H]!!'S.joEHl!!#1\joDCW!!:4'4nJ^SRf;FLf\?JZ!!"VLjoB/d!;sS3F792.
^Ar?P!!75VJF`a@Zi7]>N;3Ic!!">D^AqC+!;rr!B^c$#XT3&3!!$[5X`X.7!2BIp!.V<T!$_BD!)W7e
rrDtp!+bR!rMKX+qZ$\.Vf;5-!1j+e!.)9Xp](:;rMKWinGrLL!/g7GrT4*;qZ$\Tk*klA!8.;5!3+WO
gAh4*rT4)po)Se:r4`4rn,NH$rkAGlqu?h3^SVG3!!!o8^AqC0!;ZZr5Gm8O!N$b%!!">D^AqC-!<48@
XT1BN!!$=(XT3kK!!HT0Q4!]c!!!i6XT22d!!,*Gh5p^D([V2&,5nVD;"F\e+oJ5<2uWgK!!$4%VZ;&@
!!?E&OUC^\!#GO2!);n^!B6.sVZDnqm/R/1VuERo:%JAb/c=`29^i#^I/`7.WVc_uI-/HZoDek5rT4)p
mf3A^a5Z7ZjoNLEm/R,<rT4)po)Sear4`4?mf3?brkA[U!!"=6^SVG2!!#^k^AoSK!!%QK^YZ^*=R?(g
-2kRY=RuOm7Js7f$h"&qQN!uk(B=FZMli9QoDeml7K'=g,4>L3FPEnt;!e5_,5nVD;"F\e6i<h^$M+8r
!!&/\V[!t;!$R)pOUC[[!(6^_!$Ue2!-$\j!);h\!$V<=!)<:iq>gP#r8mthmf3@.roOG-!!"U]k/Ru'
!!$:&jo@"%!!&JBjoB/p!:^$h/cFf3C@_H*1]>&gJF3C<%%@11!2fb1!ItUL!!%*=^[;(&-&hJnlD=T4
%.+#p-2kRY=RuOm0)_mPFRB,0$]G"d!1*Vd!H\_?!!$^2Xo&1j!!+9nh3J(`$gdoo,5nVD;"F\e/cDRI
E:*],$ASPX!Kj8^Vl+J@nc/Z#rMT&`!?ldFOTBD.m/R,0rMKWio)SeRs5jCFk*k]<!=l[>joEI$joLn\
nc/ZIrT<MJ!A1;,`rVV=nc8Rf!%n03!,D$("'Dn9BBoO%5E)q`Z[a@k!!&nq^As5B!8dbV-2kRY=Rc@n
:nj[ilMq,LJ"j'>F<^2S!1*Vd!.XM=_>jQ[rN-&rnGiYcSXisM!!YB.SYr#t+nu'5!!&/\VZ;%K!!"2@
VZ9H]!!?ugfR3GooDf(hWS$@cRP""/!6>*$!3*7(!%n03!,B:L!"Ah@!*I>Cl2Uf1rP&>7^]4?BrN-&r
joEX+!$_BD!)UH2!"/_'!N/Yt!!"2@VZ9HE!9aC_%fPMiC9dg>/cFf3CA%YN!!#7^^AoRo!;-<l-2kRY
=MOn:3W6&[,23+M!!"5AXT225!!"tVVZ7n8!4r42+oS;=:!Nb1!!#^kjo@!=!!"VLjoB/f!6tQEF8`kb
!;HNo-2kRY=MOn:B`5'b!8@JR,5nVD:r!&2AGrFu!58F5+oS;=:!3P1!!%oTk-4md/cFf3C?PZN!!&nq
^As5f!!/$P]DqsY^](tJ=MOn:QN!udJ+s!EImqrhjo>B*rN-&r^]4@srhfaBp](>@6hCB#!!"2@VZ9H,
!!((=joDCU!!0'(]Dqp`rT4)ph#QL9rP&>7q#CJ/^Lt1Z!%%TY!*K't`rQ(?!)WIk!aVp6bQ./5!$_BD
!)UH2rMKWiq#CJ"Vcr<be,TIlrMKWi^]=>q!,DB2"98FLk'XfA!%n03!,Bp^n,NG7rP&=Yq>^U+^V:Z!
!!">D^AqC)!7LoJ,5nVD,5M9A$a$NI_#XB5!$_BD!)UK3!$V<=!$V1=!t(s((>]&K!!"2@VZ9H-!!"VL
jo@"0!!<_njraI#_>jQfrT4)p`rPu:!)3@+q#CJ;^Lt.Y!%%TY!*J:^h>dOErN5kq!be]A])VgTrN-&r
_#OI&rMTGk!bA34dK&P4!$V<=!):90!*oKbq#CJRk'ZUtbl@_qrT4)p_#OIVrkAH>q>^RQ^S\RB!&OSg
!*InSkl:]sriH0pq>^RLXd6Nu!&"5P!)W@hbQ%WRrhfaeq>^RKViet!o`+tDrMKWi_#OImroO45q>^R[
k/ZK^fDkn7rT4)p_#OI;rkAH%qZ$a:^V;Q)])Vh5rP&>_c2dJ:!)WZs!/p^S!uJ)A0"M#_;#RKrFRoLY
!!#amVZ;JK!!="7V_,ddp](:grMKX7_#OIMroO3kqZ$^?k2nhb!8@JRCAm8pR_\t(-2tXZVYgDr-*t?[
quF\9rX8lH,r932^B9!N,oQ[jdK'"A!$_EE!1*N_"!XJA7DJp&$Nh1h/m\@V"*?OI(]Fg2!87DQ+o\A>
Oo,1]+e>Mu^]=?@"Vr75>,S:sVZUls+Vt%aa8c2lroO4$qu?gNf]HGg!:9dc%Kde)4ad.h".Dn8+8ubj
!!$[2^AoSZ!!??<^KBt*d/X/&mCrX'a8c3GriH/ErW!$sXfYF8!!"Y=XT22Z!9=+[>5kE"+oVHD9rFm`
^]4?dmABqYa8c3froO24rW!%8k2pF"!;QTp4mhA3C<$;SJH!:eJ;ghLZSUYBg].=1rkJH=rhf^arhf\$
rkAG8`rH*]riH?GJ"j'>0#%Ad0)i!PUAgJYMuK%AUAh7p:tbp;!!%!;VZh$cSYr#1^An6crhoadrfR58
rfR2Nrhf`jpAiS@!1NoL"e)FCk1Di3!!5=GjoFQCf`&qk\c0YKf`("5C;p5X-%Ml-VMmak!1!Th,'9-Q
Q@Cpe!.k4G!!XTcOf+=f2j+0q!!Y$Da6(FA9WnH1!!Xa"VSB!e5Kj,$!!XWhQE?I&3U$Ns!!+6^"HfUE
H8gTZjo>T;R`FR2WD')frW%H~>

%%EndBinary
grestore
np
138.487 98.786 mo
121.447 98.786 li
121.447 84.5061 li
138.487 84.5061 li
138.487 98.786 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 344.273 298.327 ]ct
[17.2613 0 0 14.5305 -222.937 199.415 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 156 
/H 116 
/M[156 0 0 -116 0 116 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcPWIs!<R'h#RI!VuXU5ruo>]UB(<GiW+]5s!@[FJcP!7s!"!6b5hPc\cAl5s"2h&OoPT*^V=FS!.k4C
!!?o:X^.+jf)Pn`Vl*_&!4i.4MWX&KblF:7")#B`VWn/5!!N?&?*15pL]HE7"'VV#Oei&s!!@W2k/Y==
VuQfRrkAFNhuJZ8!&"8Q!#PS6JcP0<!%n2J!#D%(ci=&/roO2&\,`f7rkAG8eGtj7riH/snc47ApAk2j
!)8OTg&V-7!,AV9]`8/'^V?5[!2';oMlj+>mf7q>q>^VPVl,9/!8RVW\`W%bWW9g7!)3C,!"?pKUAt9_
riH/.jT(#8!(6a`!"+>YkPtTfroO1jTE*+7rkAGG]`>/7riH0+g&R37rhfa"pAfdFnc8[O!.:%3eGoT"
rkAFAZN.K8!-J4B!"7-RRfEG-rhf`'m/V_<r;ZhdroO1jMZDZ8!#bdN!,&51_Z0ZQriH0+`;lb8!#GR3
!*\@^M#[MtroO90!!%TNl2Ug*rkAFAScI"8!,2A6!"6C=YQ+Z6rhf`'fDq*8!/gd<!"SZ%JcPHD!"AkA
!0!*AfDkmZriH0MYQ298!"/_'!.)liScAa#roO3[nc47ApAb2+rkAG8OT=)8!+#T+!)Tfu]`8%9rhf`j
b5e18!.=e.!,C]tJcGe>rkAFZLB-B8!/piY!$\3=`rH*orhf`>_#UJ8!4i*k!%m%-N;s+jZbO8])>jJd
!:Kmk$_jc*U)06udJsFXSYrBV(:O:O!!Nkbk2t;<e,Yg8!&OVh!OE[7!.k4H!!"YNXT>.4O9"&9!%n2J
!M(".!5AL64oXREfH869T`>'prkAK?-0P>^!!,ou"0J]",)-*[!!#amVZE>3UB&C9!,DMq!SB!>!36)"
=T,u79\oc0!!#joXT1fe!.k4?!!#alVZ9)P!7LoJCAm8p>daX?!!$."^B&ineGts:!)WWr!H\_G!.k4A
!!#alVZC`DQiPY:!,DJp!LaM+!4Mq.5Q&7r9[a!1!!#%WXT1fZ!.k4K!!"tUVZ9)E!8dbV9`4#Q>kS-t
);6kH7f-9g:H[er!])r7pfIPm4O5e`BDfLGZWIY3!!!hh/c\07:]aHa2WcUm2G!U>!D#,p/c]2TXTG4n
$i'c&(@a!A/HA!39`[[>jt-Tj7JKRX75W=B!*]?!"/h\a$MaZ%+5/jX<VpM3?qBEC!D$VnC&q^5k<8&m
!.=_,!n_5tq>^MmX1uQe!,)0/!1(^.VQBi(qZ$VYjems5!*]7"!69`SlfJ1pqZ*8'c+j8er;aL4Yc[p5
r;bNKPGeEfr;cQRK')agrsnu-!GA9q^Y6F'J/S4a!F;"tXhCh;F;OfS!EtW4VkBpgE#/<N!IVrTk(Ddr
RK+F^!:9ad9`2X+EuCPLci=&7r2g!5(V9[R!!#CaVZC<DfDq3;!*oHa!K%ut!.k4@!!%*=^B'92R/k_:
!,2>5!Ikoo!4Mq.AGrD,H5=s0RK*>FrT4-[+7K8^!;ultN;gQmZTjBKhuEb,riH3q3N3"r!!%?EVZE>I
`W2k9!3,t[!SC*+!/^aVN;gQoV@3G)JcP-;!.Y!M!L=+a!7(WFHN'fCOUAZ"Z2am(roO7%%bC]H!!%QK
^As5`!.k4G!!%-?XT3j4!8@JRE;la8HE@1]!!&JejoDC'!29Gn=T6&8JE?ic!!6!!XT>PGKE108!)<Hj
!-"V3aoDEVroO3L^&Y;9!%%WZ!0#V3OT5A*riH0MpAfdFo)Jb6rhfaBPlTA8!%n34!3*7(\c;jAZbO8P
c2aC8":Ls+Xd8PYJcPNF":C]tVid)Ag&M6cf]M>:XoQ-8!-A.S!%#egTE"t*riH/EkQ$58!+c),!$R's
jT#:<roO24UB&C9!#bdN!*Hu9X8i5:riH/sg]3B8!#GR3!)<7hJcP<@!$D4&!,@i#e,TT0^V?YP!4Mq1
J$#i=ciBL7"+$lCOmN.#!;lg!WTN?`MZDZ8!%%WZ!'dC^_Z0Z\riH/\`;lb8!$V?>!&rm;M#[N-roO8U
!!%TNlMq$G^V?5-!6tQHJ$#i2\H&l7"+$lCL=Q?h!!B4_k.1'`JcPNF!"AkA!)/LTg&M*\riH/hXoQ-8
!"/_'!(4p0TE"s%roO2cn,S%?q>^V"^V@+7!8RVW:p$joWW9g7"&5\kS]:`*!!?uuk1J_pL&_=Q^V=iA
!9aCbQE@9&T)d%7"-KLZA@qoF!!C:(k).glOoPIjrkAFhp&K[EoDek!riH/QPQ9;8!"/_'!%kGU\c;^?
roO2Dc2aC8!'gItl2ZD9!WW3\riLtViW&s;rhlRm`;fm3roW;B$Oe=;9NYqXN1.)fF6Wb(!!@;W^Pq7S
"UcM,78R7nFFT4CX_<gs")+g=J,B<3!"0,W/ON69E-d80VduV(m/R6!Vl+k&!"08g4^;`LR]3jMk)."U
ci=0*k2rZ*!!%QC^ArfA!4)Y-=MMU,jo>C'p8n=:quE#_"&Q,%0(Ar8!!%!3VZ:\)!;HNr9rFm@jo>CM
p>u@D[fG._")?u\4lu_EZhD-69[j'7!!&beXT1f[!/^dP!!&S`VZ9)N!8IPSf_4G->dOLG!!P/\B4lb$
qnE+Kd/]m@"YNVW?$)h<XT01*!/1CS/PTCM>&^&0VZ7Kk!9X=c4_f@lRb7N"!$A0?_uKeDrP&?=`;le9
!2BFo!2AHQM?!XIrMK^f!!%TNli7%<rT4+4SH-t9!42X=!._W\Z2am!rN-'Af)V'9!1j(d!-%Q1JcPNF
!8.84!1K&NgAh3^r4`5*Y5l9:!"8_,!(G*3T`>'"r20N^kl?A:!=n8jjoAYA!9O7]5Q&7r-):O_!!#%W
XT0Q]!3?/#2uKQR+l33[!!#^jjo@"1!.k4@!!%*<^R,#N!!$^1XgJ/<!!$R-VpYR6!!%oSk3i;-!;$6k
VZ"70N0OCp!!&>`XT3jV!4i.1Oo;0XHHuS^!!((<joDCI!.k1O!"Ae?!*G*YirB&er2frqVZ=^:!"/Y%
!):B3W;lo.r8muoi;ef:!'gCr!%%UEJcP3=!'0tZ!$[p5d/X/*r20N<\H&u:!)3=Q!%lb%QN.#,r4he&
JcPTH!,2;4O9"&9!+c#*XT6*9!/g^:aoJ.9!2f_0!0$(@K`D1?XfVZ,Xac$)k5YLErMKXAU&`=9!6>'#
!3*^5XoJG1r4`56g]3H:!"8_,!)WIkJcPBB!"/Y%!)8d[ec5[[r8muoZiIW:!'gCr!%$"mS,`OLr2frC
mJr+Ep&G(Or20N<PQ9A:!)3=Q!%kGU]DqqQr4gJVT)\k)r2o5aJcGd]r25>Nj8]1;r8sgU`rH+:rP&?$
_>pS9!1*Sc!/o_7N;rs@rMKXMquD<Kmf3@.rT4*jRK1e:!"Ae?!,&b@[K$:8r2fs)e,Ym:!"/Y%!*\mm
JcPZJ!"Sqh!.9h-h>dO3r4`4fX8p':!&"2O!%u@nU]:BHr20NHjoC/:!'U;C!TlOu!9jI`BDfN;!6bEC
?2Uh<!3ZA&>5Y;P!0R<^I/N.$!.k4C!!&Jd^As`"!!kf1N2F@rVLV@9!7q2NMuBaXMu*J[3G<o.XeM,'
7DSu8!!%cPVZ;JK!!kMoHBG+rO`3\E!1a)i\c(Xj\bc@49T#gik1I_C>l+MY!;HNo%/dj?BDql4)/$;T
^B([<rP&B>=JGlN!!!E)XT2Z+!!3sBUAh7qU6bb[!MWE+!58F5$N-e%>5eL'(0[:.VZE?NrMK[e:#,fC
!!!N,joBf.!!46if`("6fZ3sQ!SD/`!/(=Q1V`n'#VuG\9Y\?KB-mKV!C*pi^AreP!9O7]0)VgW/cYl?
Xf\=',5hKB3MQMT!-GXLaT);mr20fP!!#BaVk%!7r;ZjWSc5MeE74fg!!#1[jp4*M!*n[KfR,:L!!,dG
roO3Ln,SLL!,)5E"oo'^^U$T6q>^LArP&>FNr\\M!+#N)"TSpPXeJ8[!!"5AXT2Y.!7UuK>5Y9%!"*\C
SO<2Q!$V<=!*[JE[f?DUr8n._%[uP4>kn@"/cFf3I-(Et!!&Jd^BL&+R_OdipAb8`^V9ib^DV_*qu?_T
rN-6]!/mt/$hjW$MuBaX(SUoe!!%cPVZheTL8T>)pAb2JrMKW2^Au+N!4i'j"h=WDk,Ajb!!'S.jo?LY
!2]_r%/djBF,[kao`+tcrP&>Rq#H6O!"8_,!,)F`X`X49!(Hjg!,.]!lMpnlr20X-HDb`T!!#CbVZ:87
!6tQE%fGGkMQ,a,o`+tsrT4*;d/^EO!&OPf!jfXloDekIrP&?0mJrIO!&"2O!huf=p]16m!&"5P!1&QD
p&G(Er20UeVf;8.!%n/I!0O5\f`2"8r8n(5k*koB!'U;C!6<(Z]DqqEqnE-.o)Jb:r4h7lT)\jsqlKja
o)Jb7r2fr!M?*GP!*]8t!0QjQ!$V9<V?#BO!.=\+!6=[2!%n-2_Z7FO!1Nf"!#bA.!&OPf!"@fdU&Y1O
qlKi7o)JbCr2fr,rW%WP!f!VNrMKW2o)JbBr20N%S,h^P!4i!h!$Ce4!'U8B!"QO>aoM=R!*Jdl!)3=*
!"@EYXT87#!)W4d!(Hgf!"8AuO9#0U!)<:iq#CC^r20N%OT=qPqrRlnnc/Ypr8mthXoR#Q!&OPf!2f8d
!,)8F!40fJ\GuU^r2fsbnGiPprN-'ok5_"P!%n,H!0QdO!a;M"!iMreK`M)P!'U8B!6=U0!.=b-!8+"G
i;`jjr4`4fnGiQ>rP&?$^B!'i!t:X51[G)A?2Uf)0(AoAFT&<AMqe<J!!<UeXY/r?!*];u!%m^@!-%n7
!/C:LUAtB'L8QWi!!%EEjoIUFnc/ZYrT4*jRfEO#\`Q'A!!&Jd^As_l!!&np^Arek!9jId1T%q%=R6"f
MuBaXMsp]HQMmocFO:*4!!Fp?XfYFd!!%cPVZ;J@!!&/[VZ:](!3ZA*/Wls/:$_i[\c(Xj\b#n#!!((<
joCj?!!GI*k2pFP!;?Kk^Aqp:!!!H*^AqC#!!!GE!;6Bn5E,QU!*JRfr2fs)nGiOsr2frqkl:\khZ2=0
!BGZ.XT22a!;r_p>4DRm$N-e%:$DWX$N'n:!!,$)rMKWili?tG!.=;:!"Sqh!GVW"!!!M<!!,cmrT4)p
o)SXf!&OPf!&O-F!)3=*!%$q2"'E=QF2.b\!!!EF1JDkrqnE,5m/R,=r2frOnGiPXr2frClMq#`XfZ9m
!9*t^$PtEaBVPC+!)W%_!%n,H!%m^@!(6[^!$UY."&5\kAGQ;F!!N]F/OO'>qkjEgm/R,Lr8muBnGiPo
r8mu2r;c9d")?u\MS9&o%Ndi=MV.gg!,Cm$!,)8F!5J"'!.b!^lMpo2rP&=@^]4@bqnE30JA;)u!*JUg
!+#N)n,NH1r2o8b!$_BD!"76UmJm6/qlKmbFT&<A;!e5_>5Y;f!!%!9Vs=<_+oS;=$Le&C!!%!8VZDp!
rMKWim/R-6r9!JK!1NiJnGrFd!%n03!"QdE!1NfI!QUZ-joB/`!!&Jd^As_s!;ZZqZi.W=N9^HDF8`kg
!!n+]Z_i7T,lf7i^AqC4!;$6kMuBaXMsp]HUA_1oJ*R(7B`5'R!;QU#FJ>LqFAO.],5nVD;!e5_LAe"M
L@>0CSc,GdHKtP2AGrFe!8IP[E1NP^E(qJU+oS;=:$ho\\c(Xj\aTS!f_sq4WTsNaMZ)\P!!o%GfZ0Fq
/H@C$joB/`!;sS3BCPs%-2kRZ^J*qn!42[>!0"Ae!%%TY!*J[irrDu!!+#*p!$_?C!(H2R!2BIp!.VW]
qu?^@rN-&rm/['^!*\mm!$V9<!(6&P!1j+e!.*;uhZ*X"rMKWim/[(H!.=;:!%n-2!*ngi!8.;5!3,Yl
_>jQfrT4)pmJm5Cr4`4fnGiQ%r4`4Lp]0se!#baM!*H]1!%%TY!*JXh!&"2O!&"6NoDeksr2fr8li7#%
rN-&r[f?CPrN-&rmJm5=r20NHnGiPmr20N1li7#$rMKWic2d,0!$V<=!);k]!'U8B!'TiP!.=_,!$CP-
!$D1%!,Cg"bl@_qrT4)pmJm6"r4h_$!42X=!2f)_!<>gl^AoRh!!">D^AqC(!!$=&XmuGn!!&blXT4[Q
!!#IdXT0QS!!"5AXT22k!;QTp>5Y;f!!&SgVZ;kF!!#CbVZ7mX!;-<l+oS;=:$qu]I/N-r!!([MjoEHf
!!$:&jo@!k!8%8O/cFf3C@2'%Rf0u$Rdg@X-2bLX=R,qeJH!:`Zhsg8!!">D^AqC(!!%rUXT4:L!!"5@
XT22s!:BgeFT/BBU:(%%,5nVD;"F\b!!%cPVZ;JA!!"2?VZ9HW!!%!;VZ<:&!;HNo+oS;=:$qu]\c(Xj
\a]Y"/c=`2C?kj"Rf;FLf\?J]!!"VLjoB/a!;sS3BCPs%F8WcQ)=%8&Zi7]>JGB2Z!!">D^AqC(!;rr!
?1@mpB`+t4(]+4&!!&bmXT3IO!!"5AXT22c!;r_p>4DRmAGi>*(@(r#Sc5MeE4,`I+fG=;!);k]r8n!,
nGiQHr8mu$lMpq;roO3Ld/`;/!%n03!,Cs&!&OPf!&O-F!42X=!1N3R!#baM!)2e\aT);erP&>7mf3>?
r2frOnGiQ`rN-'Xmf<:d!#PU9!(F<r!$_BD!)W+a!%n,H!%mmEqu?_frMKXMlMpo#rMKW_[K$:NrMKWi
q>g3h!'U8B!'TiP!8.84!4hCq!$D1%!*mMDnGiP@rT4)pmf3?#r4hb%!&OPf!*JOe!)3@+!#aese,TIp
rP&>7mf3>nr2oJh!&"2O!)Vt]!(Hjg!>baF!!"5AXT22d!!$4#Vss`e/c;LH:$VcZ6iEn_(:F2C+oS;=
:%&&^I/N-s!!#1[joB/^!!$:&jo?L8!;lfs/cFf3C@;-&Rf0u$Rdg@XF8WcQ%/Kr*5Ca18!!%QK^AtUl
!8dbV-2kRY=RQ4iMuBaXMt$cIB`+t4$i0i)3HPZ%!!%-?XT5*f!5\^9,5nVD;""AaLAe"ML@G6DAGi>*
$Mj`)2fK*(p&G)3rhfae[/^1MrMKWimf3?urT4*jquHEj!/g^:!"Si*!_f$mo`+u\roO45[/^1YrT4)p
mf<:#!,(g%!42X=!0$^R!iE^Mr;ZjSZgb^0VUGP1!!">D^AqC)!;rr!?1@mpUA_1oJ,''GQE:u%!!+^H
n>u\Vn,U]5!$_BD!)W+ar20NunGiQ[rMKXAq#CJYV\]42!A0l>VtR"gOh:Yo+oS;=:%&)[joBf!!!([M
joDCV!!:4'+8l0?4kT8d!6;_P!%n03!,D3-qZ$UPr4`4rnc/YGr4`5*q>^RC^U*h<!*J^)!2dg;o`+t<
rP&>7n,NG@r2frZnc/YBr2frfq>^R@XeP^n!)W-d!1)^HfDkmqrN-&rn,NG?r20NRnc/YAr20N^q>^R?
Vk*_c!);p[!0Ono!$V<=!);q_!'U8B!)2q`!'U8B!*oF%"98ERk1KS3!,Cub!6;_P!%n03!,D**rVuq2
r4`4?nc/Z?r4`4?q>^S<^N95Or!WR-rP&=Yr!^ICp](:?rP&>7n,NGor2fr,nc/Z3r2fr,q>^S1X_@P2
r!NL$rN-&Dr!VE_gAh3trN-&rn,NGlr20N%nc/Z/r20N%q>^S-Ve#W(r!EEurMKW=r!NB&^&S-VrMKWi
n,NH9r8mthnc/ZYr8mthq>^MQ!To:9!;m<,CAm8p/c6*i!!"VLjoB/c!!&Jd^B184!:p3g^As5g!!9LA
-1q6<JH!:`Za9]5-,9Go!*J^j!/pfX!1*-Tr2fsKq#CJjXWmE<!-J4B!2@d>jo>B*rN-&rn,NHCrMKXX
nGrKb!.+G@!hH54o`+u2rhfaeli>--!$V<=!);q_!4i'j!6=U0r8n!Yq#CKKjt6?.rVuqeroO45ZiC(X
rT4)pn,WC$!-@c4!WW3<r4`4rq>^RQ^S^W'!42[>!._EV!%%TY!*K'tpAk,n!,1p'!#PR8!'0lU!\UU@
oDelcriH0B_uT<-!$_BD!)W.br20O*nc/Y*r20NRq>^RKVigTO!1j+e!-$lse,TIlrMKWin,WCK!/g=I
!$D.$!)34h!^5\doDemDroO3LrW'D-!%n03!,D$(!&OPf!'g#S!&OPfrW)ir!h-kto`+t0rP&>7ZiC(P
rP&>7nGiSBXo5@%3V!.M0)VjI!!8(\7J-W\(]CH9:q6T(!!"5AXT22f!!"VKVZ8[H!!"VKVtg;oL8RE3
!!!f5VZ9HB!8dbV+oS;=:%82`4oFFB9_&/`4oFI<!!9^n>kJ's+8t=%C@_GB!!"VLjoB/d!!$[0^An]5
!!#7^^At/-!!5C"Zi'n!!!#^k^AoRe!!">D^AqC+!!$=&XT/b+!;HNo3W6&[QMLR_3N]%J!!#IdXT0QP
!!"5AXT22f!!$4#VZ7(p!!"tVVZ;kU!!5*WSb)m^6iEn_+j0lN!!"2@VZ9H]!!%EEjo>n^!!#^kjoEHu
!!5jVf^o.D>lEdb/a*2Z!!"VLjoB/d!!&Jd^At/$!!"hR^As5h!!9%41\:YJJA20#^U(6H!%%TY!*Jak
!/pfX!1*-T!A:MRXT3kI!!8Ig0(],DFT/BBU9ah",5nVD;"ane!!%cPVZ;kL!!"VLVZ;&>!!8:\/bB#C
E;la8S\G0t!!"2@VZ9H]!!'S.joEHl!!#1\joDCW!!:4'4nJ^SRf;FLf\?JZ!!"VLjoB/d!;sS3F792.
^Ar?P!!75VJF`a@Zi7]>N;3Ic!!">D^AqC+!;rr!B^c$#XT3&3!!$[5X`X.7!2BIp!.V<T!$_BD!)W7e
rrDtp!+bR!rMKX+qZ$\.Vf;5-!1j+e!.)9Xp](:;rMKWinGrLL!/g7GrT4*;qZ$\Tk*klA!8.;5!3+WO
gAh4*rT4)po)Se:r4`4rn,NH$rkAGlqu?h3^SVG3!!!o8^AqC0!;ZZr5Gm8O!N$b%!!">D^AqC-!<48@
XT1BN!!$=(XT3kK!!HT0Q4!]c!!!i6XT22d!!,*Gh5p^D([V2&,5nVD;"F\e+oJ5<2uWgK!!$4%VZ;&@
!!?E&OUC^\!#GO2!);n^!B6.sVZDnqm/R/1VuERo:%JAb/c=`29^i#^I/`7.WVc_uI-/HZoDek5rT4)p
mf3A^a5Z7ZjoNLEm/R,<rT4)po)Sear4`4?mf3?brkA[U!!"=6^SVG2!!#^k^AoSK!!%QK^YZ^*=R?(g
-2kRY=RuOm7Js7f$h"&qQN!uk(B=FZMli9QoDeml7K'=g,4>L3FPEnt;!e5_,5nVD;"F\e6i<h^$M+8r
!!&/\V[!t;!$R)pOUC[[!(6^_!$Ue2!-$\j!);h\!$V<=!)<:iq>gP#r8mthmf3@.roOG-!!"U]k/Ru'
!!$:&jo@"%!!&JBjoB/p!:^$h/cFf3C@_H*1]>&gJF3C<%%@11!2fb1!ItUL!!%*=^[;(&-&hJnlD=T4
%.+#p-2kRY=RuOm0)_mPFRB,0$]G"d!1*Vd!H\_?!!$^2Xo&1j!!+9nh3J(`$gdoo,5nVD;"F\e/cDRI
E:*],$ASPX!Kj8^Vl+J@nc/Z#rMT&`!?ldFOTBD.m/R,0rMKWio)SeRs5jCFk*k]<!=l[>joEI$joLn\
nc/ZIrT<MJ!A1;,`rVV=nc8Rf!%n03!,D$("'Dn9BBoO%5E)q`Z[a@k!!&nq^As5B!8dbV-2kRY=Rc@n
:nj[ilMq,LJ"j'>F<^2S!1*Vd!.XM=_>jQ[rN-&rnGiYcSXisM!!YB.SYr#t+nu'5!!&/\VZ;%K!!"2@
VZ9H]!!?ugfR3GooDf(hWS$@cRP""/!6>*$!3*7(!%n03!,B:L!"Ah@!*I>Cl2Uf1rP&>7^]4?BrN-&r
joEX+!$_BD!)UH2!"/_'!N/Yt!!"2@VZ9HE!9aC_%fPMiC9dg>/cFf3CA%YN!!#7^^AoRo!;-<l-2kRY
=MOn:3W6&[,23+M!!"5AXT225!!"tVVZ7n8!4r42+oS;=:!Nb1!!#^kjo@!=!!"VLjoB/f!6tQEF8`kb
!;HNo-2kRY=MOn:B`5'b!8@JR,5nVD:r!&2AGrFu!58F5+oS;=:!3P1!!%oTk-4md/cFf3C?PZN!!&nq
^As5f!!/$P]DqsY^](tJ=MOn:QN!udJ+s!EImqrhjo>B*rN-&r^]4@srhfaBp](>@6hCB#!!"2@VZ9H,
!!((=joDCU!!0'(]Dqp`rT4)ph#QL9rP&>7q#CJ/^Lt1Z!%%TY!*K't`rQ(?!)WIk!aVp6bQ./5!$_BD
!)UH2rMKWiq#CJ"Vcr<be,TIlrMKWi^]=>q!,DB2"98FLk'XfA!%n03!,Bp^n,NG7rP&=Yq>^U+^V:Z!
!!">D^AqC)!7LoJ,5nVD,5M9A$a$NI_#XB5!$_BD!)UK3!$V<=!$V1=!t(s((>]&K!!"2@VZ9H-!!"VL
jo@"0!!<_njraI#_>jQfrT4)p`rPu:!)3@+q#CJ;^Lt.Y!%%TY!*J:^h>dOErN5kq!be]A])VgTrN-&r
_#OI&rMTGk!bA34dK&P4!$V<=!):90!*oKbq#CJRk'ZUtbl@_qrT4)p_#OIVrkAH>q>^RQ^S\RB!&OSg
!*InSkl:]sriH0pq>^RLXd6Nu!&"5P!)W@hbQ%WRrhfaeq>^RKViet!o`+tDrMKWi_#OImroO45q>^R[
k/ZK^fDkn7rT4)p_#OI;rkAH%qZ$a:^V;Q)])Vh5rP&>_c2dJ:!)WZs!/p^S!uJ)A0"M#_;#RKrFRoLY
!!#amVZ;JK!!="7V_,ddp](:grMKX7_#OIMroO3kqZ$^?k2nhb!8@JRCAm8pR_\t(-2tXZVYgDr-*t?[
quF\9rX8lH,r932^B9!N,oQ[jdK'"A!$_EE!1*N_"!XJA7DJp&$Nh1h/m\@V"*?OI(]Fg2!87DQ+o\A>
Oo,1]+e>Mu^]=?@"Vr75>,S:sVZUls+Vt%aa8c2lroO4$qu?gNf]HGg!:9dc%Kde)4ad.h".Dn8+8ubj
!!$[2^AoSZ!!??<^KBt*d/X/&mCrX'a8c3GriH/ErW!$sXfYF8!!"Y=XT22Z!9=+[>5kE"+oVHD9rFm`
^]4?dmABqYa8c3froO24rW!%8k2pF"!;QTp4mhA3C<$;SJH!:eJ;ghLZSUYBg].=1rkJH=rhf^arhf\$
rkAG8`rH*]riH?GJ"j'>0#%Ad0)i!PUAgJYMuK%AUAh7p:tbp;!!%!;VZh$cSYr#1^An6crhoadrfR58
rfR2Nrhf`jpAiS@!1NoL"e)FCk1Di3!!5=GjoFQCf`&qk\c0YKf`("5C;p5X-%Ml-VMmak!1!Th,'9-Q
Q@Cpe!.k4G!!XTcOf+=f2j+0q!!Y$Da6(FA9WnH1!!Xa"VSB!e5Kj,$!!XWhQE?I&3U$Ns!!+6^"HfUE
H8gTZjo>T;R`FR2WD')frW%H~>

%%EndBinary
grestore
np
51.1328 101.784 mo
57.1328 98.284 li
57.1328 99.148 li
51.1328 95.648 li
51.0117 95.549 li
50.9268 95.417 li
50.8867 95.266 li
50.8958 95.11 li
50.9528 94.964 li
51.0518 94.843 li
51.1827 94.758 li
51.3347 94.719 li
51.4908 94.727 li
51.6367 94.784 li
58.3767 98.716 li
51.6367 102.648 li
51.4908 102.705 li
51.3347 102.713 li
51.1827 102.674 li
51.0518 102.589 li
50.9528 102.468 li
50.8958 102.322 li
50.8867 102.166 li
50.9268 102.015 li
51.0117 101.883 li
51.1328 101.784 li
cp
31.2767 98.216 mo
57.3847 98.216 li
57.3847 99.216 li
31.2767 99.216 li
31.2767 98.216 li
.750271 .679713 .654902 .901946 cmyk
f
436.383 101.784 mo
442.383 98.284 li
442.383 99.148 li
436.383 95.648 li
436.262 95.549 li
436.177 95.417 li
436.137 95.266 li
436.146 95.11 li
436.203 94.964 li
436.302 94.843 li
436.433 94.758 li
436.585 94.719 li
436.741 94.727 li
436.887 94.784 li
443.627 98.716 li
436.887 102.648 li
436.741 102.705 li
436.585 102.713 li
436.433 102.674 li
436.302 102.589 li
436.203 102.468 li
436.146 102.322 li
436.137 102.166 li
436.177 102.015 li
436.262 101.883 li
436.383 101.784 li
cp
416.527 98.216 mo
442.635 98.216 li
442.635 99.216 li
416.527 99.216 li
416.527 98.216 li
f
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZWRLRB+TimesNewRomanPSMT gcheck setglobal} if
2 644 42 <00010048ffe105aa056b0034015d40540a04462e0219271a280210181019
02203640366036780870187019782a90189019b018b0190b2d2f760b870b
0318362e1a503670368c04ad04e036040c03860bc0360348081e1f1b18f3
22121f1b172123341b00b80105b3021b0101ba01b30000034b4043319a2c
1718182206282c030e282209012b1f1e0c131302551e0c0f0f02551e060d
0d02551e22111150129012020f124f1202001210127f12ff120412041010
02551212b8ffe4b40d0d025512b802f8400b0a3c5026010f261f260226b8
fff040100f0f025526100d0d0255264935648a182b4e10f42b2b5d724dfd
f62b2f2b5d71723c10fd2b2b2b3ce4003fed3fed12392f3c10ecf4ed0110
edf4ed2b2b313043794034202b07100825282729272a2703060c2624250f
21113b01201f1011072b0a2d000d230a2d0010200e3b000927062d010b25
0e2d002b2b2b012b2b103c103c2b2b2b2a2b818101715d2b005d015d0172
007271011323262726232007061514121633323637113426262335211523
220706151106062320272635343736373633321617163332363704e92323
355479befefd877196f3804b8c411f4152020d194e1d1473e089fe77cc99
5666b295cb4a796f3813131b03056bfe54a05175cdadefc2fec095262501
88663f21262634256dfe613e3afcbdf7b3a4c369571829152333>ZWRLRB+TimesNewRomanPSMT AddT42Char 
2 1440 50 <00020048ffe10578056b000c001b00b140319712a807a90aa91004770179
07870188070443080d28000315280609183c1f032f030200031003200330
0340030503491db8ffc0401a3f35201d401d021d113c10092009020f091f
090209491c6463182b4e10f45d724ded4d10712bf65d724ded003fed3fed
313043794032011b0f250b261a2613260e0c112d001b01182d011407112d
001605182d01100a0d2d0119020d2d011208152d001704152d002b2b2b2b
012b2b2b2b2b2b2b2b81015d5d0120001110002120001110373617220706
111017163332121110272602ed01080183fe7afeebfee8fe83dcbff7b66e
898e6db3bff9896e056bfe6ffed4fecbfe68018e013c0143ccb14987a8fe
bcfeb4b388012a0141015cab8800>ZWRLRB+TimesNewRomanPSMT AddT42Char 
2 1724 53 <0002002300000568054c00280034020240b224180f0f0255250c0f0f0255
872201128526c523c52d034924a72d02181f172e66240309010925262547
0058016f026f247b017b02731f7320762278258a018720982dab01ab25b7
26bc2dff2415062084018c2484279a24a501a402a624af2dbf2dd830ef2d
ff2d0d120016011a0212281a301a313a2e3a306624692f0a2a08021c1c01
151f1b0f21220025281b00081f1b0e2123161f1b1c212340022c25242422
02011402020124ac022002072a29a507b8ffc040170f0f02550710075007
6007039007a0070207001bac1c34b80191400f32281d1d1c020f0e0e0101
00081221b8ffc0b2583521b8ffc040454f350021af21024f21a0210221b5
10360140367036d036033634080613130255080c0f0f0255080c0d0d0255
082216150c10100255150c0f0f0255151a0d0d0255159e3561b901190018
2b4e10f42b2b2b3c4dfd2b2b2b3c105d72f45d712b2b4358b9002f032de9
1bb9002f032ded59003f3c103c103c3f3c10eded10ed12395d722f2bfd3c
103c191a10ed870e2e182b7d10c40112391a182b2b10ed0110c02b871005
7dc43130184379401c2d311e231f252d232f3301311e2f33012e222c3300
23243020323301002b103c2b012b2b2b81810172715d0072715d435c58b9
0025ffe0b20c3901b8fff0b2143928b8ffe0b614390210193928b8fff0b5
103930100f39002b012b2b2b2b002b59015d2b2b21210106232226271114
171633331521353332373635113427262323352132161615140607011616
170132163332363534262322070568fe96fe3533200d1e101c264c35fdbb
335625151c274d3301eed8cd8fa3ab0118608a6ffc3d131c09c2c59f833a
63027a020101fe76801f2c2525381f74036c801f2c253fa9757db826fe7b
86580c029401a8827f9f1300>ZWRLRB+TimesNewRomanPSMT AddT42Char 
2 2396 56 <0001000bffe005b1054c002e0183b90030ffc0b32a2f3430b8ffc0b32024
3430b8ffc04054161c3428063a064c06790f042523252732233227452345
27a5270729273927025030740b7b0f9a27bf27f826063c0e081f1b022122
1f1f1b1921222a1f1b012123131f1b1821231918180202010225280d092a
29b8fff1b41010025529b8ffe6b40f0f025529b8ffe6b40d0d025529b802
c94010090908400c3908403f35200830080208b8fff4401114140255080c
1313025508061010025508b8fff4b60f0f0255081a30b8ffc040443f3510
30017030a030b030e03004301f200613130255200c0f0f0255200c0d0d02
55202212127f13016f1301130c10100255130e0f0f0255131e0d0d025513
192ff4a2182b4e10f42b2b2b5d5d3c4d10fd2b2b2b3c4e105d712bf62b2b
2b2b5d2b2b3c4d10fd2b2b2b3c003fed3f3c103c103c2b2b2b2b31304b51
79b137084379402621280a112221232102060f252725240e202d00101126
0c292d010b0a2110252d00280b252d002b2b01103c2b103c2b2b2b2a8181
015d71005d0071012b2b2b01352115232207061511140606232226272635
1134262323352115232207061511141e023332363635113427262303d101
e033502b1551edccdee63020454d33024a345424191d4c8f6885d24d1c27
4d05272525431f71fddacce1a19a8259f502127d4e2525352472fdb14fcc
724a74b5d802257f202c>ZWRLRB+TimesNewRomanPSMT AddT42Char 
2 4540 71 <00020044ffe40405058e001f002d024bb1020243545840262f4010100255
2906180d0d025506080f0f0255060c101002550600201d160a0d0d025516
0b20b8fff4401112120255200c1313025520180d0d025520b8fff8400c0f
0f0255201810100255201cba03e2001dffc0b6091002551d1f12b803e240
101340090e0255131400252509072c2c03002fed3fed3fdd2bed2fdd2bed
012f2b2b2b2b2bc0dd2bc410c02f2b2b2bcd31302b1bb106024354584052
1213140000200b0303252509071c701d01401d601d021d1f0b2c2c030b16
0c0d0d0655160410100655160b20141010065520040f0f065520020d0d06
5520202f2e290c0d0d06552906180d0d065506062f2e1112392f2bcd2b11
12392f2b2b2bc0cd2b2b003fed3fdd5d5dcd3fed1217393fddcd31301bb9
002fffc0b34747342fb8ffc040422b2e34602f7c047c058a04802faf2fc0
2f07402f802f02002f162a152b55055508542b960707480701202f370a47
0a560a9804a72aa02f07c02ff02b022020002021baffe0000bffe040453c
204f205e20660a6c207a209f009f20aa07b907c62a0b260813270c41121e
1344151d2716411c1e1d441f0020210b042c1500252509071f2c012c2c1f
030b1f000b210c20b8016740121560168016af16031f1690160216eb2950
06b8ffc0b3282e3406b8ffc0b7473506432e437f182b4e10f42b2b4dedfd
725d3cfd3c3c3c3c3c003f3ced723fed3f11173910f5edfc01f50010f5ed
fc01f531304379401a262b0408272526082920002b042920002807252001
2a052c2000002b2b012b2b2b8181005d3838383801715d00710172715d2b
2b5959250606232226353412333217353426262322072725331114161633
323717052335112e0223220706151416333202c743804a96e0f8c3794f0f
20181a2b0d01112d0f21161b2d0bfef02e063c632f58455bb06c5b67463d
fbc5c501474da99d481a102370fbdda1471c112371c901d84470394f68c8
cad7>ZWRLRB+TimesNewRomanPSMT AddT42Char 
2 6254 73 <0001004f0000037a058c002b0208b1020243545840252d40101002552d40
0f0f02552d400d0d02551b2b01100e0601080e2901080d0d025501120eb8
ffea4012121202550e120d0d02550e0c0f0f02550e06ba03e2000903e240
0a0824251e1700000f290fb8011bb2120608002f3fedc010c03fcded10ed
ed012f2b2b2bc0dd2bc010c410c610c610c6c431302b2b2b1bb106024354
58b9000f011bb2120600b8011b401d2906241e17000829010c0d0d065501
060f0f065501021010065501120eb8ffd8400b0d0d06550e060f0f06550e
b8ffdab7101006550e0e2d2c1112392f2b2b2bc0dd2b2b2bc0002f3fcdcd
3fed3fed31301b403e8b2099159926034403440c48198503850c059a0401
2f2d7f21900690079f089f099e109e11b02d0910061007025f2a5f2b021c
080eb41e08922201b41e07b80308401f231e9f1ebf1e021e11242517012b
50100110302a2912110608070a101b011bb80152b38f2d012db802f6b201
2a2bb80110400d282901120f1110920f0f01240eb8ffc0b36060340eb8ff
c0b33a3a340eb8ffc0b33f3f340eb8ffc0b32431340eb8ffc040161c2134
900e01000e100e5f0e700ec00ed00e060e192cba0306030700182b4e10f4
5d722b2b2b2b2b4ded3c10f43c103c103c3cf43c10e65de472003f3c3f3c
3c3cfd723c3ffd11395d2f2b2b3130437940122527141626251526251628
1c002714241c012b012b2b2b81810172715d0072715d5959011114171633
331521353332363635112335333534363633321716151406232226262726
232206061515331501a61c253e53fddd29284219b2b258b57169583a341e
17334a1f1f262e401cec034cfda680222c2424284462025a483c89be7544
2d381e35216d13133167d6424800>ZWRLRB+TimesNewRomanPSMT AddT42Char 
3 0 90 <0001000dffe405b40394002c03cdb10202435458b626211e110e022cb803
e2400e00092618080428251f060f060006003f3f3f2f2f173910fdd0d0d0
d0c0012f31301bb10602435458b90026ffe840440d0d0655181c0d0d0655
081c0d0d065518101010065508101010065508182609040028211e110e02
792c012c00752501250b752801280b1f060f0600062c2c2d21212e2d1112
392f11392f003f3f3f3f5d3f5d10dd5dd0d0d0d0c01112173931302b2b2b
2b2b1bb1122eb8ffc0401c3f351627201020112527202e5f2e6909702ee9
25e928f825f8280c2eb8ffc0b213352eb8ffc040c81b1f34212e2e296436
1d19191f1b23102e040a261d262c2639265517a717a718a726080b253724
37274f004c014d074908472446274d284d298807801080118d2588288829
802e9a109417a718a725bb10b925b928bf2ec825c828d925d928d02e1f00
050407061504170925072709280629351743104311500552075618522989
0b8f1088188919892388258826802e17870986178726030d095901771077
110409090826262725250a0107021e011017111e102023211e2000292c1e
000f0a0e1e0f1f191e1e1fb8ff86b308282720b8ff7d4040182524200807
080907242928142929282627262527300809140808091815181915240a25
140a0a25232424301819141818192926231918170a0908070a002821bb01
ec0020001e01ecb31f010f11bb01ec0010000e01ec400a0f0f10101f1f20
200002bb01ec0001002c01ecb301000618bb016a0025000801a6400f2840
2725252424280b20fc0f650a01b801b1b4c000652923b801084015401b2f
501901a01901bd19cf19df19031992242f18b8011bb7200f250110250125
b8ffc0b30b0c3425bb0110002600150167400c400a2f5f26014026802602
26b801ecb4097d272f08ba011b0008011b400a200028018028f0280228b8
ffc0b50b0c3428a007b80167401b5029018029010029102920294029b029
c029d0290729602dab89182b10f65d7172edf42b5d71191aedfde4f4ed5d
7118f41aed1910f42b5d711afde4f45d717218e41aed10f41aed10f4ed00
3f3c103c103c1a10ed10ed3f3ced10ed103c103c103c103c10ed10ed103c
10ed10ed1112173987052e2b0e7d10c4870e2e182b087d10c487052e182b
087d10c4870e2e182b087d10c42b2b180010ed0110c00010ed0110c00010
ed0110c00010ed0110c00010ed0110c00010ed0110c00710083c083c3130
015d5d71015d005d01722b2b2b015d2b435c58b52610140c3f24b8fff0b3
140c3f13b8ffe0b21d3917b8ffe0b21d3917b8ffe0b2143917b8fff0b217
3925b8fff0b2153917b8fff0b11539012b2b2b2b2b2b2b2b595959132115
060615141713132726272627352115060706151417131336353426273521
1506070123030123012626270d0180352111c4c5341827163c01b4481e14
08d0c114273901215729fece29e5fef525feda1d383c039425041e1c1f2c
fdf101ad873c170e032525031710231415fdf201fb3620131e0225250d69
fceb0249fdb7030249330d00>ZWRLRB+TimesNewRomanPSMT AddT42Char 
ZWRLRB+TimesNewRomanPSMT /CharStrings get begin
/G 42 def
/O 50 def
/R 53 def
/U 56 def
/d 71 def
/f 73 def
/w 90 def
end
ZWRLRB+TimesNewRomanPSMT /Encoding get
dup 71 /G put
dup 79 /O put
dup 82 /R put
dup 85 /U put
dup 100 /d put
dup 102 /f put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZWRLRB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one 21{/.notdef}rp /G 
/.notdef /I 5{/.notdef}rp /O 2{/.notdef}rp /R 2{/.notdef}rp /U 
11{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp 
/i /.notdef /k /.notdef /m /n /o /p 
/.notdef /r /s /t /u /v /w 136{/.notdef}rp]
ZWRLRB+TimesNewRomanPSMT nf
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
39.7767 17.666 mo
(O)sh
46.9767 17.666 mo
(u)sh
51.9767 17.666 mo
(t)sh
54.7767 17.666 mo
(p)sh
59.7767 17.666 mo
(u)sh
64.7767 17.666 mo
(t)sh
67.5768 17.666 mo
( )sh
70.0768 17.666 mo
(o)sh
75.0768 17.666 mo
(f)sh
78.4268 17.666 mo
( )sh
80.9268 17.666 mo
(f)sh
84.2767 17.666 mo
(o)sh
89.2767 17.666 mo
(r)sh
92.6267 17.666 mo
(w)sh
99.8268 17.666 mo
(a)sh
104.277 17.666 mo
(r)sh
107.627 17.666 mo
(d)sh
112.627 17.666 mo
( )sh
39.7767 29.666 mo
(G)sh
46.9767 29.666 mo
(R)sh
53.6267 29.666 mo
(U)sh
60.8268 29.666 mo
( )sh
63.3268 29.666 mo
(a)sh
67.7767 29.666 mo
(t)sh
70.5768 29.666 mo
( )sh
73.0768 29.666 mo
(t)sh
75.8767 29.666 mo
(i)sh
78.6768 29.666 mo
(m)sh
86.4767 29.666 mo
(e)sh
90.9268 29.666 mo
( )sh
93.4268 29.666 mo
(s)sh
97.3268 29.666 mo
(t)sh
100.127 29.666 mo
(e)sh
104.577 29.666 mo
(p)sh
109.577 29.666 mo
( )sh
112.077 29.666 mo
(t)sh
114.877 29.666 mo
(-)sh
118.227 29.666 mo
(1)sh
126.531 77.369 mo
130.302 83.203 li
129.439 83.243 li
132.661 77.089 li
132.755 76.964 li
132.882 76.873 li
133.032 76.827 li
133.188 76.828 li
133.336 76.878 li
133.462 76.972 li
133.552 77.099 li
133.599 77.249 li
133.597 77.405 li
133.547 77.553 li
129.927 84.466 li
125.692 77.912 li
125.628 77.769 li
125.612 77.613 li
125.645 77.461 li
125.724 77.325 li
125.84 77.221 li
125.983 77.158 li
126.139 77.142 li
126.292 77.174 li
126.427 77.253 li
126.531 77.369 li
cp
81.8767 89.158 mo
81.8857 88.6 li
81.9117 88.035 li
81.9557 87.47 li
82.0168 86.907 li
82.0948 86.345 li
82.1888 85.785 li
82.2987 85.226 li
82.4247 84.67 li
82.5657 84.117 li
82.7227 83.566 li
82.8947 83.018 li
83.0807 82.473 li
83.2817 81.932 li
83.4967 81.395 li
83.7257 80.862 li
83.9677 80.333 li
84.2238 79.808 li
84.4918 79.289 li
84.7727 78.775 li
85.0667 78.266 li
85.3717 77.762 li
85.6907 77.263 li
86.3587 76.289 li
87.0717 75.339 li
87.8278 74.418 li
88.6227 73.528 li
89.4547 72.671 li
90.3228 71.849 li
91.2247 71.064 li
92.1567 70.318 li
93.1187 69.614 li
94.1068 68.953 li
95.1177 68.34 li
95.6357 68.049 li
96.1557 67.771 li
96.6817 67.506 li
97.2127 67.254 li
97.7477 67.015 li
98.2878 66.79 li
98.8318 66.577 li
99.3788 66.379 li
99.9308 66.195 li
100.485 66.026 li
101.043 65.871 li
101.603 65.732 li
102.166 65.607 li
102.731 65.499 li
103.298 65.406 li
103.866 65.329 li
104.437 65.269 li
105.008 65.226 li
105.58 65.2 li
106.151 65.191 li
106.721 65.198 li
107.29 65.219 li
107.859 65.253 li
108.426 65.301 li
108.992 65.362 li
109.556 65.436 li
110.119 65.522 li
110.679 65.621 li
111.237 65.733 li
111.792 65.856 li
112.345 65.991 li
112.897 66.138 li
113.982 66.464 li
115.055 66.835 li
116.109 67.248 li
117.143 67.701 li
118.155 68.192 li
119.143 68.72 li
120.104 69.283 li
121.037 69.879 li
121.938 70.508 li
122.807 71.166 li
123.641 71.852 li
124.438 72.566 li
125.195 73.304 li
125.911 74.066 li
126.583 74.85 li
127.209 75.654 li
127.787 76.477 li
128.313 77.315 li
128.558 77.744 li
128.789 78.174 li
129.006 78.607 li
129.208 79.044 li
129.397 79.484 li
129.57 79.926 li
129.729 80.372 li
129.872 80.82 li
129.999 81.27 li
130.111 81.722 li
130.206 82.176 li
130.285 82.632 li
130.347 83.089 li
130.379 83.426 li
129.384 83.523 li
129.352 83.195 li
129.354 83.214 li
129.295 82.775 li
129.298 82.793 li
129.222 82.355 li
129.226 82.373 li
129.134 81.936 li
129.138 81.953 li
129.03 81.518 li
129.035 81.534 li
128.912 81.1 li
128.917 81.116 li
128.779 80.684 li
128.784 80.699 li
128.631 80.269 li
128.636 80.284 li
128.468 79.856 li
128.474 79.87 li
128.292 79.444 li
128.298 79.458 li
128.102 79.035 li
128.108 79.048 li
127.898 78.627 li
127.904 78.64 li
127.68 78.223 li
127.687 78.235 li
127.45 77.821 li
127.46 77.838 li
126.947 77.02 li
126.961 77.041 li
126.398 76.239 li
126.413 76.259 li
125.801 75.474 li
125.816 75.492 li
125.159 74.726 li
125.174 74.742 li
124.474 73.997 li
124.489 74.012 li
123.747 73.289 li
123.763 73.304 li
122.982 72.604 li
122.998 72.618 li
122.18 71.944 li
122.195 71.957 li
121.343 71.311 li
121.359 71.323 li
120.473 70.706 li
120.49 70.717 li
119.573 70.131 li
119.59 70.141 li
118.646 69.588 li
118.663 69.597 li
117.692 69.078 li
117.71 69.087 li
116.715 68.605 li
116.733 68.613 li
115.717 68.168 li
115.735 68.175 li
114.7 67.77 li
114.719 67.777 li
113.665 67.413 li
113.685 67.419 li
112.616 67.098 li
112.631 67.102 li
112.092 66.958 li
112.102 66.961 li
111.56 66.828 li
111.571 66.831 li
111.026 66.71 li
111.036 66.712 li
110.489 66.603 li
110.5 66.605 li
109.95 66.508 li
109.961 66.51 li
109.41 66.425 li
109.421 66.427 li
108.868 66.354 li
108.879 66.356 li
108.325 66.296 li
108.336 66.297 li
107.78 66.25 li
107.792 66.251 li
107.236 66.217 li
107.248 66.218 li
106.691 66.198 li
106.703 66.198 li
106.146 66.191 li
106.16 66.191 li
105.603 66.2 li
105.618 66.199 li
105.061 66.225 li
105.076 66.224 li
104.519 66.266 li
104.534 66.264 li
103.978 66.323 li
103.993 66.321 li
103.438 66.396 li
103.452 66.394 li
102.899 66.484 li
102.913 66.482 li
102.361 66.588 li
102.375 66.585 li
101.825 66.707 li
101.838 66.703 li
101.291 66.84 li
101.304 66.837 li
100.759 66.988 li
100.771 66.984 li
100.229 67.15 li
100.241 67.146 li
99.7018 67.326 li
99.7137 67.322 li
99.1777 67.516 li
99.1888 67.511 li
98.6567 67.719 li
98.6678 67.714 li
98.1397 67.935 li
98.1508 67.931 li
97.6257 68.165 li
97.6367 68.16 li
97.1168 68.407 li
97.1267 68.402 li
96.6107 68.662 li
96.6217 68.657 li
96.1107 68.929 li
96.1208 68.923 li
95.6147 69.207 li
95.6298 69.199 li
94.6347 69.803 li
94.6537 69.791 li
93.6827 70.44 li
93.7007 70.427 li
92.7567 71.119 li
92.7727 71.106 li
91.8568 71.839 li
91.8737 71.825 li
90.9877 72.596 li
91.0027 72.582 li
90.1508 73.39 li
90.1647 73.375 li
89.3467 74.218 li
89.3618 74.202 li
88.5797 75.077 li
88.5938 75.061 li
87.8517 75.965 li
87.8647 75.948 li
87.1647 76.881 li
87.1777 76.863 li
86.5208 77.821 li
86.5298 77.807 li
86.2177 78.296 li
86.2238 78.286 li
85.9237 78.78 li
85.9297 78.77 li
85.6418 79.269 li
85.6477 79.259 li
85.3717 79.763 li
85.3777 79.753 li
85.1147 80.262 li
85.1198 80.252 li
84.8698 80.765 li
84.8748 80.755 li
84.6378 81.272 li
84.6418 81.261 li
84.4187 81.783 li
84.4228 81.772 li
84.2127 82.298 li
84.2177 82.286 li
84.0208 82.815 li
84.0247 82.803 li
83.8427 83.335 li
83.8467 83.323 li
83.6787 83.858 li
83.6827 83.846 li
83.5298 84.384 li
83.5338 84.371 li
83.3947 84.911 li
83.3987 84.898 li
83.2758 85.441 li
83.2787 85.427 li
83.1707 85.971 li
83.1737 85.957 li
83.0818 86.503 li
83.0837 86.489 li
83.0088 87.037 li
83.0107 87.022 li
82.9507 87.57 li
82.9528 87.555 li
82.9098 88.105 li
82.9107 88.089 li
82.8847 88.639 li
82.8857 88.624 li
82.8767 89.174 li
81.8767 89.158 li
f
234.727 10.106 mo
234.677 7.07101 237.132 4.616 240.127 4.586 cv
315.847 4.586 li
318.822 4.616 321.277 7.07101 321.247 10.106 cv
321.247 32.066 li
321.277 35.061 318.822 37.516 315.847 37.466 cv
240.127 37.466 li
237.132 37.516 234.677 35.061 234.727 32.066 cv
234.727 10.106 li
.14023 .106905 .111513 0 cmyk
ef
234.185 9.79202 mo
234.208 9.48801 li
234.246 9.189 li
234.298 8.89401 li
234.365 8.604 li
234.446 8.32001 li
234.54 8.04202 li
234.647 7.77002 li
234.767 7.505 li
234.902 7.242 li
235.199 6.75302 li
235.543 6.293 li
235.929 5.86801 li
236.354 5.48199 li
236.814 5.138 li
237.303 4.841 li
237.566 4.70602 li
237.831 4.586 li
238.103 4.479 li
238.381 4.38501 li
238.665 4.30402 li
238.955 4.237 li
239.25 4.185 li
239.549 4.147 li
239.853 4.12402 li
240.154 4.116 li
315.8 4.116 li
316.101 4.12402 li
316.405 4.147 li
316.704 4.185 li
316.999 4.237 li
317.289 4.30402 li
317.573 4.38501 li
317.851 4.479 li
318.123 4.586 li
318.388 4.70602 li
318.651 4.841 li
319.14 5.138 li
319.6 5.48199 li
320.025 5.86801 li
320.411 6.293 li
320.755 6.75302 li
321.052 7.242 li
321.187 7.505 li
321.307 7.77002 li
321.414 8.04202 li
321.508 8.32001 li
321.589 8.604 li
321.656 8.89401 li
321.708 9.189 li
321.746 9.48801 li
321.769 9.79202 li
321.777 10.093 li
321.777 32.039 li
321.769 32.34 li
321.746 32.644 li
321.708 32.943 li
321.656 33.238 li
321.589 33.528 li
321.508 33.812 li
321.414 34.09 li
321.307 34.362 li
321.187 34.627 li
321.052 34.89 li
320.755 35.379 li
320.411 35.839 li
320.025 36.264 li
319.6 36.65 li
319.14 36.994 li
318.651 37.291 li
318.388 37.426 li
318.123 37.546 li
317.851 37.653 li
317.573 37.747 li
317.289 37.828 li
316.999 37.895 li
316.704 37.947 li
316.405 37.985 li
316.101 38.008 li
315.8 38.016 li
240.154 38.016 li
239.853 38.008 li
239.549 37.985 li
239.25 37.947 li
238.955 37.895 li
238.665 37.828 li
238.381 37.747 li
238.103 37.653 li
237.831 37.546 li
237.566 37.426 li
237.303 37.291 li
236.814 36.994 li
236.354 36.65 li
235.929 36.264 li
235.543 35.839 li
235.199 35.379 li
234.902 34.89 li
234.767 34.627 li
234.647 34.362 li
234.54 34.09 li
234.446 33.812 li
234.365 33.528 li
234.298 33.238 li
234.246 32.943 li
234.208 32.644 li
234.185 32.34 li
234.177 32.039 li
234.177 10.093 li
234.185 9.79202 li
cp
235.177 10.112 mo
235.177 10.099 li
235.177 32.033 li
235.177 32.02 li
235.184 32.302 li
235.183 32.277 li
235.204 32.555 li
235.201 32.53 li
235.236 32.805 li
235.232 32.78 li
235.281 33.05 li
235.276 33.025 li
235.337 33.291 li
235.331 33.266 li
235.404 33.527 li
235.397 33.503 li
235.483 33.758 li
235.475 33.735 li
235.573 33.984 li
235.564 33.961 li
235.673 34.204 li
235.663 34.182 li
235.784 34.418 li
235.766 34.387 li
236.041 34.839 li
236.014 34.799 li
236.33 35.221 li
236.299 35.184 li
236.653 35.574 li
236.619 35.54 li
237.009 35.894 li
236.972 35.863 li
237.394 36.179 li
237.354 36.152 li
237.806 36.427 li
237.775 36.409 li
238.011 36.53 li
237.989 36.52 li
238.232 36.629 li
238.209 36.62 li
238.458 36.718 li
238.435 36.71 li
238.69 36.796 li
238.666 36.788 li
238.927 36.862 li
238.902 36.856 li
239.168 36.917 li
239.143 36.912 li
239.413 36.961 li
239.388 36.957 li
239.663 36.992 li
239.638 36.989 li
239.916 37.01 li
239.891 37.009 li
240.173 37.016 li
240.16 37.016 li
315.794 37.016 li
315.781 37.016 li
316.063 37.009 li
316.038 37.01 li
316.316 36.989 li
316.291 36.992 li
316.566 36.957 li
316.541 36.961 li
316.811 36.912 li
316.786 36.917 li
317.052 36.856 li
317.027 36.862 li
317.288 36.788 li
317.264 36.796 li
317.519 36.71 li
317.496 36.718 li
317.745 36.62 li
317.722 36.629 li
317.965 36.52 li
317.943 36.53 li
318.179 36.409 li
318.148 36.427 li
318.6 36.152 li
318.56 36.179 li
318.982 35.863 li
318.945 35.894 li
319.335 35.54 li
319.301 35.574 li
319.655 35.184 li
319.624 35.221 li
319.94 34.799 li
319.913 34.839 li
320.188 34.387 li
320.17 34.418 li
320.291 34.182 li
320.281 34.204 li
320.391 33.961 li
320.381 33.984 li
320.479 33.735 li
320.471 33.758 li
320.557 33.503 li
320.55 33.527 li
320.623 33.266 li
320.617 33.291 li
320.678 33.025 li
320.673 33.05 li
320.722 32.78 li
320.718 32.805 li
320.753 32.53 li
320.75 32.555 li
320.771 32.277 li
320.77 32.302 li
320.777 32.02 li
320.777 32.033 li
320.777 10.099 li
320.777 10.112 li
320.77 9.83002 li
320.771 9.85501 li
320.75 9.577 li
320.753 9.60202 li
320.718 9.327 li
320.722 9.35202 li
320.673 9.082 li
320.678 9.10699 li
320.617 8.841 li
320.623 8.866 li
320.55 8.60501 li
320.557 8.629 li
320.471 8.37402 li
320.479 8.397 li
320.381 8.14801 li
320.391 8.17102 li
320.281 7.92801 li
320.291 7.95001 li
320.17 7.71402 li
320.188 7.745 li
319.913 7.293 li
319.94 7.33301 li
319.624 6.91101 li
319.655 6.948 li
319.301 6.55801 li
319.335 6.59201 li
318.945 6.23801 li
318.982 6.26901 li
318.56 5.953 li
318.6 5.98001 li
318.148 5.70502 li
318.179 5.72302 li
317.943 5.60202 li
317.965 5.612 li
317.722 5.50302 li
317.745 5.51202 li
317.496 5.414 li
317.519 5.422 li
317.264 5.336 li
317.288 5.34402 li
317.027 5.27002 li
317.052 5.276 li
316.786 5.215 li
316.811 5.22 li
316.541 5.17102 li
316.566 5.17502 li
316.291 5.14001 li
316.316 5.14301 li
316.038 5.12201 li
316.063 5.12302 li
315.781 5.116 li
315.794 5.116 li
240.16 5.116 li
240.173 5.116 li
239.891 5.12302 li
239.916 5.12201 li
239.638 5.14301 li
239.663 5.14001 li
239.388 5.17502 li
239.413 5.17102 li
239.143 5.22 li
239.168 5.215 li
238.902 5.276 li
238.927 5.27002 li
238.666 5.34402 li
238.69 5.336 li
238.435 5.422 li
238.458 5.414 li
238.209 5.51202 li
238.232 5.50302 li
237.989 5.612 li
238.011 5.60202 li
237.775 5.72302 li
237.806 5.70502 li
237.354 5.98001 li
237.394 5.953 li
236.972 6.26901 li
237.009 6.23801 li
236.619 6.59201 li
236.653 6.55801 li
236.299 6.948 li
236.33 6.91101 li
236.014 7.33301 li
236.041 7.293 li
235.766 7.745 li
235.784 7.71402 li
235.663 7.95001 li
235.673 7.92801 li
235.564 8.17102 li
235.573 8.14801 li
235.475 8.397 li
235.483 8.37402 li
235.397 8.629 li
235.404 8.60501 li
235.331 8.866 li
235.337 8.841 li
235.276 9.10699 li
235.281 9.082 li
235.232 9.35202 li
235.236 9.327 li
235.201 9.60202 li
235.204 9.577 li
235.183 9.85501 li
235.184 9.83002 li
235.177 10.112 li
.113375 .0942092 .259953 0 cmyk
f
.750271 .679713 .654902 .901946 cmyk
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
241.127 19.216 mo
(O)sh
248.327 19.216 mo
(u)sh
253.327 19.216 mo
(t)sh
256.127 19.216 mo
(p)sh
261.127 19.216 mo
(u)sh
266.127 19.216 mo
(t)sh
268.927 19.216 mo
( )sh
271.427 19.216 mo
(o)sh
276.427 19.216 mo
(f)sh
279.777 19.216 mo
( )sh
282.277 19.216 mo
(f)sh
285.627 19.216 mo
(o)sh
290.627 19.216 mo
(r)sh
293.977 19.216 mo
(w)sh
301.177 19.216 mo
(a)sh
305.627 19.216 mo
(r)sh
308.977 19.216 mo
(d)sh
313.977 19.216 mo
( )sh
241.127 31.216 mo
(G)sh
248.327 31.216 mo
(R)sh
254.977 31.216 mo
(U)sh
262.177 31.216 mo
( )sh
264.677 31.216 mo
(a)sh
269.127 31.216 mo
(t)sh
271.927 31.216 mo
( )sh
274.427 31.216 mo
(t)sh
277.227 31.216 mo
(i)sh
280.027 31.216 mo
(m)sh
287.827 31.216 mo
(e)sh
292.277 31.216 mo
( )sh
294.777 31.216 mo
(s)sh
298.677 31.216 mo
(t)sh
301.477 31.216 mo
(e)sh
305.927 31.216 mo
(p)sh
310.927 31.216 mo
( )sh
313.427 31.216 mo
(t)sh
349.087 10.106 mo
349.077 7.02802 351.539 4.56601 354.607 4.586 cv
435.847 4.586 li
438.865 4.56601 441.327 7.02802 441.367 10.106 cv
441.367 32.066 li
441.327 35.104 438.865 37.566 435.847 37.586 cv
354.607 37.586 li
351.539 37.566 349.077 35.104 349.087 32.066 cv
349.087 10.106 li
.14023 .106905 .111513 0 cmyk
ef
348.585 9.758 mo
348.608 9.453 li
348.646 9.15302 li
348.699 8.85699 li
348.766 8.56702 li
348.847 8.28201 li
348.941 8.00302 li
349.049 7.73001 li
349.169 7.46402 li
349.304 7.20001 li
349.601 6.711 li
349.947 6.24902 li
350.334 5.823 li
350.76 5.436 li
351.222 5.091 li
351.711 4.793 li
351.975 4.65802 li
352.241 4.53799 li
352.514 4.43002 li
352.793 4.336 li
353.078 4.255 li
353.368 4.18802 li
353.664 4.13501 li
353.964 4.09702 li
354.269 4.07401 li
354.571 4.06601 li
435.833 4.06601 li
436.135 4.07401 li
436.44 4.09702 li
436.74 4.13501 li
437.036 4.18802 li
437.326 4.255 li
437.611 4.336 li
437.89 4.43002 li
438.163 4.53799 li
438.428 4.65802 li
438.693 4.793 li
439.182 5.091 li
439.644 5.436 li
440.07 5.823 li
440.457 6.24902 li
440.802 6.711 li
441.1 7.20001 li
441.235 7.46402 li
441.355 7.73001 li
441.463 8.00302 li
441.557 8.28201 li
441.638 8.56702 li
441.705 8.85699 li
441.758 9.15302 li
441.796 9.453 li
441.819 9.758 li
441.827 10.06 li
441.827 32.072 li
441.819 32.374 li
441.796 32.679 li
441.758 32.979 li
441.705 33.275 li
441.638 33.565 li
441.557 33.85 li
441.463 34.129 li
441.355 34.402 li
441.235 34.668 li
441.1 34.932 li
440.802 35.421 li
440.457 35.883 li
440.07 36.309 li
439.644 36.696 li
439.182 37.041 li
438.693 37.339 li
438.428 37.474 li
438.163 37.594 li
437.89 37.702 li
437.611 37.796 li
437.326 37.877 li
437.036 37.944 li
436.74 37.997 li
436.44 38.035 li
436.135 38.058 li
435.833 38.066 li
354.571 38.066 li
354.269 38.058 li
353.964 38.035 li
353.664 37.997 li
353.368 37.944 li
353.078 37.877 li
352.793 37.796 li
352.514 37.702 li
352.241 37.594 li
351.975 37.474 li
351.711 37.339 li
351.222 37.041 li
350.76 36.696 li
350.334 36.309 li
349.947 35.883 li
349.601 35.421 li
349.304 34.932 li
349.169 34.668 li
349.049 34.402 li
348.941 34.129 li
348.847 33.85 li
348.766 33.565 li
348.699 33.275 li
348.646 32.979 li
348.608 32.679 li
348.585 32.374 li
348.577 32.072 li
348.577 10.06 li
348.585 9.758 li
cp
349.577 10.079 mo
349.577 10.066 li
349.577 32.066 li
349.577 32.053 li
349.584 32.336 li
349.583 32.311 li
349.604 32.59 li
349.601 32.565 li
349.636 32.84 li
349.633 32.816 li
349.681 33.086 li
349.676 33.062 li
349.737 33.328 li
349.731 33.304 li
349.805 33.565 li
349.798 33.541 li
349.884 33.797 li
349.876 33.774 li
349.974 34.023 li
349.965 34.001 li
350.075 34.244 li
350.064 34.222 li
350.186 34.46 li
350.168 34.428 li
350.444 34.881 li
350.417 34.842 li
350.733 35.265 li
350.703 35.228 li
351.058 35.619 li
351.024 35.585 li
351.415 35.94 li
351.378 35.91 li
351.801 36.226 li
351.762 36.199 li
352.215 36.475 li
352.183 36.457 li
352.42 36.579 li
352.399 36.568 li
352.642 36.678 li
352.62 36.669 li
352.869 36.767 li
352.846 36.759 li
353.102 36.845 li
353.078 36.838 li
353.339 36.912 li
353.315 36.906 li
353.581 36.967 li
353.557 36.962 li
353.827 37.01 li
353.803 37.007 li
354.078 37.042 li
354.053 37.039 li
354.332 37.06 li
354.307 37.059 li
354.59 37.066 li
354.577 37.066 li
435.827 37.066 li
435.814 37.066 li
436.097 37.059 li
436.072 37.06 li
436.351 37.039 li
436.326 37.042 li
436.601 37.007 li
436.577 37.01 li
436.847 36.962 li
436.823 36.967 li
437.089 36.906 li
437.065 36.912 li
437.326 36.838 li
437.302 36.845 li
437.558 36.759 li
437.535 36.767 li
437.784 36.669 li
437.762 36.678 li
438.005 36.568 li
437.983 36.579 li
438.221 36.457 li
438.189 36.475 li
438.642 36.199 li
438.603 36.226 li
439.026 35.91 li
438.989 35.94 li
439.38 35.585 li
439.346 35.619 li
439.701 35.228 li
439.671 35.265 li
439.987 34.842 li
439.96 34.881 li
440.236 34.428 li
440.218 34.46 li
440.34 34.222 li
440.329 34.244 li
440.439 34.001 li
440.43 34.023 li
440.528 33.774 li
440.52 33.797 li
440.606 33.541 li
440.599 33.565 li
440.673 33.304 li
440.667 33.328 li
440.728 33.062 li
440.723 33.086 li
440.771 32.816 li
440.768 32.84 li
440.803 32.565 li
440.8 32.59 li
440.821 32.311 li
440.82 32.336 li
440.827 32.053 li
440.827 32.066 li
440.827 10.066 li
440.827 10.079 li
440.82 9.79602 li
440.821 9.82101 li
440.8 9.54202 li
440.803 9.56702 li
440.768 9.29202 li
440.771 9.31601 li
440.723 9.04602 li
440.728 9.07001 li
440.667 8.80402 li
440.673 8.828 li
440.599 8.56702 li
440.606 8.591 li
440.52 8.33502 li
440.528 8.358 li
440.43 8.10901 li
440.439 8.13101 li
440.329 7.888 li
440.34 7.91 li
440.218 7.672 li
440.236 7.70401 li
439.96 7.25101 li
439.987 7.29001 li
439.671 6.867 li
439.701 6.90402 li
439.346 6.513 li
439.38 6.547 li
438.989 6.19202 li
439.026 6.22202 li
438.603 5.90601 li
438.642 5.93301 li
438.189 5.65701 li
438.221 5.67502 li
437.983 5.55301 li
438.005 5.564 li
437.762 5.45401 li
437.784 5.46301 li
437.535 5.36502 li
437.558 5.37302 li
437.302 5.28702 li
437.326 5.29401 li
437.065 5.22 li
437.089 5.22601 li
436.823 5.16501 li
436.847 5.17001 li
436.577 5.12201 li
436.601 5.125 li
436.326 5.09 li
436.351 5.09302 li
436.072 5.07202 li
436.097 5.073 li
435.814 5.06601 li
435.827 5.06601 li
354.577 5.06601 li
354.59 5.06601 li
354.307 5.073 li
354.332 5.07202 li
354.053 5.09302 li
354.078 5.09 li
353.803 5.125 li
353.827 5.12201 li
353.557 5.17001 li
353.581 5.16501 li
353.315 5.22601 li
353.339 5.22 li
353.078 5.29401 li
353.102 5.28702 li
352.846 5.37302 li
352.869 5.36502 li
352.62 5.46301 li
352.642 5.45401 li
352.399 5.564 li
352.42 5.55301 li
352.183 5.67502 li
352.215 5.65701 li
351.762 5.93301 li
351.801 5.90601 li
351.378 6.22202 li
351.415 6.19202 li
351.024 6.547 li
351.058 6.513 li
350.703 6.90402 li
350.733 6.867 li
350.417 7.29001 li
350.444 7.25101 li
350.168 7.70401 li
350.186 7.672 li
350.064 7.91 li
350.075 7.888 li
349.965 8.13101 li
349.974 8.10901 li
349.876 8.358 li
349.884 8.33502 li
349.798 8.591 li
349.805 8.56702 li
349.731 8.828 li
349.737 8.80402 li
349.676 9.07001 li
349.681 9.04602 li
349.633 9.31601 li
349.636 9.29202 li
349.601 9.56702 li
349.604 9.54202 li
349.583 9.82101 li
349.584 9.79602 li
349.577 10.079 li
.113375 .0942092 .259953 0 cmyk
f
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZWRLRB+TimesNewRomanPSMT gcheck setglobal} if
2 118 14 <00010025008d045b04c3000b009f401a2f022f0320082009042f00200520
062f0b6f006f0b0660060106410f035100070327000a0351000b00030327
0002035100000008032700090351b60b0b0060050105bd03510004000003
5100040327b70160080108bb060bb80327401a0560000100bb2002300240
027002d00205200201025c0c585e182b10f65d71f45d3cfd3ce45d002fed
e410e45d103c10f4ed10f4ed10f4fde45d3130005d015d25112135211133
11211521110217fe0e01f25001f4fe0c8d01f35201f1fe0f52fe0d00>ZWRLRB+TimesNewRomanPSMT AddT42Char 
ZWRLRB+TimesNewRomanPSMT /CharStrings get begin
/plus 14 def
end
ZWRLRB+TimesNewRomanPSMT /Encoding get
dup 43 /plus put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZWRLRB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 3{/.notdef}rp /one 
21{/.notdef}rp /G /.notdef /I 5{/.notdef}rp /O 2{/.notdef}rp /R 
2{/.notdef}rp /U 11{/.notdef}rp /a /.notdef /c /d /e 
/f 2{/.notdef}rp /i /.notdef /k /.notdef /m /n 
/o /p /.notdef /r /s /t /u /v 
/w 136{/.notdef}rp]
ZWRLRB+TimesNewRomanPSMT nf
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
354.327 18.316 mo
(O)sh
361.527 18.316 mo
(u)sh
366.527 18.316 mo
(t)sh
369.327 18.316 mo
(p)sh
374.327 18.316 mo
(u)sh
379.327 18.316 mo
(t)sh
382.127 18.316 mo
( )sh
384.627 18.316 mo
(o)sh
389.627 18.316 mo
(f)sh
392.977 18.316 mo
( )sh
395.477 18.316 mo
(f)sh
398.827 18.316 mo
(o)sh
403.827 18.316 mo
(r)sh
407.177 18.316 mo
(w)sh
414.377 18.316 mo
(a)sh
418.827 18.316 mo
(r)sh
422.177 18.316 mo
(d)sh
427.177 18.316 mo
( )sh
354.327 30.316 mo
(G)sh
361.527 30.316 mo
(R)sh
368.177 30.316 mo
(U)sh
375.377 30.316 mo
( )sh
377.877 30.316 mo
(a)sh
382.327 30.316 mo
(t)sh
385.127 30.316 mo
( )sh
387.627 30.316 mo
(t)sh
390.427 30.316 mo
(i)sh
393.227 30.316 mo
(m)sh
401.027 30.316 mo
(e)sh
405.477 30.316 mo
( )sh
407.977 30.316 mo
(s)sh
411.877 30.316 mo
(t)sh
414.677 30.316 mo
(e)sh
419.127 30.316 mo
(p)sh
424.127 30.316 mo
( )sh
426.627 30.316 mo
(t)sh
429.427 30.316 mo
(+)sh
435.077 30.316 mo
(1)sh
129.127 264.386 mo
129.127 261.135 131.746 258.516 135.007 258.506 cv
209.887 258.506 li
213.108 258.516 215.727 261.135 215.767 264.386 cv
215.767 287.786 li
215.727 290.997 213.108 293.616 209.887 293.666 cv
135.007 293.666 li
131.746 293.616 129.127 290.997 129.127 287.786 cv
129.127 264.386 li
.14023 .106905 .111513 0 cmyk
ef
128.635 264.04 mo
128.66 263.717 li
128.7 263.4 li
128.756 263.087 li
128.827 262.779 li
128.912 262.478 li
129.012 262.183 li
129.126 261.894 li
129.253 261.613 li
129.394 261.339 li
129.546 261.073 li
129.712 260.815 li
129.889 260.566 li
130.077 260.327 li
130.277 260.096 li
130.487 259.876 li
130.707 259.666 li
130.938 259.466 li
131.177 259.278 li
131.426 259.101 li
131.684 258.935 li
131.95 258.783 li
132.224 258.642 li
132.505 258.515 li
132.794 258.401 li
133.089 258.301 li
133.39 258.216 li
133.698 258.145 li
134.011 258.089 li
134.328 258.049 li
134.651 258.024 li
134.971 258.016 li
209.883 258.016 li
210.203 258.024 li
210.526 258.049 li
210.843 258.089 li
211.156 258.145 li
211.464 258.216 li
211.765 258.301 li
212.06 258.401 li
212.349 258.515 li
212.63 258.642 li
212.904 258.783 li
213.17 258.935 li
213.428 259.101 li
213.677 259.278 li
213.916 259.466 li
214.147 259.666 li
214.367 259.876 li
214.577 260.096 li
214.777 260.327 li
214.965 260.566 li
215.142 260.815 li
215.308 261.073 li
215.46 261.339 li
215.601 261.613 li
215.728 261.894 li
215.842 262.183 li
215.942 262.478 li
216.027 262.779 li
216.098 263.087 li
216.154 263.4 li
216.194 263.717 li
216.219 264.04 li
216.227 264.36 li
216.227 287.772 li
216.219 288.092 li
216.194 288.415 li
216.154 288.732 li
216.098 289.045 li
216.027 289.352 li
215.942 289.654 li
215.842 289.949 li
215.728 290.238 li
215.601 290.519 li
215.46 290.793 li
215.308 291.059 li
215.142 291.317 li
214.965 291.566 li
214.777 291.805 li
214.577 292.036 li
214.367 292.256 li
214.147 292.466 li
213.916 292.666 li
213.677 292.854 li
213.428 293.031 li
213.17 293.196 li
212.904 293.349 li
212.63 293.49 li
212.349 293.617 li
212.06 293.731 li
211.765 293.831 li
211.464 293.916 li
211.156 293.987 li
210.843 294.043 li
210.526 294.083 li
210.203 294.108 li
209.883 294.116 li
134.971 294.116 li
134.651 294.108 li
134.328 294.083 li
134.011 294.043 li
133.698 293.987 li
133.39 293.916 li
133.089 293.831 li
132.794 293.731 li
132.505 293.617 li
132.224 293.49 li
131.95 293.349 li
131.684 293.196 li
131.426 293.031 li
131.177 292.854 li
130.938 292.666 li
130.707 292.466 li
130.487 292.256 li
130.277 292.036 li
130.077 291.805 li
129.889 291.566 li
129.712 291.317 li
129.546 291.059 li
129.394 290.793 li
129.253 290.519 li
129.126 290.238 li
129.012 289.949 li
128.912 289.654 li
128.827 289.352 li
128.756 289.045 li
128.7 288.732 li
128.66 288.415 li
128.635 288.092 li
128.627 287.772 li
128.627 264.36 li
128.635 264.04 li
cp
129.627 264.379 mo
129.627 264.366 li
129.627 287.766 li
129.627 287.753 li
129.634 288.054 li
129.633 288.029 li
129.656 288.326 li
129.653 288.301 li
129.69 288.594 li
129.687 288.569 li
129.738 288.857 li
129.733 288.832 li
129.798 289.115 li
129.792 289.091 li
129.871 289.369 li
129.864 289.345 li
129.956 289.617 li
129.947 289.594 li
130.052 289.86 li
130.042 289.837 li
130.159 290.096 li
130.149 290.074 li
130.278 290.326 li
130.267 290.305 li
130.407 290.55 li
130.395 290.53 li
130.547 290.767 li
130.534 290.747 li
130.697 290.976 li
130.682 290.957 li
130.856 291.178 li
130.841 291.16 li
131.025 291.372 li
131.009 291.354 li
131.202 291.557 li
131.185 291.541 li
131.389 291.734 li
131.371 291.718 li
131.583 291.902 li
131.565 291.887 li
131.786 292.061 li
131.767 292.046 li
131.996 292.209 li
131.976 292.196 li
132.213 292.348 li
132.193 292.336 li
132.438 292.476 li
132.417 292.465 li
132.669 292.594 li
132.647 292.583 li
132.906 292.701 li
132.883 292.691 li
133.149 292.796 li
133.126 292.787 li
133.398 292.879 li
133.374 292.872 li
133.652 292.951 li
133.628 292.945 li
133.911 293.01 li
133.886 293.005 li
134.174 293.056 li
134.149 293.053 li
134.442 293.09 li
134.417 293.087 li
134.714 293.11 li
134.689 293.109 li
134.99 293.116 li
134.977 293.116 li
209.877 293.116 li
209.864 293.116 li
210.165 293.109 li
210.14 293.11 li
210.437 293.087 li
210.412 293.09 li
210.705 293.053 li
210.68 293.056 li
210.968 293.005 li
210.943 293.01 li
211.226 292.945 li
211.202 292.951 li
211.48 292.872 li
211.456 292.879 li
211.728 292.787 li
211.705 292.796 li
211.971 292.691 li
211.948 292.701 li
212.207 292.583 li
212.185 292.594 li
212.437 292.465 li
212.416 292.476 li
212.661 292.336 li
212.641 292.348 li
212.878 292.196 li
212.858 292.209 li
213.087 292.046 li
213.068 292.061 li
213.289 291.887 li
213.271 291.902 li
213.483 291.718 li
213.465 291.734 li
213.669 291.541 li
213.652 291.557 li
213.845 291.354 li
213.829 291.372 li
214.013 291.16 li
213.998 291.178 li
214.172 290.957 li
214.157 290.976 li
214.32 290.747 li
214.307 290.767 li
214.459 290.53 li
214.447 290.55 li
214.587 290.305 li
214.576 290.326 li
214.705 290.074 li
214.695 290.096 li
214.812 289.837 li
214.802 289.86 li
214.907 289.594 li
214.898 289.617 li
214.99 289.345 li
214.983 289.369 li
215.062 289.091 li
215.056 289.115 li
215.121 288.832 li
215.116 288.857 li
215.167 288.569 li
215.164 288.594 li
215.201 288.301 li
215.198 288.326 li
215.221 288.029 li
215.22 288.054 li
215.227 287.753 li
215.227 287.766 li
215.227 264.366 li
215.227 264.379 li
215.22 264.078 li
215.221 264.103 li
215.198 263.806 li
215.201 263.831 li
215.164 263.538 li
215.167 263.563 li
215.116 263.275 li
215.121 263.3 li
215.056 263.017 li
215.062 263.041 li
214.983 262.763 li
214.99 262.787 li
214.898 262.515 li
214.907 262.538 li
214.802 262.272 li
214.812 262.295 li
214.695 262.036 li
214.705 262.058 li
214.576 261.806 li
214.587 261.827 li
214.447 261.582 li
214.459 261.602 li
214.307 261.365 li
214.32 261.385 li
214.157 261.156 li
214.172 261.175 li
213.998 260.954 li
214.013 260.972 li
213.829 260.76 li
213.845 260.778 li
213.652 260.574 li
213.669 260.591 li
213.465 260.398 li
213.483 260.414 li
213.271 260.23 li
213.289 260.245 li
213.068 260.071 li
213.087 260.086 li
212.858 259.923 li
212.878 259.936 li
212.641 259.784 li
212.661 259.796 li
212.416 259.656 li
212.437 259.667 li
212.185 259.538 li
212.207 259.548 li
211.948 259.431 li
211.971 259.441 li
211.705 259.336 li
211.728 259.345 li
211.456 259.253 li
211.48 259.26 li
211.202 259.181 li
211.226 259.187 li
210.943 259.122 li
210.968 259.127 li
210.68 259.076 li
210.705 259.079 li
210.412 259.042 li
210.437 259.045 li
210.14 259.022 li
210.165 259.023 li
209.864 259.016 li
209.877 259.016 li
134.977 259.016 li
134.99 259.016 li
134.689 259.023 li
134.714 259.022 li
134.417 259.045 li
134.442 259.042 li
134.149 259.079 li
134.174 259.076 li
133.886 259.127 li
133.911 259.122 li
133.628 259.187 li
133.652 259.181 li
133.374 259.26 li
133.398 259.253 li
133.126 259.345 li
133.149 259.336 li
132.883 259.441 li
132.906 259.431 li
132.647 259.548 li
132.669 259.538 li
132.417 259.667 li
132.438 259.656 li
132.193 259.796 li
132.213 259.784 li
131.976 259.936 li
131.996 259.923 li
131.767 260.086 li
131.786 260.071 li
131.565 260.245 li
131.583 260.23 li
131.371 260.414 li
131.389 260.398 li
131.185 260.591 li
131.202 260.574 li
131.009 260.778 li
131.025 260.76 li
130.841 260.972 li
130.856 260.954 li
130.682 261.175 li
130.697 261.156 li
130.534 261.385 li
130.547 261.365 li
130.395 261.602 li
130.407 261.582 li
130.267 261.827 li
130.278 261.806 li
130.149 262.058 li
130.159 262.036 li
130.042 262.295 li
130.052 262.272 li
129.947 262.538 li
129.956 262.515 li
129.864 262.787 li
129.871 262.763 li
129.792 263.041 li
129.798 263.017 li
129.733 263.3 li
129.738 263.275 li
129.687 263.563 li
129.69 263.538 li
129.653 263.831 li
129.656 263.806 li
129.633 264.103 li
129.634 264.078 li
129.627 264.379 li
.113375 .0942092 .259953 0 cmyk
f
.750271 .679713 .654902 .901946 cmyk
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
134.077 274.666 mo
(I)sh
137.427 274.666 mo
(n)sh
142.427 274.666 mo
(p)sh
147.427 274.666 mo
(u)sh
152.427 274.666 mo
(t)sh
155.227 274.666 mo
( )sh
157.727 274.666 mo
(p)sh
162.727 274.666 mo
(a)sh
167.177 274.666 mo
(c)sh
171.627 274.666 mo
(k)sh
176.627 274.666 mo
(e)sh
181.077 274.666 mo
(t)sh
183.877 274.666 mo
( )sh
186.377 274.666 mo
(v)sh
191.377 274.666 mo
(e)sh
195.827 274.666 mo
(c)sh
200.277 274.666 mo
(t)sh
203.077 274.666 mo
(o)sh
208.077 274.666 mo
(r)sh
211.427 274.666 mo
( )sh
134.077 286.666 mo
(a)sh
138.527 286.666 mo
(t)sh
141.327 286.666 mo
( )sh
143.827 286.666 mo
(t)sh
146.627 286.666 mo
(i)sh
149.427 286.666 mo
(m)sh
157.227 286.666 mo
(e)sh
161.677 286.666 mo
( )sh
164.177 286.666 mo
(s)sh
168.077 286.666 mo
(t)sh
170.877 286.666 mo
(e)sh
175.327 286.666 mo
(p)sh
180.327 286.666 mo
( )sh
182.827 286.666 mo
(t)sh
343.567 264.146 mo
343.577 261.047 346.058 258.566 349.087 258.626 cv
424.687 258.626 li
427.696 258.566 430.177 261.047 430.207 264.146 cv
430.207 286.226 li
430.177 289.335 427.696 291.816 424.687 291.866 cv
349.087 291.866 li
346.058 291.816 343.577 289.335 343.567 286.226 cv
343.567 264.146 li
.14023 .106905 .111513 0 cmyk
ef
343.085 263.797 mo
343.108 263.491 li
343.146 263.188 li
343.2 262.891 li
343.267 262.598 li
343.349 262.311 li
343.444 262.03 li
343.552 261.756 li
343.673 261.488 li
343.806 261.228 li
343.952 260.974 li
344.112 260.724 li
344.456 260.264 li
344.846 259.835 li
345.275 259.445 li
345.735 259.101 li
345.985 258.941 li
346.238 258.795 li
346.499 258.662 li
346.767 258.541 li
347.041 258.433 li
347.322 258.338 li
347.609 258.256 li
347.902 258.189 li
348.199 258.135 li
348.502 258.097 li
348.808 258.074 li
349.112 258.066 li
424.641 258.066 li
424.946 258.074 li
425.252 258.097 li
425.555 258.135 li
425.852 258.189 li
426.145 258.256 li
426.432 258.338 li
426.713 258.433 li
426.987 258.541 li
427.255 258.662 li
427.515 258.795 li
427.769 258.941 li
428.019 259.101 li
428.479 259.445 li
428.908 259.835 li
429.298 260.264 li
429.642 260.724 li
429.802 260.974 li
429.948 261.228 li
430.081 261.488 li
430.202 261.756 li
430.31 262.03 li
430.405 262.311 li
430.487 262.598 li
430.554 262.891 li
430.608 263.188 li
430.646 263.491 li
430.669 263.797 li
430.677 264.101 li
430.677 286.281 li
430.669 286.585 li
430.646 286.891 li
430.608 287.194 li
430.554 287.491 li
430.487 287.784 li
430.405 288.071 li
430.31 288.352 li
430.202 288.626 li
430.081 288.894 li
429.948 289.154 li
429.802 289.408 li
429.642 289.658 li
429.298 290.118 li
428.908 290.547 li
428.479 290.937 li
428.019 291.281 li
427.769 291.441 li
427.515 291.587 li
427.255 291.72 li
426.987 291.841 li
426.713 291.949 li
426.432 292.044 li
426.145 292.126 li
425.852 292.193 li
425.555 292.247 li
425.252 292.285 li
424.946 292.308 li
424.641 292.316 li
349.112 292.316 li
348.808 292.308 li
348.502 292.285 li
348.199 292.247 li
347.902 292.193 li
347.609 292.126 li
347.322 292.044 li
347.041 291.949 li
346.767 291.841 li
346.499 291.72 li
346.238 291.587 li
345.985 291.441 li
345.735 291.281 li
345.275 290.937 li
344.846 290.547 li
344.456 290.118 li
344.112 289.658 li
343.952 289.408 li
343.806 289.154 li
343.673 288.894 li
343.552 288.626 li
343.444 288.352 li
343.349 288.071 li
343.267 287.784 li
343.2 287.491 li
343.146 287.194 li
343.108 286.891 li
343.085 286.585 li
343.077 286.281 li
343.077 264.101 li
343.085 263.797 li
cp
344.077 264.12 mo
344.077 264.108 li
344.077 286.274 li
344.077 286.262 li
344.084 286.547 li
344.083 286.521 li
344.104 286.803 li
344.102 286.778 li
344.137 287.055 li
344.133 287.03 li
344.182 287.303 li
344.177 287.279 li
344.239 287.547 li
344.232 287.523 li
344.307 287.786 li
344.3 287.762 li
344.387 288.019 li
344.378 287.996 li
344.478 288.248 li
344.468 288.225 li
344.579 288.471 li
344.568 288.449 li
344.691 288.688 li
344.679 288.667 li
344.813 288.899 li
344.8 288.878 li
344.944 289.103 li
344.924 289.073 li
345.243 289.5 li
345.212 289.463 li
345.57 289.857 li
345.536 289.823 li
345.93 290.181 li
345.893 290.15 li
346.32 290.469 li
346.29 290.449 li
346.515 290.593 li
346.494 290.58 li
346.726 290.714 li
346.705 290.702 li
346.944 290.824 li
346.922 290.814 li
347.168 290.925 li
347.145 290.915 li
347.397 291.015 li
347.374 291.006 li
347.631 291.093 li
347.607 291.086 li
347.87 291.161 li
347.846 291.154 li
348.114 291.216 li
348.09 291.211 li
348.363 291.26 li
348.338 291.256 li
348.615 291.291 li
348.59 291.289 li
348.871 291.31 li
348.846 291.309 li
349.131 291.316 li
349.119 291.316 li
424.635 291.316 li
424.623 291.316 li
424.908 291.309 li
424.882 291.31 li
425.164 291.289 li
425.139 291.291 li
425.416 291.256 li
425.391 291.26 li
425.664 291.211 li
425.64 291.216 li
425.908 291.154 li
425.884 291.161 li
426.147 291.086 li
426.123 291.093 li
426.38 291.006 li
426.357 291.015 li
426.609 290.915 li
426.586 290.925 li
426.832 290.814 li
426.81 290.824 li
427.049 290.702 li
427.027 290.714 li
427.26 290.58 li
427.239 290.593 li
427.464 290.449 li
427.434 290.469 li
427.861 290.15 li
427.824 290.181 li
428.218 289.823 li
428.184 289.857 li
428.541 289.463 li
428.511 289.5 li
428.83 289.073 li
428.81 289.103 li
428.954 288.878 li
428.941 288.899 li
429.075 288.667 li
429.063 288.688 li
429.185 288.449 li
429.175 288.471 li
429.286 288.225 li
429.276 288.248 li
429.376 287.996 li
429.367 288.019 li
429.454 287.762 li
429.447 287.786 li
429.521 287.523 li
429.515 287.547 li
429.577 287.279 li
429.572 287.303 li
429.621 287.03 li
429.617 287.055 li
429.652 286.778 li
429.65 286.803 li
429.671 286.521 li
429.67 286.547 li
429.677 286.262 li
429.677 286.274 li
429.677 264.108 li
429.677 264.12 li
429.67 263.835 li
429.671 263.86 li
429.65 263.579 li
429.652 263.604 li
429.617 263.327 li
429.621 263.352 li
429.572 263.079 li
429.577 263.103 li
429.515 262.835 li
429.521 262.859 li
429.447 262.596 li
429.454 262.62 li
429.367 262.363 li
429.376 262.386 li
429.276 262.134 li
429.286 262.157 li
429.175 261.911 li
429.185 261.933 li
429.063 261.694 li
429.075 261.715 li
428.941 261.483 li
428.954 261.504 li
428.81 261.279 li
428.83 261.309 li
428.511 260.882 li
428.541 260.919 li
428.184 260.525 li
428.218 260.559 li
427.824 260.201 li
427.861 260.232 li
427.434 259.913 li
427.464 259.933 li
427.239 259.789 li
427.26 259.802 li
427.027 259.668 li
427.049 259.68 li
426.81 259.558 li
426.832 259.568 li
426.586 259.457 li
426.609 259.467 li
426.357 259.367 li
426.38 259.376 li
426.123 259.289 li
426.147 259.296 li
425.884 259.221 li
425.908 259.228 li
425.64 259.166 li
425.664 259.171 li
425.391 259.122 li
425.416 259.126 li
425.139 259.091 li
425.164 259.093 li
424.882 259.072 li
424.908 259.073 li
424.623 259.066 li
424.635 259.066 li
349.119 259.066 li
349.131 259.066 li
348.846 259.073 li
348.871 259.072 li
348.59 259.093 li
348.615 259.091 li
348.338 259.126 li
348.363 259.122 li
348.09 259.171 li
348.114 259.166 li
347.846 259.228 li
347.87 259.221 li
347.607 259.296 li
347.631 259.289 li
347.374 259.376 li
347.397 259.367 li
347.145 259.467 li
347.168 259.457 li
346.922 259.568 li
346.944 259.558 li
346.705 259.68 li
346.726 259.668 li
346.494 259.802 li
346.515 259.789 li
346.29 259.933 li
346.32 259.913 li
345.893 260.232 li
345.93 260.201 li
345.536 260.559 li
345.57 260.525 li
345.212 260.919 li
345.243 260.882 li
344.924 261.309 li
344.944 261.279 li
344.8 261.504 li
344.813 261.483 li
344.679 261.715 li
344.691 261.694 li
344.568 261.933 li
344.579 261.911 li
344.468 262.157 li
344.478 262.134 li
344.378 262.386 li
344.387 262.363 li
344.3 262.62 li
344.307 262.596 li
344.232 262.859 li
344.239 262.835 li
344.177 263.103 li
344.182 263.079 li
344.133 263.352 li
344.137 263.327 li
344.102 263.604 li
344.104 263.579 li
344.083 263.86 li
344.084 263.835 li
344.077 264.12 li
.113375 .0942092 .259953 0 cmyk
f
.750271 .679713 .654902 .901946 cmyk
ZWRLRB+TimesNewRomanPSMT*1 [9.95 0 0 -9.95 0 0 ]msf
348.527 273.466 mo
(I)sh
351.877 273.466 mo
(n)sh
356.877 273.466 mo
(p)sh
361.877 273.466 mo
(u)sh
366.877 273.466 mo
(t)sh
369.677 273.466 mo
( )sh
372.177 273.466 mo
(p)sh
377.177 273.466 mo
(a)sh
381.627 273.466 mo
(c)sh
386.077 273.466 mo
(k)sh
391.077 273.466 mo
(e)sh
395.527 273.466 mo
(t)sh
398.327 273.466 mo
( )sh
400.827 273.466 mo
(v)sh
405.827 273.466 mo
(e)sh
410.277 273.466 mo
(c)sh
414.727 273.466 mo
(t)sh
417.527 273.466 mo
(o)sh
422.527 273.466 mo
(r)sh
425.877 273.466 mo
( )sh
348.527 285.466 mo
(a)sh
352.977 285.466 mo
(t)sh
355.777 285.466 mo
( )sh
358.277 285.466 mo
(t)sh
361.077 285.466 mo
(i)sh
363.877 285.466 mo
(m)sh
371.677 285.466 mo
(e)sh
376.127 285.466 mo
( )sh
378.627 285.466 mo
(s)sh
382.527 285.466 mo
(t)sh
385.327 285.466 mo
(e)sh
389.777 285.466 mo
(p)sh
394.777 285.466 mo
( )sh
397.277 285.466 mo
(t)sh
400.077 285.466 mo
(+)sh
405.727 285.466 mo
(1)sh
%ADOBeginSubsetFont: IAAAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZWRLRA+HelveticaNeue gcheck setglobal} if
1 284 21 <00010053000000c2006f0003001bba0003000000032bb800031000ba0000
000100032bb8000010303137153335536f6f6f6f0000>ZWRLRA+HelveticaNeue AddT42Char 
ZWRLRA+HelveticaNeue /CharStrings get begin
/period 21 def
end
ZWRLRA+HelveticaNeue /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZWRLRA+HelveticaNeue*1 
[43{/.notdef}rp /plus /.notdef /hyphen /period 2{/.notdef}rp /one 47{/.notdef}rp 
/a 6{/.notdef}rp /h 5{/.notdef}rp /n 3{/.notdef}rp /r /.notdef 
/t 3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]
ZWRLRA+HelveticaNeue nf
ZWRLRA+HelveticaNeue*1 [18 0 0 -18 0 0 ]msf
1.67676 99.916 mo
(.)sh
6.67676 99.916 mo
(.)sh
11.6768 99.916 mo
(.)sh
459.227 101.766 mo
(.)sh
464.227 101.766 mo
(.)sh
469.227 101.766 mo
(.)sh
grestore
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZWRLRB+TimesNewRomanPSMT*1 uf
/ZWRLRB+TimesNewRomanPSMT uf
/NAAAAA+TimesNewRomanPSMT uf
/ZWRLRA+HelveticaNeue*1 uf
/ZWRLRA+HelveticaNeue uf
/IAAAAA+HelveticaNeue uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
