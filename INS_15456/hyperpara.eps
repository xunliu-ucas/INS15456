%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: hyperpara.pdf
%%Creator: Adobe Acrobat 18.9.0
%%For: Lavender
%%CreationDate: 2020/3/8, 18:02:32
%%BoundingBox: -1 0 622 223
%%HiResBoundingBox: 0 0 621.4477 222.3352
%%CropBox: 0 0 621.4477 222.3352
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 636 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2020-03-08T09:56:39Z"
   xmp:CreatorTool="matplotlib 3.1.1, http://matplotlib.org"
   xmp:ModifyDate="2020-03-08T09:56:39Z"
   pdf:Producer="macOS 版本 10.14.1（版号 18B75） Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -222.335 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-3.05176e-5 0 mo
-3.05176e-5 222.335 li
621.448 222.335 li
621.448 0 li
cp
clp
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
36.4251 133.612 mo
196.85 133.612 li
196.85 9.17969 li
36.4251 9.17969 li
cp
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
0 lc
1 lj
10 ml
[1 1.65 ] 0 dsh
true sadj
43.7171 133.612 mo
43.7171 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
43.7171 133.612 mo
43.7171 137.112 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
43.7171 133.612 mo
43.7171 137.112 li
@
43.7128 145.585 mo
43.1489 145.585 42.7049 145.741 42.3809 146.041 cv
42.0569 146.341 41.9009 146.749 41.9009 147.277 cv
41.9009 147.805 42.0569 148.225 42.3809 148.525 cv
42.7049 148.825 43.1489 148.969 43.7128 148.969 cv
44.2648 148.969 44.7088 148.825 45.0328 148.513 cv
45.3568 148.213 45.5248 147.805 45.5248 147.277 cv
45.5248 146.749 45.3568 146.341 45.0448 146.041 cv
44.7208 145.741 44.2768 145.585 43.7128 145.585 cv
42.5249 145.081 mo
42.0209 144.961 41.6249 144.721 41.3369 144.373 cv
41.0489 144.025 40.9169 143.605 40.9169 143.101 cv
40.9169 142.405 41.1569 141.853 41.6609 141.445 cv
42.1529 141.037 42.8369 140.833 43.7128 140.833 cv
44.5768 140.833 45.2608 141.037 45.7648 141.445 cv
46.2568 141.853 46.5089 142.405 46.5089 143.101 cv
46.5089 143.605 46.3648 144.025 46.0768 144.373 cv
45.7888 144.721 45.4048 144.961 44.9008 145.081 cv
45.4648 145.213 45.9088 145.477 46.2328 145.861 cv
46.5448 146.245 46.7128 146.725 46.7128 147.277 cv
46.7128 148.129 46.4488 148.777 45.9328 149.221 cv
45.4048 149.677 44.6728 149.893 43.7128 149.893 cv
42.7409 149.893 41.9969 149.677 41.4809 149.221 cv
40.9649 148.777 40.7129 148.129 40.7129 147.277 cv
40.7129 146.725 40.8689 146.245 41.1929 145.861 cv
41.5049 145.477 41.9489 145.213 42.5249 145.081 cv
42.0929 143.209 mo
42.0929 143.665 42.2249 144.025 42.5129 144.277 cv
42.8009 144.529 43.1969 144.649 43.7128 144.649 cv
44.2169 144.649 44.6128 144.529 44.9008 144.277 cv
45.1888 144.025 45.3328 143.665 45.3328 143.209 cv
45.3328 142.753 45.1888 142.405 44.9008 142.153 cv
44.6128 141.901 44.2169 141.769 43.7128 141.769 cv
43.1969 141.769 42.8009 141.901 42.5129 142.153 cv
42.2249 142.405 42.0929 142.753 42.0929 143.209 cv
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
57.8308 133.612 mo
57.8308 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
57.8308 133.612 mo
57.8308 137.112 li
f
57.8308 133.612 mo
57.8308 137.112 li
@
55.0622 145.021 mo
55.6262 145.141 56.0702 145.393 56.3822 145.777 cv
56.6942 146.161 56.8622 146.641 56.8622 147.193 cv
56.8622 148.057 56.5622 148.729 55.9742 149.197 cv
55.3742 149.665 54.5342 149.893 53.4422 149.893 cv
53.0702 149.893 52.6862 149.857 52.3022 149.785 cv
51.9182 149.725 51.5102 149.617 51.1022 149.473 cv
51.1022 148.333 li
51.4262 148.525 51.7862 148.669 52.1822 148.765 cv
52.5662 148.861 52.9742 148.909 53.4063 148.909 cv
54.1502 148.909 54.7142 148.765 55.0982 148.477 cv
55.4822 148.189 55.6862 147.757 55.6862 147.193 cv
55.6862 146.689 55.5062 146.281 55.1462 145.993 cv
54.7862 145.705 54.2822 145.549 53.6342 145.549 cv
52.6143 145.549 li
52.6143 144.577 li
53.6822 144.577 li
54.2582 144.577 54.7022 144.469 55.0142 144.229 cv
55.3262 144.001 55.4822 143.665 55.4822 143.221 cv
55.4822 142.777 55.3142 142.429 55.0022 142.189 cv
54.6782 141.949 54.2222 141.829 53.6342 141.829 cv
53.3102 141.829 52.9622 141.865 52.5902 141.937 cv
52.2182 142.009 51.8102 142.117 51.3662 142.261 cv
51.3662 141.205 li
51.8102 141.085 52.2302 140.989 52.6262 140.929 cv
53.0102 140.869 53.3822 140.833 53.7422 140.833 cv
54.6302 140.833 55.3382 141.037 55.8662 141.445 cv
56.3942 141.853 56.6582 142.405 56.6582 143.101 cv
56.6582 143.581 56.5142 143.989 56.2382 144.325 cv
55.9622 144.661 55.5662 144.901 55.0622 145.021 cv
f
60.1262 148.741 mo
64.2542 148.741 li
64.2542 149.737 li
58.6982 149.737 li
58.6982 148.741 li
59.1423 148.285 59.7542 147.661 60.5342 146.869 cv
61.3022 146.089 61.7942 145.585 61.9982 145.357 cv
62.3822 144.937 62.6462 144.577 62.7902 144.277 cv
62.9342 143.989 63.0182 143.689 63.0182 143.401 cv
63.0182 142.945 62.8503 142.561 62.5262 142.273 cv
62.2022 141.985 61.7822 141.829 61.2542 141.829 cv
60.8822 141.829 60.4862 141.901 60.0782 142.021 cv
59.6702 142.153 59.2262 142.345 58.7582 142.609 cv
58.7582 141.409 li
59.2382 141.217 59.6822 141.073 60.0902 140.977 cv
60.4982 140.881 60.8822 140.833 61.2302 140.833 cv
62.1302 140.833 62.8503 141.061 63.3902 141.517 cv
63.9302 141.973 64.2062 142.573 64.2062 143.329 cv
64.2062 143.689 64.1342 144.037 64.0022 144.349 cv
63.8702 144.673 63.6302 145.057 63.2702 145.489 cv
63.1742 145.609 62.8622 145.933 62.3342 146.473 cv
61.8062 147.013 61.0742 147.769 60.1262 148.741 cv
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
76.649 133.612 mo
76.649 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
76.649 133.612 mo
76.649 137.112 li
f
76.649 133.612 mo
76.649 137.112 li
@
72.9684 144.889 mo
72.4404 144.889 72.0203 145.081 71.7083 145.441 cv
71.3963 145.801 71.2403 146.305 71.2403 146.929 cv
71.2403 147.565 71.3963 148.069 71.7083 148.429 cv
72.0203 148.789 72.4404 148.969 72.9684 148.969 cv
73.4964 148.969 73.9164 148.789 74.2283 148.429 cv
74.5403 148.069 74.6964 147.565 74.6964 146.929 cv
74.6964 146.305 74.5403 145.801 74.2283 145.441 cv
73.9164 145.081 73.4964 144.889 72.9684 144.889 cv
75.3203 141.181 mo
75.3203 142.261 li
75.0203 142.117 74.7204 142.009 74.4203 141.937 cv
74.1084 141.865 73.8083 141.829 73.5203 141.829 cv
72.7283 141.829 72.1283 142.093 71.7204 142.621 cv
71.3123 143.149 71.0723 143.953 71.0243 145.009 cv
71.2523 144.673 71.5403 144.409 71.8884 144.229 cv
72.2363 144.049 72.6203 143.953 73.0403 143.953 cv
73.9164 143.953 74.6124 144.229 75.1163 144.757 cv
75.6203 145.285 75.8844 146.017 75.8844 146.929 cv
75.8844 147.829 75.6084 148.549 75.0804 149.089 cv
74.5524 149.629 73.8443 149.893 72.9684 149.893 cv
71.9603 149.893 71.1803 149.509 70.6523 148.741 cv
70.1123 147.973 69.8483 146.845 69.8483 145.369 cv
69.8483 143.989 70.1723 142.885 70.8323 142.069 cv
71.4803 141.253 72.3683 140.833 73.4724 140.833 cv
73.7603 140.833 74.0603 140.869 74.3723 140.917 cv
74.6723 140.977 74.9843 141.061 75.3203 141.181 cv
f
81.1763 142.021 mo
78.1883 146.689 li
81.1763 146.689 li
81.1763 142.021 li
80.8643 140.989 mo
82.3523 140.989 li
82.3523 146.689 li
83.6003 146.689 li
83.6003 147.673 li
82.3523 147.673 li
82.3523 149.737 li
81.1763 149.737 li
81.1763 147.673 li
77.2283 147.673 li
77.2283 146.533 li
80.8643 140.989 li
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
114.285 133.612 mo
114.285 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
114.285 133.612 mo
114.285 137.112 li
f
114.285 133.612 mo
114.285 137.112 li
@
104.312 148.741 mo
106.244 148.741 li
106.244 142.069 li
104.144 142.489 li
104.144 141.409 li
106.232 140.989 li
107.42 140.989 li
107.42 148.741 li
109.352 148.741 li
109.352 149.737 li
104.312 149.737 li
104.312 148.741 li
f
112.76 148.741 mo
116.888 148.741 li
116.888 149.737 li
111.332 149.737 li
111.332 148.741 li
111.776 148.285 112.388 147.661 113.168 146.869 cv
113.936 146.089 114.428 145.585 114.632 145.357 cv
115.016 144.937 115.28 144.577 115.424 144.277 cv
115.568 143.989 115.652 143.689 115.652 143.401 cv
115.652 142.945 115.484 142.561 115.16 142.273 cv
114.836 141.985 114.416 141.829 113.888 141.829 cv
113.516 141.829 113.12 141.901 112.712 142.021 cv
112.304 142.153 111.86 142.345 111.392 142.609 cv
111.392 141.409 li
111.872 141.217 112.316 141.073 112.724 140.977 cv
113.132 140.881 113.516 140.833 113.864 140.833 cv
114.764 140.833 115.484 141.061 116.024 141.517 cv
116.564 141.973 116.84 142.573 116.84 143.329 cv
116.84 143.689 116.768 144.037 116.636 144.349 cv
116.504 144.673 116.264 145.057 115.904 145.489 cv
115.808 145.609 115.496 145.933 114.968 146.473 cv
114.44 147.013 113.708 147.769 112.76 148.741 cv
f
121.904 145.585 mo
121.34 145.585 120.896 145.741 120.572 146.041 cv
120.248 146.341 120.092 146.749 120.092 147.277 cv
120.092 147.805 120.248 148.225 120.572 148.525 cv
120.896 148.825 121.34 148.969 121.904 148.969 cv
122.456 148.969 122.9 148.825 123.224 148.513 cv
123.548 148.213 123.716 147.805 123.716 147.277 cv
123.716 146.749 123.548 146.341 123.236 146.041 cv
122.912 145.741 122.468 145.585 121.904 145.585 cv
120.716 145.081 mo
120.212 144.961 119.816 144.721 119.528 144.373 cv
119.24 144.025 119.108 143.605 119.108 143.101 cv
119.108 142.405 119.348 141.853 119.852 141.445 cv
120.344 141.037 121.028 140.833 121.904 140.833 cv
122.768 140.833 123.452 141.037 123.956 141.445 cv
124.448 141.853 124.7 142.405 124.7 143.101 cv
124.7 143.605 124.556 144.025 124.268 144.373 cv
123.98 144.721 123.596 144.961 123.092 145.081 cv
123.656 145.213 124.1 145.477 124.424 145.861 cv
124.736 146.245 124.904 146.725 124.904 147.277 cv
124.904 148.129 124.64 148.777 124.124 149.221 cv
123.596 149.677 122.864 149.893 121.904 149.893 cv
120.932 149.893 120.188 149.677 119.672 149.221 cv
119.156 148.777 118.904 148.129 118.904 147.277 cv
118.904 146.725 119.06 146.245 119.384 145.861 cv
119.696 145.477 120.14 145.213 120.716 145.081 cv
120.284 143.209 mo
120.284 143.665 120.416 144.025 120.704 144.277 cv
120.992 144.529 121.388 144.649 121.904 144.649 cv
122.408 144.649 122.804 144.529 123.092 144.277 cv
123.38 144.025 123.524 143.665 123.524 143.209 cv
123.524 142.753 123.38 142.405 123.092 142.153 cv
122.804 141.901 122.408 141.769 121.904 141.769 cv
121.388 141.769 120.992 141.901 120.704 142.153 cv
120.416 142.405 120.284 142.753 120.284 143.209 cv
f
grestore
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
189.558 133.612 mo
189.558 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
189.558 133.612 mo
189.558 137.112 li
f
189.558 133.612 mo
189.558 137.112 li
@
180.401 148.741 mo
184.529 148.741 li
184.529 149.737 li
178.973 149.737 li
178.973 148.741 li
179.417 148.285 180.029 147.661 180.809 146.869 cv
181.577 146.089 182.069 145.585 182.273 145.357 cv
182.657 144.937 182.921 144.577 183.065 144.277 cv
183.209 143.989 183.293 143.689 183.293 143.401 cv
183.293 142.945 183.125 142.561 182.801 142.273 cv
182.477 141.985 182.057 141.829 181.529 141.829 cv
181.157 141.829 180.761 141.901 180.353 142.021 cv
179.945 142.153 179.501 142.345 179.033 142.609 cv
179.033 141.409 li
179.513 141.217 179.957 141.073 180.365 140.977 cv
180.773 140.881 181.157 140.833 181.505 140.833 cv
182.405 140.833 183.125 141.061 183.665 141.517 cv
184.205 141.973 184.481 142.573 184.481 143.329 cv
184.481 143.689 184.409 144.037 184.277 144.349 cv
184.145 144.673 183.905 145.057 183.545 145.489 cv
183.449 145.609 183.137 145.933 182.609 146.473 cv
182.081 147.013 181.349 147.769 180.401 148.741 cv
f
187.025 140.989 mo
191.669 140.989 li
191.669 141.985 li
188.105 141.985 li
188.105 144.133 li
188.273 144.073 188.453 144.025 188.621 144.001 cv
188.789 143.977 188.969 143.953 189.137 143.953 cv
190.109 143.953 190.877 144.229 191.453 144.757 cv
192.029 145.297 192.317 146.017 192.317 146.929 cv
192.317 147.877 192.017 148.609 191.429 149.125 cv
190.841 149.641 190.013 149.893 188.957 149.893 cv
188.585 149.893 188.213 149.857 187.829 149.809 cv
187.445 149.749 187.061 149.665 186.653 149.533 cv
186.653 148.345 li
187.001 148.537 187.361 148.681 187.745 148.777 cv
188.117 148.873 188.513 148.909 188.933 148.909 cv
189.605 148.909 190.145 148.741 190.541 148.381 cv
190.925 148.021 191.129 147.541 191.129 146.929 cv
191.129 146.329 190.925 145.849 190.541 145.489 cv
190.145 145.129 189.605 144.949 188.933 144.949 cv
188.621 144.949 188.297 144.985 187.985 145.057 cv
187.673 145.129 187.349 145.237 187.025 145.381 cv
187.025 140.989 li
f
197.321 144.889 mo
196.793 144.889 196.373 145.081 196.061 145.441 cv
195.749 145.801 195.593 146.305 195.593 146.929 cv
195.593 147.565 195.749 148.069 196.061 148.429 cv
196.373 148.789 196.793 148.969 197.321 148.969 cv
197.849 148.969 198.269 148.789 198.581 148.429 cv
198.893 148.069 199.049 147.565 199.049 146.929 cv
199.049 146.305 198.893 145.801 198.581 145.441 cv
198.269 145.081 197.849 144.889 197.321 144.889 cv
199.673 141.181 mo
199.673 142.261 li
199.373 142.117 199.073 142.009 198.773 141.937 cv
198.461 141.865 198.161 141.829 197.873 141.829 cv
197.081 141.829 196.481 142.093 196.073 142.621 cv
195.665 143.149 195.425 143.953 195.377 145.009 cv
195.605 144.673 195.893 144.409 196.241 144.229 cv
196.589 144.049 196.973 143.953 197.393 143.953 cv
198.269 143.953 198.965 144.229 199.469 144.757 cv
199.973 145.285 200.237 146.017 200.237 146.929 cv
200.237 147.829 199.961 148.549 199.433 149.089 cv
198.905 149.629 198.197 149.893 197.321 149.893 cv
196.313 149.893 195.533 149.509 195.005 148.741 cv
194.465 147.973 194.201 146.845 194.201 145.369 cv
194.201 143.989 194.525 142.885 195.185 142.069 cv
195.833 141.253 196.721 140.833 197.825 140.833 cv
198.113 140.833 198.413 140.869 198.725 140.917 cv
199.025 140.977 199.337 141.061 199.673 141.181 cv
f
32.7092 156.254 mo
32.1812 157.166 31.7972 158.054 31.5452 158.93 cv
31.2812 159.806 31.1612 160.694 31.1612 161.594 cv
31.1612 162.506 31.2812 163.394 31.5452 164.27 cv
31.7972 165.158 32.1812 166.034 32.7092 166.934 cv
31.7732 166.934 li
31.1852 166.01 30.7412 165.122 30.4532 164.234 cv
30.1652 163.346 30.0212 162.47 30.0212 161.594 cv
30.0212 160.73 30.1652 159.854 30.4532 158.966 cv
30.7412 158.078 31.1732 157.178 31.7732 156.254 cv
32.7092 156.254 li
f
37.7852 162.062 mo
36.9092 162.062 36.3092 162.17 35.9732 162.362 cv
35.6372 162.566 35.4692 162.902 35.4692 163.382 cv
35.4692 163.766 35.5892 164.078 35.8412 164.294 cv
36.0932 164.522 36.4412 164.63 36.8732 164.63 cv
37.4732 164.63 37.9532 164.426 38.3132 163.994 cv
38.6732 163.574 38.8532 163.01 38.8532 162.302 cv
38.8532 162.062 li
37.7852 162.062 li
39.9332 161.618 mo
39.9332 165.362 li
38.8532 165.362 li
38.8532 164.366 li
38.6012 164.774 38.2892 165.062 37.9292 165.242 cv
37.5692 165.422 37.1132 165.518 36.5852 165.518 cv
35.9132 165.518 35.3732 165.338 34.9772 164.966 cv
34.5812 164.594 34.3892 164.09 34.3892 163.454 cv
34.3892 162.722 34.6292 162.17 35.1332 161.786 cv
35.6252 161.414 36.3572 161.222 37.3412 161.222 cv
38.8532 161.222 li
38.8532 161.114 li
38.8532 160.622 38.6852 160.238 38.3612 159.962 cv
38.0372 159.698 37.5812 159.554 36.9932 159.554 cv
36.6092 159.554 36.2492 159.602 35.8892 159.698 cv
35.5292 159.794 35.1932 159.926 34.8692 160.094 cv
34.8692 159.098 li
35.2532 158.954 35.6372 158.834 36.0092 158.762 cv
36.3812 158.69 36.7412 158.642 37.1012 158.642 cv
38.0492 158.642 38.7572 158.894 39.2252 159.386 cv
39.6932 159.878 39.9332 160.622 39.9332 161.618 cv
f
41.9852 156.254 mo
42.9212 156.254 li
43.4972 157.178 43.9412 158.078 44.2292 158.966 cv
44.5173 159.854 44.6732 160.73 44.6732 161.594 cv
44.6732 162.47 44.5173 163.346 44.2292 164.234 cv
43.9412 165.122 43.4972 166.01 42.9212 166.934 cv
41.9852 166.934 li
42.5012 166.034 42.8852 165.158 43.1492 164.27 cv
43.4012 163.394 43.5332 162.506 43.5332 161.594 cv
43.5332 160.694 43.4012 159.806 43.1492 158.93 cv
42.8852 158.054 42.5012 157.166 41.9852 156.254 cv
f
46.8812 156.614 mo
48.4772 156.614 li
52.3532 163.934 li
52.3532 156.614 li
53.5052 156.614 li
53.5052 165.362 li
51.9092 165.362 li
48.0332 158.042 li
48.0332 165.362 li
46.8812 165.362 li
46.8812 156.614 li
f
55.7012 162.77 mo
55.7012 158.798 li
56.7813 158.798 li
56.7813 162.734 li
56.7813 163.358 56.9012 163.814 57.1412 164.126 cv
57.3812 164.438 57.7412 164.594 58.2332 164.594 cv
58.8092 164.594 59.2772 164.414 59.6132 164.042 cv
59.9492 163.67 60.1172 163.166 60.1172 162.518 cv
60.1172 158.798 li
61.1972 158.798 li
61.1972 165.362 li
60.1172 165.362 li
60.1172 164.354 li
59.8532 164.762 59.5412 165.05 59.2052 165.242 cv
58.8572 165.422 58.4612 165.518 58.0052 165.518 cv
57.2492 165.518 56.6732 165.29 56.2892 164.822 cv
55.8932 164.366 55.7012 163.682 55.7012 162.77 cv
58.4132 158.642 mo
58.4132 158.642 li
f
68.5292 160.058 mo
68.7932 159.578 69.1172 159.23 69.4893 158.99 cv
69.8612 158.762 70.3052 158.642 70.8212 158.642 cv
71.4932 158.642 72.0212 158.882 72.3932 159.362 cv
72.7652 159.842 72.9572 160.526 72.9572 161.402 cv
72.9572 165.362 li
71.8772 165.362 li
71.8772 161.438 li
71.8772 160.814 71.7572 160.346 71.5412 160.034 cv
71.3132 159.734 70.9772 159.578 70.5212 159.578 cv
69.9572 159.578 69.5132 159.77 69.1892 160.142 cv
68.8652 160.514 68.7092 161.018 68.7092 161.654 cv
68.7092 165.362 li
67.6292 165.362 li
67.6292 161.438 li
67.6292 160.814 67.5092 160.346 67.2932 160.034 cv
67.0652 159.734 66.7172 159.578 66.2612 159.578 cv
65.7092 159.578 65.2652 159.77 64.9412 160.142 cv
64.6172 160.514 64.4612 161.018 64.4612 161.654 cv
64.4612 165.362 li
63.3812 165.362 li
63.3812 158.798 li
64.4612 158.798 li
64.4612 159.818 li
64.7012 159.422 65.0012 159.122 65.3492 158.93 cv
65.6852 158.738 66.0932 158.642 66.5732 158.642 cv
67.0532 158.642 67.4492 158.762 67.7852 159.002 cv
68.1212 159.242 68.3612 159.602 68.5292 160.058 cv
f
79.8212 162.086 mo
79.8212 161.294 79.6532 160.682 79.3292 160.226 cv
78.9932 159.77 78.5492 159.542 77.9852 159.542 cv
77.4092 159.542 76.9652 159.77 76.6413 160.226 cv
76.3053 160.682 76.1492 161.294 76.1492 162.086 cv
76.1492 162.878 76.3053 163.502 76.6413 163.958 cv
76.9652 164.414 77.4092 164.63 77.9852 164.63 cv
78.5492 164.63 78.9932 164.414 79.3292 163.958 cv
79.6532 163.502 79.8212 162.878 79.8212 162.086 cv
76.1492 159.794 mo
76.3652 159.41 76.6532 159.122 77.0013 158.93 cv
77.3492 158.738 77.7692 158.642 78.2493 158.642 cv
79.0412 158.642 79.6892 158.966 80.1933 159.59 cv
80.6852 160.226 80.9372 161.054 80.9372 162.086 cv
80.9372 163.118 80.6852 163.958 80.1933 164.582 cv
79.6892 165.206 79.0412 165.518 78.2493 165.518 cv
77.7692 165.518 77.3492 165.422 77.0013 165.242 cv
76.6532 165.062 76.3652 164.774 76.1492 164.378 cv
76.1492 165.362 li
75.0692 165.362 li
75.0692 156.242 li
76.1492 156.242 li
76.1492 159.794 li
f
88.3412 161.81 mo
88.3412 162.338 li
83.3853 162.338 li
83.4332 163.082 83.6492 163.658 84.0573 164.042 cv
84.4532 164.426 85.0052 164.618 85.7253 164.618 cv
86.1332 164.618 86.5412 164.57 86.9252 164.474 cv
87.3092 164.378 87.7052 164.222 88.0892 164.006 cv
88.0892 165.026 li
87.7052 165.194 87.3092 165.326 86.9012 165.398 cv
86.4932 165.47 86.0732 165.518 85.6653 165.518 cv
84.6093 165.518 83.7813 165.218 83.1693 164.618 cv
82.5573 164.018 82.2572 163.19 82.2572 162.146 cv
82.2572 161.078 82.5452 160.226 83.1212 159.59 cv
83.6973 158.966 84.4892 158.642 85.4733 158.642 cv
86.3613 158.642 87.0573 158.93 87.5732 159.494 cv
88.0772 160.07 88.3412 160.838 88.3412 161.81 cv
87.2612 161.498 mo
87.2493 160.91 87.0813 160.442 86.7692 160.082 cv
86.4453 159.734 86.0132 159.554 85.4852 159.554 cv
84.8853 159.554 84.4052 159.734 84.0452 160.07 cv
83.6852 160.406 83.4693 160.886 83.4212 161.498 cv
87.2612 161.498 li
f
93.9092 159.806 mo
93.7892 159.734 93.6572 159.686 93.5132 159.65 cv
93.3692 159.626 93.2132 159.602 93.0452 159.602 cv
92.4332 159.602 91.9652 159.806 91.6413 160.202 cv
91.3053 160.598 91.1492 161.162 91.1492 161.906 cv
91.1492 165.362 li
90.0692 165.362 li
90.0692 158.798 li
91.1492 158.798 li
91.1492 159.818 li
91.3652 159.422 91.6653 159.122 92.0253 158.93 cv
92.3853 158.738 92.8292 158.642 93.3573 158.642 cv
93.4292 158.642 93.5132 158.654 93.6093 158.654 cv
93.6933 158.666 93.7892 158.678 93.9092 158.702 cv
93.9092 159.806 li
f
101.397 159.554 mo
100.821 159.554 100.365 159.782 100.029 160.238 cv
99.6933 160.694 99.5253 161.306 99.5253 162.086 cv
99.5253 162.878 99.6812 163.49 100.017 163.946 cv
100.353 164.402 100.809 164.618 101.397 164.618 cv
101.973 164.618 102.429 164.402 102.765 163.946 cv
103.101 163.49 103.269 162.878 103.269 162.086 cv
103.269 161.318 103.101 160.694 102.765 160.238 cv
102.429 159.782 101.973 159.554 101.397 159.554 cv
101.397 158.642 mo
102.333 158.642 103.065 158.954 103.605 159.554 cv
104.133 160.166 104.409 161.006 104.409 162.086 cv
104.409 163.166 104.133 164.006 103.605 164.606 cv
103.065 165.218 102.333 165.518 101.397 165.518 cv
100.449 165.518 99.7052 165.218 99.1772 164.606 cv
98.6492 164.006 98.3853 163.166 98.3853 162.086 cv
98.3853 161.006 98.6492 160.166 99.1772 159.554 cv
99.7052 158.954 100.449 158.642 101.397 158.642 cv
f
109.521 156.242 mo
109.521 157.142 li
108.489 157.142 li
108.105 157.142 107.829 157.226 107.685 157.382 cv
107.529 157.538 107.457 157.814 107.457 158.222 cv
107.457 158.798 li
109.233 158.798 li
109.233 159.638 li
107.457 159.638 li
107.457 165.362 li
106.377 165.362 li
106.377 159.638 li
105.345 159.638 li
105.345 158.798 li
106.377 158.798 li
106.377 158.342 li
106.377 157.622 106.545 157.082 106.881 156.746 cv
107.217 156.41 107.757 156.242 108.501 156.242 cv
109.521 156.242 li
f
119.697 161.402 mo
119.697 165.362 li
118.617 165.362 li
118.617 161.438 li
118.617 160.814 118.485 160.358 118.245 160.046 cv
118.005 159.734 117.645 159.578 117.165 159.578 cv
116.577 159.578 116.121 159.77 115.785 160.142 cv
115.449 160.514 115.281 161.018 115.281 161.654 cv
115.281 165.362 li
114.201 165.362 li
114.201 156.242 li
115.281 156.242 li
115.281 159.818 li
115.533 159.434 115.833 159.134 116.193 158.942 cv
116.541 158.75 116.949 158.642 117.405 158.642 cv
118.149 158.642 118.725 158.882 119.109 159.35 cv
119.493 159.818 119.697 160.502 119.697 161.402 cv
f
121.845 158.798 mo
122.925 158.798 li
122.925 165.362 li
121.845 165.362 li
121.845 158.798 li
121.845 156.242 mo
122.925 156.242 li
122.925 157.61 li
121.845 157.61 li
121.845 156.242 li
f
129.501 159.794 mo
129.501 156.242 li
130.581 156.242 li
130.581 165.362 li
129.501 165.362 li
129.501 164.378 li
129.273 164.774 128.985 165.062 128.637 165.242 cv
128.289 165.422 127.881 165.518 127.401 165.518 cv
126.609 165.518 125.961 165.206 125.457 164.582 cv
124.953 163.958 124.713 163.118 124.713 162.086 cv
124.713 161.054 124.953 160.226 125.457 159.59 cv
125.961 158.966 126.609 158.642 127.401 158.642 cv
127.881 158.642 128.289 158.738 128.637 158.93 cv
128.985 159.122 129.273 159.41 129.501 159.794 cv
125.829 162.086 mo
125.829 162.878 125.985 163.502 126.309 163.958 cv
126.633 164.414 127.089 164.63 127.665 164.63 cv
128.229 164.63 128.673 164.414 129.009 163.958 cv
129.333 163.502 129.501 162.878 129.501 162.086 cv
129.501 161.294 129.333 160.682 129.009 160.226 cv
128.673 159.77 128.229 159.542 127.665 159.542 cv
127.089 159.542 126.633 159.77 126.309 160.226 cv
125.985 160.682 125.829 161.294 125.829 162.086 cv
f
137.121 159.794 mo
137.121 156.242 li
138.201 156.242 li
138.201 165.362 li
137.121 165.362 li
137.121 164.378 li
136.893 164.774 136.605 165.062 136.257 165.242 cv
135.909 165.422 135.501 165.518 135.021 165.518 cv
134.229 165.518 133.581 165.206 133.077 164.582 cv
132.573 163.958 132.333 163.118 132.333 162.086 cv
132.333 161.054 132.573 160.226 133.077 159.59 cv
133.581 158.966 134.229 158.642 135.021 158.642 cv
135.501 158.642 135.909 158.738 136.257 158.93 cv
136.605 159.122 136.893 159.41 137.121 159.794 cv
133.449 162.086 mo
133.449 162.878 133.605 163.502 133.929 163.958 cv
134.253 164.414 134.709 164.63 135.285 164.63 cv
135.849 164.63 136.293 164.414 136.629 163.958 cv
136.953 163.502 137.121 162.878 137.121 162.086 cv
137.121 161.294 136.953 160.682 136.629 160.226 cv
136.293 159.77 135.849 159.542 135.285 159.542 cv
134.709 159.542 134.253 159.77 133.929 160.226 cv
133.605 160.682 133.449 161.294 133.449 162.086 cv
f
146.037 161.81 mo
146.037 162.338 li
141.081 162.338 li
141.129 163.082 141.345 163.658 141.753 164.042 cv
142.149 164.426 142.701 164.618 143.421 164.618 cv
143.829 164.618 144.237 164.57 144.621 164.474 cv
145.005 164.378 145.401 164.222 145.785 164.006 cv
145.785 165.026 li
145.401 165.194 145.005 165.326 144.597 165.398 cv
144.189 165.47 143.769 165.518 143.361 165.518 cv
142.305 165.518 141.477 165.218 140.865 164.618 cv
140.253 164.018 139.953 163.19 139.953 162.146 cv
139.953 161.078 140.241 160.226 140.817 159.59 cv
141.393 158.966 142.185 158.642 143.169 158.642 cv
144.057 158.642 144.753 158.93 145.269 159.494 cv
145.773 160.07 146.037 160.838 146.037 161.81 cv
144.957 161.498 mo
144.945 160.91 144.777 160.442 144.465 160.082 cv
144.141 159.734 143.709 159.554 143.181 159.554 cv
142.581 159.554 142.101 159.734 141.741 160.07 cv
141.381 160.406 141.165 160.886 141.117 161.498 cv
144.957 161.498 li
f
153.261 161.402 mo
153.261 165.362 li
152.181 165.362 li
152.181 161.438 li
152.181 160.814 152.049 160.358 151.809 160.046 cv
151.569 159.734 151.209 159.578 150.729 159.578 cv
150.141 159.578 149.685 159.77 149.349 160.142 cv
149.013 160.514 148.845 161.018 148.845 161.654 cv
148.845 165.362 li
147.765 165.362 li
147.765 158.798 li
148.845 158.798 li
148.845 159.818 li
149.097 159.434 149.397 159.134 149.757 158.942 cv
150.105 158.75 150.513 158.642 150.969 158.642 cv
151.713 158.642 152.289 158.882 152.673 159.35 cv
153.057 159.818 153.261 160.502 153.261 161.402 cv
f
159.117 162.77 mo
159.117 158.798 li
160.197 158.798 li
160.197 162.734 li
160.197 163.358 160.317 163.814 160.557 164.126 cv
160.797 164.438 161.157 164.594 161.649 164.594 cv
162.225 164.594 162.693 164.414 163.029 164.042 cv
163.365 163.67 163.533 163.166 163.533 162.518 cv
163.533 158.798 li
164.613 158.798 li
164.613 165.362 li
163.533 165.362 li
163.533 164.354 li
163.269 164.762 162.957 165.05 162.621 165.242 cv
162.273 165.422 161.877 165.518 161.421 165.518 cv
160.665 165.518 160.089 165.29 159.705 164.822 cv
159.309 164.366 159.117 163.682 159.117 162.77 cv
161.829 158.642 mo
161.829 158.642 li
f
172.293 161.402 mo
172.293 165.362 li
171.213 165.362 li
171.213 161.438 li
171.213 160.814 171.081 160.358 170.841 160.046 cv
170.601 159.734 170.241 159.578 169.761 159.578 cv
169.173 159.578 168.717 159.77 168.381 160.142 cv
168.045 160.514 167.877 161.018 167.877 161.654 cv
167.877 165.362 li
166.797 165.362 li
166.797 158.798 li
167.877 158.798 li
167.877 159.818 li
168.129 159.434 168.429 159.134 168.789 158.942 cv
169.137 158.75 169.545 158.642 170.001 158.642 cv
170.745 158.642 171.321 158.882 171.705 159.35 cv
172.089 159.818 172.293 160.502 172.293 161.402 cv
f
174.441 158.798 mo
175.521 158.798 li
175.521 165.362 li
174.441 165.362 li
174.441 158.798 li
174.441 156.242 mo
175.521 156.242 li
175.521 157.61 li
174.441 157.61 li
174.441 156.242 li
f
178.845 156.938 mo
178.845 158.798 li
181.065 158.798 li
181.065 159.638 li
178.845 159.638 li
178.845 163.202 li
178.845 163.742 178.917 164.09 179.061 164.234 cv
179.205 164.39 179.505 164.462 179.961 164.462 cv
181.065 164.462 li
181.065 165.362 li
179.961 165.362 li
179.121 165.362 178.545 165.206 178.233 164.894 cv
177.921 164.582 177.765 164.018 177.765 163.202 cv
177.765 159.638 li
176.973 159.638 li
176.973 158.798 li
177.765 158.798 li
177.765 156.938 li
178.845 156.938 li
f
186.669 158.99 mo
186.669 160.01 li
186.357 159.866 186.045 159.746 185.721 159.662 cv
185.385 159.59 185.049 159.542 184.701 159.542 cv
184.161 159.542 183.753 159.626 183.489 159.794 cv
183.225 159.962 183.093 160.202 183.093 160.526 cv
183.093 160.778 183.189 160.97 183.381 161.114 cv
183.573 161.258 183.957 161.402 184.533 161.522 cv
184.905 161.606 li
185.673 161.774 186.213 162.014 186.537 162.302 cv
186.849 162.602 187.017 163.022 187.017 163.55 cv
187.017 164.162 186.777 164.642 186.297 164.99 cv
185.817 165.35 185.145 165.518 184.305 165.518 cv
183.945 165.518 183.585 165.482 183.201 165.422 cv
182.817 165.362 182.421 165.266 182.001 165.122 cv
182.001 164.006 li
182.397 164.222 182.793 164.378 183.177 164.474 cv
183.561 164.582 183.945 164.63 184.329 164.63 cv
184.833 164.63 185.229 164.546 185.505 164.378 cv
185.769 164.21 185.913 163.958 185.913 163.634 cv
185.913 163.346 185.805 163.118 185.613 162.962 cv
185.421 162.806 184.989 162.65 184.317 162.506 cv
183.945 162.422 li
183.273 162.278 182.781 162.062 182.493 161.774 cv
182.193 161.486 182.049 161.09 182.049 160.574 cv
182.049 159.962 182.265 159.482 182.697 159.146 cv
183.129 158.81 183.753 158.642 184.569 158.642 cv
184.965 158.642 185.337 158.678 185.697 158.738 cv
186.045 158.798 186.369 158.882 186.669 158.99 cv
f
189.009 163.874 mo
190.245 163.874 li
190.245 165.362 li
189.009 165.362 li
189.009 163.874 li
189.009 159.158 mo
190.245 159.158 li
190.245 160.646 li
189.009 160.646 li
189.009 159.158 li
f
196.509 156.614 mo
197.697 156.614 li
197.697 161.93 li
197.697 162.866 197.865 163.55 198.201 163.958 cv
198.537 164.366 199.089 164.57 199.857 164.57 cv
200.613 164.57 201.165 164.366 201.501 163.958 cv
201.837 163.55 202.017 162.866 202.017 161.93 cv
202.017 156.614 li
203.205 156.614 li
203.205 162.074 li
203.205 163.226 202.917 164.078 202.353 164.654 cv
201.789 165.23 200.961 165.518 199.857 165.518 cv
198.753 165.518 197.913 165.23 197.349 164.654 cv
196.785 164.078 196.509 163.226 196.509 162.074 cv
196.509 156.614 li
f
grestore
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 133.612 mo
196.85 133.612 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
36.4251 133.612 mo
32.9251 133.612 li
f
36.4251 133.612 mo
32.9251 133.612 li
@
6.50677 130.206 mo
5.89477 130.206 5.43877 130.506 5.12677 131.106 cv
4.81478 131.706 4.67076 132.606 4.67076 133.806 cv
4.67076 135.006 4.81478 135.906 5.12677 136.506 cv
5.43877 137.106 5.89477 137.406 6.50677 137.406 cv
7.11877 137.406 7.57477 137.106 7.88678 136.506 cv
8.18678 135.906 8.34277 135.006 8.34277 133.806 cv
8.34277 132.606 8.18678 131.706 7.88678 131.106 cv
7.57477 130.506 7.11877 130.206 6.50677 130.206 cv
6.50677 129.27 mo
7.47878 129.27 8.22278 129.666 8.75076 130.434 cv
9.26677 131.214 9.53077 132.342 9.53077 133.806 cv
9.53077 135.282 9.26677 136.41 8.75076 137.178 cv
8.22278 137.946 7.47878 138.33 6.50677 138.33 cv
5.52277 138.33 4.76677 137.946 4.25078 137.178 cv
3.73477 136.41 3.48278 135.282 3.48278 133.806 cv
3.48278 132.342 3.73477 131.214 4.25078 130.434 cv
4.76677 129.666 5.52277 129.27 6.50677 129.27 cv
f
11.6068 136.686 mo
12.8428 136.686 li
12.8428 138.174 li
11.6068 138.174 li
11.6068 136.686 li
f
15.4588 137.994 mo
15.4588 136.914 li
15.7468 137.058 16.0468 137.166 16.3588 137.238 cv
16.6588 137.31 16.9588 137.346 17.2588 137.346 cv
18.0268 137.346 18.6268 137.094 19.0348 136.566 cv
19.4428 136.038 19.6828 135.246 19.7548 134.166 cv
19.5148 134.502 19.2268 134.766 18.8908 134.946 cv
18.5428 135.126 18.1588 135.21 17.7388 135.21 cv
16.8508 135.21 16.1548 134.946 15.6508 134.418 cv
15.1468 133.89 14.8948 133.17 14.8948 132.246 cv
14.8948 131.358 15.1588 130.638 15.6868 130.086 cv
16.2148 129.546 16.9228 129.27 17.8108 129.27 cv
18.8188 129.27 19.5988 129.666 20.1268 130.434 cv
20.6548 131.214 20.9308 132.342 20.9308 133.806 cv
20.9308 135.198 20.5948 136.29 19.9468 137.106 cv
19.2868 137.922 18.4108 138.33 17.3068 138.33 cv
17.0068 138.33 16.7068 138.294 16.4068 138.246 cv
16.0948 138.198 15.7828 138.114 15.4588 137.994 cv
17.8108 134.286 mo
18.3388 134.286 18.7588 134.106 19.0708 133.746 cv
19.3828 133.386 19.5388 132.882 19.5388 132.246 cv
19.5388 131.622 19.3828 131.118 19.0708 130.758 cv
18.7588 130.398 18.3388 130.206 17.8108 130.206 cv
17.2828 130.206 16.8628 130.398 16.5508 130.758 cv
16.2388 131.118 16.0828 131.622 16.0828 132.246 cv
16.0828 132.882 16.2388 133.386 16.5508 133.746 cv
16.8628 134.106 17.2828 134.286 17.8108 134.286 cv
f
25.5868 130.206 mo
24.9748 130.206 24.5188 130.506 24.2068 131.106 cv
23.8948 131.706 23.7508 132.606 23.7508 133.806 cv
23.7508 135.006 23.8948 135.906 24.2068 136.506 cv
24.5188 137.106 24.9748 137.406 25.5868 137.406 cv
26.1988 137.406 26.6548 137.106 26.9668 136.506 cv
27.2668 135.906 27.4228 135.006 27.4228 133.806 cv
27.4228 132.606 27.2668 131.706 26.9668 131.106 cv
26.6548 130.506 26.1988 130.206 25.5868 130.206 cv
25.5868 129.27 mo
26.5588 129.27 27.3028 129.666 27.8308 130.434 cv
28.3468 131.214 28.6108 132.342 28.6108 133.806 cv
28.6108 135.282 28.3468 136.41 27.8308 137.178 cv
27.3028 137.946 26.5588 138.33 25.5868 138.33 cv
24.6028 138.33 23.8468 137.946 23.3308 137.178 cv
22.8148 136.41 22.5628 135.282 22.5628 133.806 cv
22.5628 132.342 22.8148 131.214 23.3308 130.434 cv
23.8468 129.666 24.6028 129.27 25.5868 129.27 cv
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 108.725 mo
196.85 108.725 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
36.4251 108.725 mo
32.9251 108.725 li
f
36.4251 108.725 mo
32.9251 108.725 li
@
6.50677 105.32 mo
5.89477 105.32 5.43877 105.62 5.12677 106.22 cv
4.81478 106.82 4.67076 107.72 4.67076 108.92 cv
4.67076 110.12 4.81478 111.02 5.12677 111.62 cv
5.43877 112.22 5.89477 112.52 6.50677 112.52 cv
7.11877 112.52 7.57477 112.22 7.88678 111.62 cv
8.18678 111.02 8.34277 110.12 8.34277 108.92 cv
8.34277 107.72 8.18678 106.82 7.88678 106.22 cv
7.57477 105.62 7.11877 105.32 6.50677 105.32 cv
6.50677 104.384 mo
7.47878 104.384 8.22278 104.78 8.75076 105.548 cv
9.26677 106.328 9.53077 107.456 9.53077 108.92 cv
9.53077 110.396 9.26677 111.524 8.75076 112.292 cv
8.22278 113.06 7.47878 113.444 6.50677 113.444 cv
5.52277 113.444 4.76677 113.06 4.25078 112.292 cv
3.73477 111.524 3.48278 110.396 3.48278 108.92 cv
3.48278 107.456 3.73477 106.328 4.25078 105.548 cv
4.76677 104.78 5.52277 104.384 6.50677 104.384 cv
f
11.6068 111.8 mo
12.8428 111.8 li
12.8428 113.288 li
11.6068 113.288 li
11.6068 111.8 li
f
15.4588 113.108 mo
15.4588 112.028 li
15.7468 112.172 16.0468 112.28 16.3588 112.352 cv
16.6588 112.424 16.9588 112.46 17.2588 112.46 cv
18.0268 112.46 18.6268 112.208 19.0348 111.68 cv
19.4428 111.152 19.6828 110.36 19.7548 109.28 cv
19.5148 109.616 19.2268 109.88 18.8908 110.06 cv
18.5428 110.24 18.1588 110.324 17.7388 110.324 cv
16.8508 110.324 16.1548 110.06 15.6508 109.532 cv
15.1468 109.004 14.8948 108.284 14.8948 107.36 cv
14.8948 106.472 15.1588 105.752 15.6868 105.2 cv
16.2148 104.66 16.9228 104.384 17.8108 104.384 cv
18.8188 104.384 19.5988 104.78 20.1268 105.548 cv
20.6548 106.328 20.9308 107.456 20.9308 108.92 cv
20.9308 110.312 20.5948 111.404 19.9468 112.22 cv
19.2868 113.036 18.4108 113.444 17.3068 113.444 cv
17.0068 113.444 16.7068 113.408 16.4068 113.36 cv
16.0948 113.312 15.7828 113.228 15.4588 113.108 cv
17.8108 109.4 mo
18.3388 109.4 18.7588 109.22 19.0708 108.86 cv
19.3828 108.5 19.5388 107.996 19.5388 107.36 cv
19.5388 106.736 19.3828 106.232 19.0708 105.872 cv
18.7588 105.512 18.3388 105.32 17.8108 105.32 cv
17.2828 105.32 16.8628 105.512 16.5508 105.872 cv
16.2388 106.232 16.0828 106.736 16.0828 107.36 cv
16.0828 107.996 16.2388 108.5 16.5508 108.86 cv
16.8628 109.22 17.2828 109.4 17.8108 109.4 cv
f
24.0748 112.292 mo
28.2028 112.292 li
28.2028 113.288 li
22.6468 113.288 li
22.6468 112.292 li
23.0908 111.836 23.7028 111.212 24.4828 110.42 cv
25.2508 109.64 25.7428 109.136 25.9468 108.908 cv
26.3308 108.488 26.5948 108.128 26.7388 107.828 cv
26.8828 107.54 26.9668 107.24 26.9668 106.952 cv
26.9668 106.496 26.7988 106.112 26.4748 105.824 cv
26.1508 105.536 25.7308 105.38 25.2028 105.38 cv
24.8308 105.38 24.4348 105.452 24.0268 105.572 cv
23.6188 105.704 23.1748 105.896 22.7068 106.16 cv
22.7068 104.96 li
23.1868 104.768 23.6308 104.624 24.0388 104.528 cv
24.4468 104.432 24.8308 104.384 25.1788 104.384 cv
26.0788 104.384 26.7988 104.612 27.3388 105.068 cv
27.8788 105.524 28.1548 106.124 28.1548 106.88 cv
28.1548 107.24 28.0828 107.588 27.9508 107.9 cv
27.8188 108.224 27.5788 108.608 27.2188 109.04 cv
27.1228 109.16 26.8108 109.484 26.2828 110.024 cv
25.7548 110.564 25.0228 111.32 24.0748 112.292 cv
f
grestore
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 83.8389 mo
196.85 83.8389 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
36.4251 83.8389 mo
32.9251 83.8389 li
f
36.4251 83.8389 mo
32.9251 83.8389 li
@
6.50677 80.4334 mo
5.89477 80.4334 5.43877 80.7334 5.12677 81.3334 cv
4.81478 81.9334 4.67076 82.8334 4.67076 84.0334 cv
4.67076 85.2334 4.81478 86.1334 5.12677 86.7334 cv
5.43877 87.3334 5.89477 87.6334 6.50677 87.6334 cv
7.11877 87.6334 7.57477 87.3334 7.88678 86.7334 cv
8.18678 86.1334 8.34277 85.2334 8.34277 84.0334 cv
8.34277 82.8334 8.18678 81.9334 7.88678 81.3334 cv
7.57477 80.7334 7.11877 80.4334 6.50677 80.4334 cv
6.50677 79.4974 mo
7.47878 79.4974 8.22278 79.8934 8.75076 80.6614 cv
9.26677 81.4414 9.53077 82.5694 9.53077 84.0334 cv
9.53077 85.5094 9.26677 86.6374 8.75076 87.4054 cv
8.22278 88.1734 7.47878 88.5574 6.50677 88.5574 cv
5.52277 88.5574 4.76677 88.1734 4.25078 87.4054 cv
3.73477 86.6374 3.48278 85.5094 3.48278 84.0334 cv
3.48278 82.5694 3.73477 81.4414 4.25078 80.6614 cv
4.76677 79.8934 5.52277 79.4974 6.50677 79.4974 cv
f
11.6068 86.9134 mo
12.8428 86.9134 li
12.8428 88.4014 li
11.6068 88.4014 li
11.6068 86.9134 li
f
15.4588 88.2214 mo
15.4588 87.1414 li
15.7468 87.2854 16.0468 87.3934 16.3588 87.4654 cv
16.6588 87.5374 16.9588 87.5734 17.2588 87.5734 cv
18.0268 87.5734 18.6268 87.3214 19.0348 86.7934 cv
19.4428 86.2654 19.6828 85.4734 19.7548 84.3934 cv
19.5148 84.7294 19.2268 84.9934 18.8908 85.1734 cv
18.5428 85.3534 18.1588 85.4374 17.7388 85.4374 cv
16.8508 85.4374 16.1548 85.1734 15.6508 84.6454 cv
15.1468 84.1174 14.8948 83.3974 14.8948 82.4734 cv
14.8948 81.5854 15.1588 80.8654 15.6868 80.3134 cv
16.2148 79.7734 16.9228 79.4974 17.8108 79.4974 cv
18.8188 79.4974 19.5988 79.8934 20.1268 80.6614 cv
20.6548 81.4414 20.9308 82.5694 20.9308 84.0334 cv
20.9308 85.4254 20.5948 86.5174 19.9468 87.3334 cv
19.2868 88.1494 18.4108 88.5574 17.3068 88.5574 cv
17.0068 88.5574 16.7068 88.5214 16.4068 88.4734 cv
16.0948 88.4254 15.7828 88.3414 15.4588 88.2214 cv
17.8108 84.5134 mo
18.3388 84.5134 18.7588 84.3334 19.0708 83.9734 cv
19.3828 83.6134 19.5388 83.1094 19.5388 82.4734 cv
19.5388 81.8494 19.3828 81.3454 19.0708 80.9854 cv
18.7588 80.6254 18.3388 80.4334 17.8108 80.4334 cv
17.2828 80.4334 16.8628 80.6254 16.5508 80.9854 cv
16.2388 81.3454 16.0828 81.8494 16.0828 82.4734 cv
16.0828 83.1094 16.2388 83.6134 16.5508 83.9734 cv
16.8628 84.3334 17.2828 84.5134 17.8108 84.5134 cv
f
26.3068 80.6854 mo
23.3188 85.3534 li
26.3068 85.3534 li
26.3068 80.6854 li
25.9948 79.6534 mo
27.4828 79.6534 li
27.4828 85.3534 li
28.7308 85.3534 li
28.7308 86.3374 li
27.4828 86.3374 li
27.4828 88.4014 li
26.3068 88.4014 li
26.3068 86.3374 li
22.3588 86.3374 li
22.3588 85.1974 li
25.9948 79.6534 li
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 58.9525 mo
196.85 58.9525 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
36.4251 58.9525 mo
32.9251 58.9525 li
f
36.4251 58.9525 mo
32.9251 58.9525 li
@
6.50677 55.547 mo
5.89477 55.547 5.43877 55.847 5.12677 56.447 cv
4.81478 57.047 4.67076 57.947 4.67076 59.147 cv
4.67076 60.347 4.81478 61.247 5.12677 61.847 cv
5.43877 62.447 5.89477 62.747 6.50677 62.747 cv
7.11877 62.747 7.57477 62.447 7.88678 61.847 cv
8.18678 61.247 8.34277 60.347 8.34277 59.147 cv
8.34277 57.947 8.18678 57.047 7.88678 56.447 cv
7.57477 55.847 7.11877 55.547 6.50677 55.547 cv
6.50677 54.611 mo
7.47878 54.611 8.22278 55.007 8.75076 55.775 cv
9.26677 56.555 9.53077 57.683 9.53077 59.147 cv
9.53077 60.623 9.26677 61.751 8.75076 62.519 cv
8.22278 63.287 7.47878 63.671 6.50677 63.671 cv
5.52277 63.671 4.76677 63.287 4.25078 62.519 cv
3.73477 61.751 3.48278 60.623 3.48278 59.147 cv
3.48278 57.683 3.73477 56.555 4.25078 55.775 cv
4.76677 55.007 5.52277 54.611 6.50677 54.611 cv
f
11.6068 62.027 mo
12.8428 62.027 li
12.8428 63.515 li
11.6068 63.515 li
11.6068 62.027 li
f
15.4588 63.335 mo
15.4588 62.255 li
15.7468 62.399 16.0468 62.507 16.3588 62.579 cv
16.6588 62.651 16.9588 62.687 17.2588 62.687 cv
18.0268 62.687 18.6268 62.435 19.0348 61.907 cv
19.4428 61.379 19.6828 60.587 19.7548 59.507 cv
19.5148 59.843 19.2268 60.107 18.8908 60.287 cv
18.5428 60.467 18.1588 60.551 17.7388 60.551 cv
16.8508 60.551 16.1548 60.287 15.6508 59.759 cv
15.1468 59.231 14.8948 58.511 14.8948 57.587 cv
14.8948 56.699 15.1588 55.979 15.6868 55.427 cv
16.2148 54.887 16.9228 54.611 17.8108 54.611 cv
18.8188 54.611 19.5988 55.007 20.1268 55.775 cv
20.6548 56.555 20.9308 57.683 20.9308 59.147 cv
20.9308 60.539 20.5948 61.631 19.9468 62.447 cv
19.2868 63.263 18.4108 63.671 17.3068 63.671 cv
17.0068 63.671 16.7068 63.635 16.4068 63.587 cv
16.0948 63.539 15.7828 63.455 15.4588 63.335 cv
17.8108 59.627 mo
18.3388 59.627 18.7588 59.447 19.0708 59.087 cv
19.3828 58.727 19.5388 58.223 19.5388 57.587 cv
19.5388 56.963 19.3828 56.459 19.0708 56.099 cv
18.7588 55.739 18.3388 55.547 17.8108 55.547 cv
17.2828 55.547 16.8628 55.739 16.5508 56.099 cv
16.2388 56.459 16.0828 56.963 16.0828 57.587 cv
16.0828 58.223 16.2388 58.727 16.5508 59.087 cv
16.8628 59.447 17.2828 59.627 17.8108 59.627 cv
f
25.7308 58.667 mo
25.2028 58.667 24.7828 58.859 24.4708 59.219 cv
24.1588 59.579 24.0028 60.083 24.0028 60.707 cv
24.0028 61.343 24.1588 61.847 24.4708 62.207 cv
24.7828 62.567 25.2028 62.747 25.7308 62.747 cv
26.2588 62.747 26.6788 62.567 26.9908 62.207 cv
27.3028 61.847 27.4588 61.343 27.4588 60.707 cv
27.4588 60.083 27.3028 59.579 26.9908 59.219 cv
26.6788 58.859 26.2588 58.667 25.7308 58.667 cv
28.0828 54.959 mo
28.0828 56.039 li
27.7828 55.895 27.4828 55.787 27.1828 55.715 cv
26.8708 55.643 26.5708 55.607 26.2828 55.607 cv
25.4908 55.607 24.8908 55.871 24.4828 56.399 cv
24.0748 56.927 23.8348 57.731 23.7868 58.787 cv
24.0148 58.451 24.3028 58.187 24.6508 58.007 cv
24.9988 57.827 25.3828 57.731 25.8028 57.731 cv
26.6788 57.731 27.3748 58.007 27.8788 58.535 cv
28.3828 59.063 28.6468 59.795 28.6468 60.707 cv
28.6468 61.607 28.3708 62.327 27.8428 62.867 cv
27.3148 63.407 26.6068 63.671 25.7308 63.671 cv
24.7228 63.671 23.9428 63.287 23.4148 62.519 cv
22.8748 61.751 22.6108 60.623 22.6108 59.147 cv
22.6108 57.767 22.9348 56.663 23.5948 55.847 cv
24.2428 55.031 25.1308 54.611 26.2348 54.611 cv
26.5228 54.611 26.8228 54.647 27.1348 54.695 cv
27.4348 54.755 27.7468 54.839 28.0828 54.959 cv
f
grestore
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 34.0661 mo
196.85 34.0661 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
36.4251 34.0661 mo
32.9251 34.0661 li
f
36.4251 34.0661 mo
32.9251 34.0661 li
@
6.50677 30.6606 mo
5.89477 30.6606 5.43877 30.9606 5.12677 31.5606 cv
4.81478 32.1606 4.67076 33.0606 4.67076 34.2606 cv
4.67076 35.4606 4.81478 36.3606 5.12677 36.9606 cv
5.43877 37.5606 5.89477 37.8606 6.50677 37.8606 cv
7.11877 37.8606 7.57477 37.5606 7.88678 36.9606 cv
8.18678 36.3606 8.34277 35.4606 8.34277 34.2606 cv
8.34277 33.0606 8.18678 32.1606 7.88678 31.5606 cv
7.57477 30.9606 7.11877 30.6606 6.50677 30.6606 cv
6.50677 29.7246 mo
7.47878 29.7246 8.22278 30.1206 8.75076 30.8886 cv
9.26677 31.6686 9.53077 32.7966 9.53077 34.2606 cv
9.53077 35.7366 9.26677 36.8646 8.75076 37.6326 cv
8.22278 38.4006 7.47878 38.7846 6.50677 38.7846 cv
5.52277 38.7846 4.76677 38.4006 4.25078 37.6326 cv
3.73477 36.8646 3.48278 35.7366 3.48278 34.2606 cv
3.48278 32.7966 3.73477 31.6686 4.25078 30.8886 cv
4.76677 30.1206 5.52277 29.7246 6.50677 29.7246 cv
f
11.6068 37.1406 mo
12.8428 37.1406 li
12.8428 38.6286 li
11.6068 38.6286 li
11.6068 37.1406 li
f
15.4588 38.4486 mo
15.4588 37.3686 li
15.7468 37.5126 16.0468 37.6206 16.3588 37.6926 cv
16.6588 37.7646 16.9588 37.8006 17.2588 37.8006 cv
18.0268 37.8006 18.6268 37.5486 19.0348 37.0206 cv
19.4428 36.4926 19.6828 35.7006 19.7548 34.6206 cv
19.5148 34.9566 19.2268 35.2206 18.8908 35.4006 cv
18.5428 35.5806 18.1588 35.6646 17.7388 35.6646 cv
16.8508 35.6646 16.1548 35.4006 15.6508 34.8726 cv
15.1468 34.3446 14.8948 33.6246 14.8948 32.7006 cv
14.8948 31.8126 15.1588 31.0926 15.6868 30.5406 cv
16.2148 30.0006 16.9228 29.7246 17.8108 29.7246 cv
18.8188 29.7246 19.5988 30.1206 20.1268 30.8886 cv
20.6548 31.6686 20.9308 32.7966 20.9308 34.2606 cv
20.9308 35.6526 20.5948 36.7446 19.9468 37.5606 cv
19.2868 38.3766 18.4108 38.7846 17.3068 38.7846 cv
17.0068 38.7846 16.7068 38.7486 16.4068 38.7006 cv
16.0948 38.6526 15.7828 38.5686 15.4588 38.4486 cv
17.8108 34.7406 mo
18.3388 34.7406 18.7588 34.5606 19.0708 34.2006 cv
19.3828 33.8406 19.5388 33.3366 19.5388 32.7006 cv
19.5388 32.0766 19.3828 31.5726 19.0708 31.2126 cv
18.7588 30.8526 18.3388 30.6606 17.8108 30.6606 cv
17.2828 30.6606 16.8628 30.8526 16.5508 31.2126 cv
16.2388 31.5726 16.0828 32.0766 16.0828 32.7006 cv
16.0828 33.3366 16.2388 33.8406 16.5508 34.2006 cv
16.8628 34.5606 17.2828 34.7406 17.8108 34.7406 cv
f
25.5868 34.4766 mo
25.0228 34.4766 24.5788 34.6326 24.2548 34.9326 cv
23.9308 35.2326 23.7748 35.6406 23.7748 36.1686 cv
23.7748 36.6966 23.9308 37.1166 24.2548 37.4166 cv
24.5788 37.7166 25.0228 37.8606 25.5868 37.8606 cv
26.1388 37.8606 26.5828 37.7166 26.9068 37.4046 cv
27.2308 37.1046 27.3988 36.6966 27.3988 36.1686 cv
27.3988 35.6406 27.2308 35.2326 26.9188 34.9326 cv
26.5948 34.6326 26.1508 34.4766 25.5868 34.4766 cv
24.3988 33.9726 mo
23.8948 33.8526 23.4988 33.6126 23.2108 33.2646 cv
22.9228 32.9166 22.7908 32.4966 22.7908 31.9926 cv
22.7908 31.2966 23.0308 30.7446 23.5348 30.3366 cv
24.0268 29.9286 24.7108 29.7246 25.5868 29.7246 cv
26.4508 29.7246 27.1348 29.9286 27.6388 30.3366 cv
28.1308 30.7446 28.3828 31.2966 28.3828 31.9926 cv
28.3828 32.4966 28.2388 32.9166 27.9508 33.2646 cv
27.6628 33.6126 27.2788 33.8526 26.7748 33.9726 cv
27.3388 34.1046 27.7828 34.3686 28.1068 34.7526 cv
28.4188 35.1366 28.5868 35.6166 28.5868 36.1686 cv
28.5868 37.0206 28.3228 37.6686 27.8068 38.1126 cv
27.2788 38.5686 26.5468 38.7846 25.5868 38.7846 cv
24.6148 38.7846 23.8708 38.5686 23.3548 38.1126 cv
22.8388 37.6686 22.5868 37.0206 22.5868 36.1686 cv
22.5868 35.6166 22.7428 35.1366 23.0668 34.7526 cv
23.3788 34.3686 23.8228 34.1046 24.3988 33.9726 cv
23.9668 32.1006 mo
23.9668 32.5566 24.0988 32.9166 24.3868 33.1686 cv
24.6748 33.4206 25.0708 33.5406 25.5868 33.5406 cv
26.0908 33.5406 26.4868 33.4206 26.7748 33.1686 cv
27.0628 32.9166 27.2068 32.5566 27.2068 32.1006 cv
27.2068 31.6446 27.0628 31.2966 26.7748 31.0446 cv
26.4868 30.7926 26.0908 30.6606 25.5868 30.6606 cv
25.0708 30.6606 24.6748 30.7926 24.3868 31.0446 cv
24.0988 31.2966 23.9668 31.6446 23.9668 32.1006 cv
f
gsave
36.4252 133.612 mo
196.85 133.612 li
196.85 9.17972 li
36.4252 9.17972 li
36.4252 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
36.4251 9.17969 mo
196.85 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
36.4251 9.17969 mo
32.9251 9.17969 li
f
36.4251 9.17969 mo
32.9251 9.17969 li
@
4.17877 12.7462 mo
6.11077 12.7462 li
6.11077 6.07416 li
4.01077 6.4942 li
4.01077 5.41418 li
6.09877 4.9942 li
7.28677 4.9942 li
7.28677 12.7462 li
9.21877 12.7462 li
9.21877 13.7422 li
4.17877 13.7422 li
4.17877 12.7462 li
f
11.6068 12.2542 mo
12.8428 12.2542 li
12.8428 13.7422 li
11.6068 13.7422 li
11.6068 12.2542 li
f
17.9548 5.77417 mo
17.3428 5.77417 16.8868 6.07416 16.5748 6.67419 cv
16.2628 7.27417 16.1188 8.17419 16.1188 9.37418 cv
16.1188 10.5742 16.2628 11.4742 16.5748 12.0742 cv
16.8868 12.6742 17.3428 12.9742 17.9548 12.9742 cv
18.5668 12.9742 19.0228 12.6742 19.3348 12.0742 cv
19.6348 11.4742 19.7908 10.5742 19.7908 9.37418 cv
19.7908 8.17419 19.6348 7.27417 19.3348 6.67419 cv
19.0228 6.07416 18.5668 5.77417 17.9548 5.77417 cv
17.9548 4.8382 mo
18.9268 4.8382 19.6708 5.23419 20.1988 6.0022 cv
20.7148 6.78217 20.9788 7.91016 20.9788 9.37418 cv
20.9788 10.8502 20.7148 11.9782 20.1988 12.7462 cv
19.6708 13.5142 18.9268 13.8982 17.9548 13.8982 cv
16.9708 13.8982 16.2148 13.5142 15.6988 12.7462 cv
15.1828 11.9782 14.9308 10.8502 14.9308 9.37418 cv
14.9308 7.91016 15.1828 6.78217 15.6988 6.0022 cv
16.2148 5.23419 16.9708 4.8382 17.9548 4.8382 cv
f
25.5868 5.77417 mo
24.9748 5.77417 24.5188 6.07416 24.2068 6.67419 cv
23.8948 7.27417 23.7508 8.17419 23.7508 9.37418 cv
23.7508 10.5742 23.8948 11.4742 24.2068 12.0742 cv
24.5188 12.6742 24.9748 12.9742 25.5868 12.9742 cv
26.1988 12.9742 26.6548 12.6742 26.9668 12.0742 cv
27.2668 11.4742 27.4228 10.5742 27.4228 9.37418 cv
27.4228 8.17419 27.2668 7.27417 26.9668 6.67419 cv
26.6548 6.07416 26.1988 5.77417 25.5868 5.77417 cv
25.5868 4.8382 mo
26.5588 4.8382 27.3028 5.23419 27.8308 6.0022 cv
28.3468 6.78217 28.6108 7.91016 28.6108 9.37418 cv
28.6108 10.8502 28.3468 11.9782 27.8308 12.7462 cv
27.3028 13.5142 26.5588 13.8982 25.5868 13.8982 cv
24.6028 13.8982 23.8468 13.5142 23.3308 12.7462 cv
22.8148 11.9782 22.5628 10.8502 22.5628 9.37418 cv
22.5628 7.91016 22.8148 6.78217 23.3308 6.0022 cv
23.8468 5.23419 24.6028 4.8382 25.5868 4.8382 cv
f
1 lw
2 lc
43.7171 97.6757 mo
48.4217 34.315 li
57.8308 23.9249 li
76.649 26.3638 li
114.285 34.7878 li
189.558 28.4791 li
.930816 .793027 0 0 cmyk
@
gsave
41.7171 99.6757 mo
45.7172 99.6757 li
45.7172 95.6758 li
41.7171 95.6758 li
41.7171 99.6757 li
clp
43.7171 96.1757 mo
42.2171 99.1757 li
45.2171 99.1757 li
cp
f
0 lc
0 lj
43.7171 96.1757 mo
42.2171 99.1757 li
45.2171 99.1757 li
cp
@
grestore
gsave
46.4218 36.315 mo
50.4217 36.315 li
50.4217 32.3149 li
46.4218 32.3149 li
46.4218 36.315 li
clp
48.4217 32.815 mo
46.9217 35.815 li
49.9217 35.815 li
cp
f
0 lc
0 lj
48.4217 32.815 mo
46.9217 35.815 li
49.9217 35.815 li
cp
@
grestore
gsave
55.8308 25.9249 mo
59.8309 25.9249 li
59.8309 21.9248 li
55.8308 21.9248 li
55.8308 25.9249 li
clp
57.8308 22.4249 mo
56.3308 25.4249 li
59.3308 25.4249 li
cp
f
0 lc
0 lj
57.8308 22.4249 mo
56.3308 25.4249 li
59.3308 25.4249 li
cp
@
grestore
gsave
74.649 28.3637 mo
78.649 28.3637 li
78.649 24.3638 li
74.649 24.3638 li
74.649 28.3637 li
clp
76.649 24.8638 mo
75.149 27.8638 li
78.149 27.8638 li
cp
f
0 lc
0 lj
76.649 24.8638 mo
75.149 27.8638 li
78.149 27.8638 li
cp
@
grestore
gsave
112.285 36.7877 mo
116.285 36.7877 li
116.285 32.7878 li
112.285 32.7878 li
112.285 36.7877 li
clp
114.285 33.2878 mo
112.785 36.2878 li
115.785 36.2878 li
cp
f
0 lc
0 lj
114.285 33.2878 mo
112.785 36.2878 li
115.785 36.2878 li
cp
@
grestore
gsave
187.558 30.479 mo
191.558 30.479 li
191.558 26.4792 li
187.558 26.4792 li
187.558 30.479 li
clp
189.558 26.9791 mo
188.058 29.9791 li
191.058 29.9791 li
cp
f
0 lc
0 lj
189.558 26.9791 mo
188.058 29.9791 li
191.058 29.9791 li
cp
@
grestore
43.7171 106.249 mo
48.4217 43.9833 li
57.8308 30.134 li
76.649 27.1104 li
114.285 40.3375 li
189.558 34.0661 li
1 /0 /CSD get_res sepcs
.498039 sep
@
gsave
41.7171 108.249 mo
45.7172 108.249 li
45.7172 104.249 li
41.7171 104.249 li
41.7171 108.249 li
clp
43.7171 107.749 mo
44.115 107.749 44.4965 107.591 44.7778 107.31 cv
45.0591 107.028 45.2171 106.647 45.2171 106.249 cv
45.2171 105.851 45.0591 105.47 44.7778 105.188 cv
44.4965 104.907 44.115 104.749 43.7171 104.749 cv
43.3193 104.749 42.9378 104.907 42.6565 105.188 cv
42.3752 105.47 42.2171 105.851 42.2171 106.249 cv
42.2171 106.647 42.3752 107.028 42.6565 107.31 cv
42.9378 107.591 43.3193 107.749 43.7171 107.749 cv
cp
f
0 lc
43.7171 107.749 mo
44.115 107.749 44.4965 107.591 44.7778 107.31 cv
45.0591 107.028 45.2171 106.647 45.2171 106.249 cv
45.2171 105.851 45.0591 105.47 44.7778 105.188 cv
44.4965 104.907 44.115 104.749 43.7171 104.749 cv
43.3193 104.749 42.9378 104.907 42.6565 105.188 cv
42.3752 105.47 42.2171 105.851 42.2171 106.249 cv
42.2171 106.647 42.3752 107.028 42.6565 107.31 cv
42.9378 107.591 43.3193 107.749 43.7171 107.749 cv
cp
@
grestore
gsave
46.4218 45.9833 mo
50.4217 45.9833 li
50.4217 41.9832 li
46.4218 41.9832 li
46.4218 45.9833 li
clp
48.4217 45.4833 mo
48.8195 45.4833 49.2011 45.3252 49.4824 45.0439 cv
49.7637 44.7626 49.9217 44.3811 49.9217 43.9833 cv
49.9217 43.5855 49.7637 43.2039 49.4824 42.9226 cv
49.2011 42.6413 48.8195 42.4833 48.4217 42.4833 cv
48.0239 42.4833 47.6424 42.6413 47.3611 42.9226 cv
47.0798 43.2039 46.9217 43.5855 46.9217 43.9833 cv
46.9217 44.3811 47.0798 44.7626 47.3611 45.0439 cv
47.6424 45.3252 48.0239 45.4833 48.4217 45.4833 cv
cp
f
0 lc
48.4217 45.4833 mo
48.8195 45.4833 49.2011 45.3252 49.4824 45.0439 cv
49.7637 44.7626 49.9217 44.3811 49.9217 43.9833 cv
49.9217 43.5855 49.7637 43.2039 49.4824 42.9226 cv
49.2011 42.6413 48.8195 42.4833 48.4217 42.4833 cv
48.0239 42.4833 47.6424 42.6413 47.3611 42.9226 cv
47.0798 43.2039 46.9217 43.5855 46.9217 43.9833 cv
46.9217 44.3811 47.0798 44.7626 47.3611 45.0439 cv
47.6424 45.3252 48.0239 45.4833 48.4217 45.4833 cv
cp
@
grestore
gsave
55.8308 32.1339 mo
59.8309 32.1339 li
59.8309 28.1341 li
55.8308 28.1341 li
55.8308 32.1339 li
clp
57.8308 31.634 mo
58.2287 31.634 58.6102 31.4759 58.8915 31.1946 cv
59.1728 30.9133 59.3308 30.5318 59.3308 30.134 cv
59.3308 29.7362 59.1728 29.3546 58.8915 29.0733 cv
58.6102 28.792 58.2287 28.634 57.8308 28.634 cv
57.433 28.634 57.0515 28.792 56.7702 29.0733 cv
56.4889 29.3546 56.3308 29.7362 56.3308 30.134 cv
56.3308 30.5318 56.4889 30.9133 56.7702 31.1946 cv
57.0515 31.4759 57.433 31.634 57.8308 31.634 cv
cp
f
0 lc
57.8308 31.634 mo
58.2287 31.634 58.6102 31.4759 58.8915 31.1946 cv
59.1728 30.9133 59.3308 30.5318 59.3308 30.134 cv
59.3308 29.7362 59.1728 29.3546 58.8915 29.0733 cv
58.6102 28.792 58.2287 28.634 57.8308 28.634 cv
57.433 28.634 57.0515 28.792 56.7702 29.0733 cv
56.4889 29.3546 56.3308 29.7362 56.3308 30.134 cv
56.3308 30.5318 56.4889 30.9133 56.7702 31.1946 cv
57.0515 31.4759 57.433 31.634 57.8308 31.634 cv
cp
@
grestore
gsave
74.649 29.1103 mo
78.649 29.1103 li
78.649 25.1104 li
74.649 25.1104 li
74.649 29.1103 li
clp
76.649 28.6104 mo
77.0469 28.6104 77.4284 28.4523 77.7097 28.1711 cv
77.991 27.8897 78.149 27.5082 78.149 27.1104 cv
78.149 26.7126 77.991 26.331 77.7097 26.0497 cv
77.4284 25.7684 77.0469 25.6104 76.649 25.6104 cv
76.2512 25.6104 75.8697 25.7684 75.5884 26.0497 cv
75.3071 26.331 75.149 26.7126 75.149 27.1104 cv
75.149 27.5082 75.3071 27.8897 75.5884 28.1711 cv
75.8697 28.4523 76.2512 28.6104 76.649 28.6104 cv
cp
f
0 lc
76.649 28.6104 mo
77.0469 28.6104 77.4284 28.4523 77.7097 28.1711 cv
77.991 27.8897 78.149 27.5082 78.149 27.1104 cv
78.149 26.7126 77.991 26.331 77.7097 26.0497 cv
77.4284 25.7684 77.0469 25.6104 76.649 25.6104 cv
76.2512 25.6104 75.8697 25.7684 75.5884 26.0497 cv
75.3071 26.331 75.149 26.7126 75.149 27.1104 cv
75.149 27.5082 75.3071 27.8897 75.5884 28.1711 cv
75.8697 28.4523 76.2512 28.6104 76.649 28.6104 cv
cp
@
grestore
gsave
112.285 42.3375 mo
116.285 42.3375 li
116.285 38.3376 li
112.285 38.3376 li
112.285 42.3375 li
clp
114.285 41.8375 mo
114.683 41.8375 115.065 41.6794 115.346 41.3982 cv
115.627 41.1169 115.785 40.7353 115.785 40.3375 cv
115.785 39.9397 115.627 39.5581 115.346 39.2768 cv
115.065 38.9955 114.683 38.8375 114.285 38.8375 cv
113.888 38.8375 113.506 38.9955 113.225 39.2768 cv
112.943 39.5581 112.785 39.9397 112.785 40.3375 cv
112.785 40.7353 112.943 41.1169 113.225 41.3982 cv
113.506 41.6794 113.888 41.8375 114.285 41.8375 cv
cp
f
0 lc
114.285 41.8375 mo
114.683 41.8375 115.065 41.6794 115.346 41.3982 cv
115.627 41.1169 115.785 40.7353 115.785 40.3375 cv
115.785 39.9397 115.627 39.5581 115.346 39.2768 cv
115.065 38.9955 114.683 38.8375 114.285 38.8375 cv
113.888 38.8375 113.506 38.9955 113.225 39.2768 cv
112.943 39.5581 112.785 39.9397 112.785 40.3375 cv
112.785 40.7353 112.943 41.1169 113.225 41.3982 cv
113.506 41.6794 113.888 41.8375 114.285 41.8375 cv
cp
@
grestore
gsave
187.558 36.0661 mo
191.558 36.0661 li
191.558 32.066 li
187.558 32.066 li
187.558 36.0661 li
clp
189.558 35.5661 mo
189.956 35.5661 190.338 35.408 190.619 35.1267 cv
190.9 34.8454 191.058 34.4639 191.058 34.0661 cv
191.058 33.6683 190.9 33.2867 190.619 33.0054 cv
190.338 32.7241 189.956 32.5661 189.558 32.5661 cv
189.16 32.5661 188.779 32.7241 188.497 33.0054 cv
188.216 33.2867 188.058 33.6683 188.058 34.0661 cv
188.058 34.4639 188.216 34.8454 188.497 35.1267 cv
188.779 35.408 189.16 35.5661 189.558 35.5661 cv
cp
f
0 lc
189.558 35.5661 mo
189.956 35.5661 190.338 35.408 190.619 35.1267 cv
190.9 34.8454 191.058 34.4639 191.058 34.0661 cv
191.058 33.6683 190.9 33.2867 190.619 33.0054 cv
190.338 32.7241 189.956 32.5661 189.558 32.5661 cv
189.16 32.5661 188.779 32.7241 188.497 33.0054 cv
188.216 33.2867 188.058 33.6683 188.058 34.0661 cv
188.058 34.4639 188.216 34.8454 188.497 35.1267 cv
188.779 35.408 189.16 35.5661 189.558 35.5661 cv
cp
@
grestore
43.7171 109.435 mo
48.4217 44.4064 li
57.8308 31.0673 li
76.649 26.9361 li
114.285 47.6167 li
189.558 34.6758 li
.926818 .245335 1 .155612 cmyk
@
gsave
41.7906 111.148 mo
45.6437 111.148 li
45.6437 107.435 li
41.7906 107.435 li
41.7906 111.148 li
clp
43.7171 107.935 mo
43.3804 108.971 li
42.2906 108.971 li
43.1722 109.612 li
42.8355 110.648 li
43.7171 110.008 li
44.5988 110.648 li
44.2621 109.612 li
45.1437 108.971 li
44.0539 108.971 li
cp
f
0 lc
2 lj
43.7171 107.935 mo
43.3804 108.971 li
42.2906 108.971 li
43.1722 109.612 li
42.8355 110.648 li
43.7171 110.008 li
44.5988 110.648 li
44.2621 109.612 li
45.1437 108.971 li
44.0539 108.971 li
cp
@
grestore
gsave
46.4951 46.1198 mo
50.3484 46.1198 li
50.3484 42.4063 li
46.4951 42.4063 li
46.4951 46.1198 li
clp
48.4217 42.9064 mo
48.085 43.9428 li
46.9952 43.9428 li
47.8768 44.5834 li
47.5401 45.6199 li
48.4217 44.9793 li
49.3034 45.6199 li
48.9667 44.5834 li
49.8483 43.9428 li
48.7585 43.9428 li
cp
f
0 lc
2 lj
48.4217 42.9064 mo
48.085 43.9428 li
46.9952 43.9428 li
47.8768 44.5834 li
47.5401 45.6199 li
48.4217 44.9793 li
49.3034 45.6199 li
48.9667 44.5834 li
49.8483 43.9428 li
48.7585 43.9428 li
cp
@
grestore
gsave
55.9043 32.7807 mo
59.7574 32.7807 li
59.7574 29.0672 li
55.9043 29.0672 li
55.9043 32.7807 li
clp
57.8308 29.5673 mo
57.4941 30.6038 li
56.4043 30.6038 li
57.2859 31.2444 li
56.9492 32.2808 li
57.8308 31.6402 li
58.7125 32.2808 li
58.3758 31.2444 li
59.2574 30.6038 li
58.1676 30.6038 li
cp
f
0 lc
2 lj
57.8308 29.5673 mo
57.4941 30.6038 li
56.4043 30.6038 li
57.2859 31.2444 li
56.9492 32.2808 li
57.8308 31.6402 li
58.7125 32.2808 li
58.3758 31.2444 li
59.2574 30.6038 li
58.1676 30.6038 li
cp
@
grestore
gsave
74.7225 28.6497 mo
78.5755 28.6497 li
78.5755 24.9362 li
74.7225 24.9362 li
74.7225 28.6497 li
clp
76.649 25.4361 mo
76.3123 26.4725 li
75.2225 26.4725 li
76.1041 27.1131 li
75.7674 28.1496 li
76.649 27.509 li
77.5307 28.1496 li
77.194 27.1131 li
78.0756 26.4725 li
76.9858 26.4725 li
cp
f
0 lc
2 lj
76.649 25.4361 mo
76.3123 26.4725 li
75.2225 26.4725 li
76.1041 27.1131 li
75.7674 28.1496 li
76.649 27.509 li
77.5307 28.1496 li
77.194 27.1131 li
78.0756 26.4725 li
76.9858 26.4725 li
cp
@
grestore
gsave
112.359 49.3302 mo
116.212 49.3302 li
116.212 45.6167 li
112.359 45.6167 li
112.359 49.3302 li
clp
114.285 46.1167 mo
113.949 47.1531 li
112.859 47.1531 li
113.74 47.7937 li
113.404 48.8302 li
114.285 48.1896 li
115.167 48.8302 li
114.83 47.7937 li
115.712 47.1531 li
114.622 47.1531 li
cp
f
0 lc
2 lj
114.285 46.1167 mo
113.949 47.1531 li
112.859 47.1531 li
113.74 47.7937 li
113.404 48.8302 li
114.285 48.1896 li
115.167 48.8302 li
114.83 47.7937 li
115.712 47.1531 li
114.622 47.1531 li
cp
@
grestore
gsave
187.631 36.3892 mo
191.485 36.3892 li
191.485 32.6757 li
187.631 32.6757 li
187.631 36.3892 li
clp
189.558 33.1758 mo
189.221 34.2122 li
188.132 34.2122 li
189.013 34.8528 li
188.676 35.8893 li
189.558 35.2487 li
190.44 35.8893 li
190.103 34.8528 li
190.985 34.2122 li
189.895 34.2122 li
cp
f
0 lc
2 lj
189.558 33.1758 mo
189.221 34.2122 li
188.132 34.2122 li
189.013 34.8528 li
188.676 35.8893 li
189.558 35.2487 li
190.44 35.8893 li
190.103 34.8528 li
190.985 34.2122 li
189.895 34.2122 li
cp
@
grestore
43.7171 95.0876 mo
48.4217 33.5062 li
57.8308 23.1534 li
76.649 20.9385 li
114.285 28.84 li
189.558 24.7835 li
0 1 1 0 cmyk
@
gsave
41.7171 97.0876 mo
45.7172 97.0876 li
45.7172 93.0875 li
41.7171 93.0875 li
41.7171 97.0876 li
clp
42.2171 96.5876 mo
45.2171 96.5876 li
45.2171 93.5876 li
42.2171 93.5876 li
cp
f
0 lc
0 lj
42.2171 96.5876 mo
45.2171 96.5876 li
45.2171 93.5876 li
42.2171 93.5876 li
cp
@
grestore
gsave
46.4218 35.5061 mo
50.4217 35.5061 li
50.4217 31.5062 li
46.4218 31.5062 li
46.4218 35.5061 li
clp
46.9217 35.0062 mo
49.9217 35.0062 li
49.9217 32.0062 li
46.9217 32.0062 li
cp
f
0 lc
0 lj
46.9217 35.0062 mo
49.9217 35.0062 li
49.9217 32.0062 li
46.9217 32.0062 li
cp
@
grestore
gsave
55.8308 25.1533 mo
59.8309 25.1533 li
59.8309 21.1534 li
55.8308 21.1534 li
55.8308 25.1533 li
clp
56.3308 24.6534 mo
59.3308 24.6534 li
59.3308 21.6534 li
56.3308 21.6534 li
cp
f
0 lc
0 lj
56.3308 24.6534 mo
59.3308 24.6534 li
59.3308 21.6534 li
56.3308 21.6534 li
cp
@
grestore
gsave
74.649 22.9386 mo
78.649 22.9386 li
78.649 18.9385 li
74.649 18.9385 li
74.649 22.9386 li
clp
75.149 22.4385 mo
78.149 22.4385 li
78.149 19.4385 li
75.149 19.4385 li
cp
f
0 lc
0 lj
75.149 22.4385 mo
78.149 22.4385 li
78.149 19.4385 li
75.149 19.4385 li
cp
@
grestore
gsave
112.285 30.84 mo
116.285 30.84 li
116.285 26.8399 li
112.285 26.8399 li
112.285 30.84 li
clp
112.785 30.34 mo
115.785 30.34 li
115.785 27.34 li
112.785 27.34 li
cp
f
0 lc
0 lj
112.785 30.34 mo
115.785 30.34 li
115.785 27.34 li
112.785 27.34 li
cp
@
grestore
gsave
187.558 26.7834 mo
191.558 26.7834 li
191.558 22.7835 li
187.558 22.7835 li
187.558 26.7834 li
clp
188.058 26.2835 mo
191.058 26.2835 li
191.058 23.2835 li
188.058 23.2835 li
cp
f
0 lc
0 lj
188.058 26.2835 mo
191.058 26.2835 li
191.058 23.2835 li
188.058 23.2835 li
cp
@
grestore
.8 lw
0 lj
36.4251 133.612 mo
36.4251 9.17969 li
1 /0 /CSD get_res sepcs
1 sep
@
196.85 133.612 mo
196.85 9.17969 li
@
36.4251 133.612 mo
196.85 133.612 li
@
36.4251 9.17969 mo
196.85 9.17969 li
@
244.978 133.612 mo
405.403 133.612 li
405.403 9.17969 li
244.978 9.17969 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
0 lc
1 lj
[1 1.65 ] 0 dsh
252.27 133.612 mo
252.27 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
252.27 133.612 mo
252.27 137.112 li
1 /0 /CSD get_res sepcs
1 sep
f
0 lc
1 lj
252.27 133.612 mo
252.27 137.112 li
@
243.113 148.741 mo
247.241 148.741 li
247.241 149.737 li
241.685 149.737 li
241.685 148.741 li
242.129 148.285 242.741 147.661 243.521 146.869 cv
244.289 146.089 244.781 145.585 244.985 145.357 cv
245.369 144.937 245.633 144.577 245.777 144.277 cv
245.921 143.989 246.005 143.689 246.005 143.401 cv
246.005 142.945 245.837 142.561 245.513 142.273 cv
245.189 141.985 244.769 141.829 244.241 141.829 cv
243.869 141.829 243.473 141.901 243.065 142.021 cv
242.657 142.153 242.213 142.345 241.745 142.609 cv
241.745 141.409 li
242.225 141.217 242.669 141.073 243.077 140.977 cv
243.485 140.881 243.869 140.833 244.217 140.833 cv
245.117 140.833 245.837 141.061 246.377 141.517 cv
246.917 141.973 247.193 142.573 247.193 143.329 cv
247.193 143.689 247.121 144.037 246.989 144.349 cv
246.857 144.673 246.617 145.057 246.257 145.489 cv
246.161 145.609 245.849 145.933 245.321 146.473 cv
244.793 147.013 244.061 147.769 243.113 148.741 cv
f
250.745 148.741 mo
254.873 148.741 li
254.873 149.737 li
249.317 149.737 li
249.317 148.741 li
249.761 148.285 250.373 147.661 251.153 146.869 cv
251.921 146.089 252.413 145.585 252.617 145.357 cv
253.001 144.937 253.265 144.577 253.409 144.277 cv
253.553 143.989 253.637 143.689 253.637 143.401 cv
253.637 142.945 253.469 142.561 253.145 142.273 cv
252.821 141.985 252.401 141.829 251.873 141.829 cv
251.501 141.829 251.105 141.901 250.697 142.021 cv
250.289 142.153 249.845 142.345 249.377 142.609 cv
249.377 141.409 li
249.857 141.217 250.301 141.073 250.709 140.977 cv
251.117 140.881 251.501 140.833 251.849 140.833 cv
252.749 140.833 253.469 141.061 254.009 141.517 cv
254.549 141.973 254.825 142.573 254.825 143.329 cv
254.825 143.689 254.753 144.037 254.621 144.349 cv
254.489 144.673 254.249 145.057 253.889 145.489 cv
253.793 145.609 253.481 145.933 252.953 146.473 cv
252.425 147.013 251.693 147.769 250.745 148.741 cv
f
257.369 140.989 mo
262.013 140.989 li
262.013 141.985 li
258.449 141.985 li
258.449 144.133 li
258.617 144.073 258.797 144.025 258.965 144.001 cv
259.133 143.977 259.313 143.953 259.481 143.953 cv
260.453 143.953 261.221 144.229 261.797 144.757 cv
262.373 145.297 262.661 146.017 262.661 146.929 cv
262.661 147.877 262.361 148.609 261.773 149.125 cv
261.185 149.641 260.357 149.893 259.301 149.893 cv
258.929 149.893 258.557 149.857 258.173 149.809 cv
257.789 149.749 257.405 149.665 256.997 149.533 cv
256.997 148.345 li
257.345 148.537 257.705 148.681 258.089 148.777 cv
258.461 148.873 258.857 148.909 259.277 148.909 cv
259.949 148.909 260.489 148.741 260.885 148.381 cv
261.269 148.021 261.473 147.541 261.473 146.929 cv
261.473 146.329 261.269 145.849 260.885 145.489 cv
260.489 145.129 259.949 144.949 259.277 144.949 cv
258.965 144.949 258.641 144.985 258.329 145.057 cv
258.017 145.129 257.693 145.237 257.369 145.381 cv
257.369 140.989 li
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
290.08 133.612 mo
290.08 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
290.08 133.612 mo
290.08 137.112 li
f
290.08 133.612 mo
290.08 137.112 li
@
283.155 142.021 mo
280.167 146.689 li
283.155 146.689 li
283.155 142.021 li
282.843 140.989 mo
284.331 140.989 li
284.331 146.689 li
285.579 146.689 li
285.579 147.673 li
284.331 147.673 li
284.331 149.737 li
283.155 149.737 li
283.155 147.673 li
279.207 147.673 li
279.207 146.533 li
282.843 140.989 li
f
290.067 141.769 mo
289.455 141.769 288.999 142.069 288.687 142.669 cv
288.375 143.269 288.231 144.169 288.231 145.369 cv
288.231 146.569 288.375 147.469 288.687 148.069 cv
288.999 148.669 289.455 148.969 290.067 148.969 cv
290.679 148.969 291.135 148.669 291.447 148.069 cv
291.747 147.469 291.903 146.569 291.903 145.369 cv
291.903 144.169 291.747 143.269 291.447 142.669 cv
291.135 142.069 290.679 141.769 290.067 141.769 cv
290.067 140.833 mo
291.039 140.833 291.783 141.229 292.311 141.997 cv
292.827 142.777 293.091 143.905 293.091 145.369 cv
293.091 146.845 292.827 147.973 292.311 148.741 cv
291.783 149.509 291.039 149.893 290.067 149.893 cv
289.083 149.893 288.327 149.509 287.811 148.741 cv
287.295 147.973 287.043 146.845 287.043 145.369 cv
287.043 143.905 287.295 142.777 287.811 141.997 cv
288.327 141.229 289.083 140.833 290.067 140.833 cv
f
297.699 141.769 mo
297.087 141.769 296.631 142.069 296.319 142.669 cv
296.007 143.269 295.863 144.169 295.863 145.369 cv
295.863 146.569 296.007 147.469 296.319 148.069 cv
296.631 148.669 297.087 148.969 297.699 148.969 cv
298.311 148.969 298.767 148.669 299.079 148.069 cv
299.379 147.469 299.535 146.569 299.535 145.369 cv
299.535 144.169 299.379 143.269 299.079 142.669 cv
298.767 142.069 298.311 141.769 297.699 141.769 cv
297.699 140.833 mo
298.671 140.833 299.415 141.229 299.943 141.997 cv
300.459 142.777 300.723 143.905 300.723 145.369 cv
300.723 146.845 300.459 147.973 299.943 148.741 cv
299.415 149.509 298.671 149.893 297.699 149.893 cv
296.715 149.893 295.959 149.509 295.443 148.741 cv
294.927 147.973 294.675 146.845 294.675 145.369 cv
294.675 143.905 294.927 142.777 295.443 141.997 cv
295.959 141.229 296.715 140.833 297.699 140.833 cv
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
338.694 133.612 mo
338.694 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
338.694 133.612 mo
338.694 137.112 li
f
338.694 133.612 mo
338.694 137.112 li
@
331.193 144.889 mo
330.665 144.889 330.245 145.081 329.933 145.441 cv
329.621 145.801 329.465 146.305 329.465 146.929 cv
329.465 147.565 329.621 148.069 329.933 148.429 cv
330.245 148.789 330.665 148.969 331.193 148.969 cv
331.721 148.969 332.141 148.789 332.453 148.429 cv
332.765 148.069 332.921 147.565 332.921 146.929 cv
332.921 146.305 332.765 145.801 332.453 145.441 cv
332.141 145.081 331.721 144.889 331.193 144.889 cv
333.545 141.181 mo
333.545 142.261 li
333.245 142.117 332.945 142.009 332.645 141.937 cv
332.333 141.865 332.033 141.829 331.745 141.829 cv
330.953 141.829 330.353 142.093 329.945 142.621 cv
329.537 143.149 329.297 143.953 329.249 145.009 cv
329.477 144.673 329.765 144.409 330.113 144.229 cv
330.461 144.049 330.845 143.953 331.265 143.953 cv
332.141 143.953 332.837 144.229 333.341 144.757 cv
333.845 145.285 334.109 146.017 334.109 146.929 cv
334.109 147.829 333.833 148.549 333.305 149.089 cv
332.777 149.629 332.069 149.893 331.193 149.893 cv
330.185 149.893 329.405 149.509 328.877 148.741 cv
328.337 147.973 328.073 146.845 328.073 145.369 cv
328.073 143.989 328.397 142.885 329.057 142.069 cv
329.705 141.253 330.593 140.833 331.697 140.833 cv
331.985 140.833 332.285 140.869 332.597 140.917 cv
332.897 140.977 333.209 141.061 333.545 141.181 cv
f
337.169 148.741 mo
341.297 148.741 li
341.297 149.737 li
335.741 149.737 li
335.741 148.741 li
336.185 148.285 336.797 147.661 337.577 146.869 cv
338.345 146.089 338.837 145.585 339.041 145.357 cv
339.425 144.937 339.689 144.577 339.833 144.277 cv
339.977 143.989 340.061 143.689 340.061 143.401 cv
340.061 142.945 339.893 142.561 339.569 142.273 cv
339.245 141.985 338.825 141.829 338.297 141.829 cv
337.925 141.829 337.529 141.901 337.121 142.021 cv
336.713 142.153 336.269 142.345 335.801 142.609 cv
335.801 141.409 li
336.281 141.217 336.725 141.073 337.133 140.977 cv
337.541 140.881 337.925 140.833 338.273 140.833 cv
339.173 140.833 339.893 141.061 340.433 141.517 cv
340.973 141.973 341.249 142.573 341.249 143.329 cv
341.249 143.689 341.177 144.037 341.045 144.349 cv
340.913 144.673 340.673 145.057 340.313 145.489 cv
340.217 145.609 339.905 145.933 339.377 146.473 cv
338.849 147.013 338.117 147.769 337.169 148.741 cv
f
343.793 140.989 mo
348.437 140.989 li
348.437 141.985 li
344.873 141.985 li
344.873 144.133 li
345.041 144.073 345.221 144.025 345.389 144.001 cv
345.557 143.977 345.737 143.953 345.905 143.953 cv
346.877 143.953 347.645 144.229 348.221 144.757 cv
348.797 145.297 349.085 146.017 349.085 146.929 cv
349.085 147.877 348.785 148.609 348.197 149.125 cv
347.609 149.641 346.781 149.893 345.725 149.893 cv
345.353 149.893 344.981 149.857 344.597 149.809 cv
344.213 149.749 343.829 149.665 343.421 149.533 cv
343.421 148.345 li
343.769 148.537 344.129 148.681 344.513 148.777 cv
344.885 148.873 345.281 148.909 345.701 148.909 cv
346.373 148.909 346.913 148.741 347.309 148.381 cv
347.693 148.021 347.897 147.541 347.897 146.929 cv
347.897 146.329 347.693 145.849 347.309 145.489 cv
346.913 145.129 346.373 144.949 345.701 144.949 cv
345.389 144.949 345.065 144.985 344.753 145.057 cv
344.441 145.129 344.117 145.237 343.793 145.381 cv
343.793 140.989 li
f
grestore
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
398.111 133.612 mo
398.111 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
398.111 133.612 mo
398.111 137.112 li
f
398.111 133.612 mo
398.111 137.112 li
@
387.97 149.557 mo
387.97 148.477 li
388.258 148.621 388.558 148.729 388.87 148.801 cv
389.17 148.873 389.47 148.909 389.77 148.909 cv
390.538 148.909 391.138 148.657 391.546 148.129 cv
391.954 147.601 392.194 146.809 392.266 145.729 cv
392.026 146.065 391.738 146.329 391.402 146.509 cv
391.054 146.689 390.67 146.773 390.25 146.773 cv
389.362 146.773 388.666 146.509 388.162 145.981 cv
387.658 145.453 387.406 144.733 387.406 143.809 cv
387.406 142.921 387.67 142.201 388.198 141.649 cv
388.726 141.109 389.434 140.833 390.322 140.833 cv
391.33 140.833 392.11 141.229 392.638 141.997 cv
393.166 142.777 393.442 143.905 393.442 145.369 cv
393.442 146.761 393.106 147.853 392.458 148.669 cv
391.798 149.485 390.922 149.893 389.818 149.893 cv
389.518 149.893 389.218 149.857 388.918 149.809 cv
388.606 149.761 388.294 149.677 387.97 149.557 cv
390.322 145.849 mo
390.85 145.849 391.27 145.669 391.582 145.309 cv
391.894 144.949 392.05 144.445 392.05 143.809 cv
392.05 143.185 391.894 142.681 391.582 142.321 cv
391.27 141.961 390.85 141.769 390.322 141.769 cv
389.794 141.769 389.374 141.961 389.062 142.321 cv
388.75 142.681 388.594 143.185 388.594 143.809 cv
388.594 144.445 388.75 144.949 389.062 145.309 cv
389.374 145.669 389.794 145.849 390.322 145.849 cv
f
398.098 141.769 mo
397.486 141.769 397.03 142.069 396.718 142.669 cv
396.406 143.269 396.262 144.169 396.262 145.369 cv
396.262 146.569 396.406 147.469 396.718 148.069 cv
397.03 148.669 397.486 148.969 398.098 148.969 cv
398.71 148.969 399.166 148.669 399.478 148.069 cv
399.778 147.469 399.934 146.569 399.934 145.369 cv
399.934 144.169 399.778 143.269 399.478 142.669 cv
399.166 142.069 398.71 141.769 398.098 141.769 cv
398.098 140.833 mo
399.07 140.833 399.814 141.229 400.342 141.997 cv
400.858 142.777 401.122 143.905 401.122 145.369 cv
401.122 146.845 400.858 147.973 400.342 148.741 cv
399.814 149.509 399.07 149.893 398.098 149.893 cv
397.114 149.893 396.358 149.509 395.842 148.741 cv
395.326 147.973 395.074 146.845 395.074 145.369 cv
395.074 143.905 395.326 142.777 395.842 141.997 cv
396.358 141.229 397.114 140.833 398.098 140.833 cv
f
405.73 141.769 mo
405.118 141.769 404.662 142.069 404.35 142.669 cv
404.038 143.269 403.894 144.169 403.894 145.369 cv
403.894 146.569 404.038 147.469 404.35 148.069 cv
404.662 148.669 405.118 148.969 405.73 148.969 cv
406.342 148.969 406.798 148.669 407.11 148.069 cv
407.41 147.469 407.566 146.569 407.566 145.369 cv
407.566 144.169 407.41 143.269 407.11 142.669 cv
406.798 142.069 406.342 141.769 405.73 141.769 cv
405.73 140.833 mo
406.702 140.833 407.446 141.229 407.974 141.997 cv
408.49 142.777 408.754 143.905 408.754 145.369 cv
408.754 146.845 408.49 147.973 407.974 148.741 cv
407.446 149.509 406.702 149.893 405.73 149.893 cv
404.746 149.893 403.99 149.509 403.474 148.741 cv
402.958 147.973 402.706 146.845 402.706 145.369 cv
402.706 143.905 402.958 142.777 403.474 141.997 cv
403.99 141.229 404.746 140.833 405.73 140.833 cv
f
262.113 156.254 mo
261.585 157.166 261.201 158.054 260.949 158.93 cv
260.685 159.806 260.565 160.694 260.565 161.594 cv
260.565 162.506 260.685 163.394 260.949 164.27 cv
261.201 165.158 261.585 166.034 262.113 166.934 cv
261.177 166.934 li
260.589 166.01 260.145 165.122 259.857 164.234 cv
259.569 163.346 259.425 162.47 259.425 161.594 cv
259.425 160.73 259.569 159.854 259.857 158.966 cv
260.145 158.078 260.577 157.178 261.177 156.254 cv
262.113 156.254 li
f
268.917 162.086 mo
268.917 161.294 268.749 160.682 268.425 160.226 cv
268.089 159.77 267.645 159.542 267.081 159.542 cv
266.505 159.542 266.061 159.77 265.737 160.226 cv
265.401 160.682 265.245 161.294 265.245 162.086 cv
265.245 162.878 265.401 163.502 265.737 163.958 cv
266.061 164.414 266.505 164.63 267.081 164.63 cv
267.645 164.63 268.089 164.414 268.425 163.958 cv
268.749 163.502 268.917 162.878 268.917 162.086 cv
265.245 159.794 mo
265.461 159.41 265.749 159.122 266.097 158.93 cv
266.445 158.738 266.865 158.642 267.345 158.642 cv
268.137 158.642 268.785 158.966 269.289 159.59 cv
269.781 160.226 270.033 161.054 270.033 162.086 cv
270.033 163.118 269.781 163.958 269.289 164.582 cv
268.785 165.206 268.137 165.518 267.345 165.518 cv
266.865 165.518 266.445 165.422 266.097 165.242 cv
265.749 165.062 265.461 164.774 265.245 164.378 cv
265.245 165.362 li
264.165 165.362 li
264.165 156.242 li
265.245 156.242 li
265.245 159.794 li
f
271.653 156.254 mo
272.589 156.254 li
273.165 157.178 273.609 158.078 273.897 158.966 cv
274.185 159.854 274.341 160.73 274.341 161.594 cv
274.341 162.47 274.185 163.346 273.897 164.234 cv
273.609 165.122 273.165 166.01 272.589 166.934 cv
271.653 166.934 li
272.169 166.034 272.553 165.158 272.817 164.27 cv
273.069 163.394 273.201 162.506 273.201 161.594 cv
273.201 160.694 273.069 159.806 272.817 158.93 cv
272.553 158.054 272.169 157.166 271.653 156.254 cv
f
276.549 156.614 mo
278.145 156.614 li
282.021 163.934 li
282.021 156.614 li
283.173 156.614 li
283.173 165.362 li
281.577 165.362 li
277.701 158.042 li
277.701 165.362 li
276.549 165.362 li
276.549 156.614 li
f
285.369 162.77 mo
285.369 158.798 li
286.449 158.798 li
286.449 162.734 li
286.449 163.358 286.569 163.814 286.809 164.126 cv
287.049 164.438 287.409 164.594 287.901 164.594 cv
288.477 164.594 288.945 164.414 289.281 164.042 cv
289.617 163.67 289.785 163.166 289.785 162.518 cv
289.785 158.798 li
290.865 158.798 li
290.865 165.362 li
289.785 165.362 li
289.785 164.354 li
289.521 164.762 289.209 165.05 288.873 165.242 cv
288.525 165.422 288.129 165.518 287.673 165.518 cv
286.917 165.518 286.341 165.29 285.957 164.822 cv
285.561 164.366 285.369 163.682 285.369 162.77 cv
288.081 158.642 mo
288.081 158.642 li
f
298.197 160.058 mo
298.461 159.578 298.785 159.23 299.157 158.99 cv
299.529 158.762 299.973 158.642 300.489 158.642 cv
301.161 158.642 301.689 158.882 302.061 159.362 cv
302.433 159.842 302.625 160.526 302.625 161.402 cv
302.625 165.362 li
301.545 165.362 li
301.545 161.438 li
301.545 160.814 301.425 160.346 301.209 160.034 cv
300.981 159.734 300.645 159.578 300.189 159.578 cv
299.625 159.578 299.181 159.77 298.857 160.142 cv
298.533 160.514 298.377 161.018 298.377 161.654 cv
298.377 165.362 li
297.297 165.362 li
297.297 161.438 li
297.297 160.814 297.177 160.346 296.961 160.034 cv
296.733 159.734 296.385 159.578 295.929 159.578 cv
295.377 159.578 294.933 159.77 294.609 160.142 cv
294.285 160.514 294.129 161.018 294.129 161.654 cv
294.129 165.362 li
293.049 165.362 li
293.049 158.798 li
294.129 158.798 li
294.129 159.818 li
294.369 159.422 294.669 159.122 295.017 158.93 cv
295.353 158.738 295.761 158.642 296.241 158.642 cv
296.721 158.642 297.117 158.762 297.453 159.002 cv
297.789 159.242 298.029 159.602 298.197 160.058 cv
f
309.489 162.086 mo
309.489 161.294 309.321 160.682 308.997 160.226 cv
308.661 159.77 308.217 159.542 307.653 159.542 cv
307.077 159.542 306.633 159.77 306.309 160.226 cv
305.973 160.682 305.817 161.294 305.817 162.086 cv
305.817 162.878 305.973 163.502 306.309 163.958 cv
306.633 164.414 307.077 164.63 307.653 164.63 cv
308.217 164.63 308.661 164.414 308.997 163.958 cv
309.321 163.502 309.489 162.878 309.489 162.086 cv
305.817 159.794 mo
306.033 159.41 306.321 159.122 306.669 158.93 cv
307.017 158.738 307.437 158.642 307.917 158.642 cv
308.709 158.642 309.357 158.966 309.861 159.59 cv
310.353 160.226 310.605 161.054 310.605 162.086 cv
310.605 163.118 310.353 163.958 309.861 164.582 cv
309.357 165.206 308.709 165.518 307.917 165.518 cv
307.437 165.518 307.017 165.422 306.669 165.242 cv
306.321 165.062 306.033 164.774 305.817 164.378 cv
305.817 165.362 li
304.737 165.362 li
304.737 156.242 li
305.817 156.242 li
305.817 159.794 li
f
318.009 161.81 mo
318.009 162.338 li
313.053 162.338 li
313.101 163.082 313.317 163.658 313.725 164.042 cv
314.121 164.426 314.673 164.618 315.393 164.618 cv
315.801 164.618 316.209 164.57 316.593 164.474 cv
316.977 164.378 317.373 164.222 317.757 164.006 cv
317.757 165.026 li
317.373 165.194 316.977 165.326 316.569 165.398 cv
316.161 165.47 315.741 165.518 315.333 165.518 cv
314.277 165.518 313.449 165.218 312.837 164.618 cv
312.225 164.018 311.925 163.19 311.925 162.146 cv
311.925 161.078 312.213 160.226 312.789 159.59 cv
313.365 158.966 314.157 158.642 315.141 158.642 cv
316.029 158.642 316.725 158.93 317.241 159.494 cv
317.745 160.07 318.009 160.838 318.009 161.81 cv
316.929 161.498 mo
316.917 160.91 316.749 160.442 316.437 160.082 cv
316.113 159.734 315.681 159.554 315.153 159.554 cv
314.553 159.554 314.073 159.734 313.713 160.07 cv
313.353 160.406 313.137 160.886 313.089 161.498 cv
316.929 161.498 li
f
323.577 159.806 mo
323.457 159.734 323.325 159.686 323.181 159.65 cv
323.037 159.626 322.881 159.602 322.713 159.602 cv
322.101 159.602 321.633 159.806 321.309 160.202 cv
320.973 160.598 320.817 161.162 320.817 161.906 cv
320.817 165.362 li
319.737 165.362 li
319.737 158.798 li
320.817 158.798 li
320.817 159.818 li
321.033 159.422 321.333 159.122 321.693 158.93 cv
322.053 158.738 322.497 158.642 323.025 158.642 cv
323.097 158.642 323.181 158.654 323.277 158.654 cv
323.361 158.666 323.457 158.678 323.577 158.702 cv
323.577 159.806 li
f
331.065 159.554 mo
330.489 159.554 330.033 159.782 329.697 160.238 cv
329.361 160.694 329.193 161.306 329.193 162.086 cv
329.193 162.878 329.349 163.49 329.685 163.946 cv
330.021 164.402 330.477 164.618 331.065 164.618 cv
331.641 164.618 332.097 164.402 332.433 163.946 cv
332.769 163.49 332.937 162.878 332.937 162.086 cv
332.937 161.318 332.769 160.694 332.433 160.238 cv
332.097 159.782 331.641 159.554 331.065 159.554 cv
331.065 158.642 mo
332.001 158.642 332.733 158.954 333.273 159.554 cv
333.801 160.166 334.077 161.006 334.077 162.086 cv
334.077 163.166 333.801 164.006 333.273 164.606 cv
332.733 165.218 332.001 165.518 331.065 165.518 cv
330.117 165.518 329.373 165.218 328.845 164.606 cv
328.317 164.006 328.053 163.166 328.053 162.086 cv
328.053 161.006 328.317 160.166 328.845 159.554 cv
329.373 158.954 330.117 158.642 331.065 158.642 cv
f
339.189 156.242 mo
339.189 157.142 li
338.157 157.142 li
337.773 157.142 337.497 157.226 337.353 157.382 cv
337.197 157.538 337.125 157.814 337.125 158.222 cv
337.125 158.798 li
338.901 158.798 li
338.901 159.638 li
337.125 159.638 li
337.125 165.362 li
336.045 165.362 li
336.045 159.638 li
335.013 159.638 li
335.013 158.798 li
336.045 158.798 li
336.045 158.342 li
336.045 157.622 336.213 157.082 336.549 156.746 cv
336.885 156.41 337.425 156.242 338.169 156.242 cv
339.189 156.242 li
f
348.621 162.086 mo
348.621 161.294 348.453 160.682 348.129 160.226 cv
347.793 159.77 347.349 159.542 346.785 159.542 cv
346.209 159.542 345.765 159.77 345.441 160.226 cv
345.105 160.682 344.949 161.294 344.949 162.086 cv
344.949 162.878 345.105 163.502 345.441 163.958 cv
345.765 164.414 346.209 164.63 346.785 164.63 cv
347.349 164.63 347.793 164.414 348.129 163.958 cv
348.453 163.502 348.621 162.878 348.621 162.086 cv
344.949 159.794 mo
345.165 159.41 345.453 159.122 345.801 158.93 cv
346.149 158.738 346.569 158.642 347.049 158.642 cv
347.841 158.642 348.489 158.966 348.993 159.59 cv
349.485 160.226 349.737 161.054 349.737 162.086 cv
349.737 163.118 349.485 163.958 348.993 164.582 cv
348.489 165.206 347.841 165.518 347.049 165.518 cv
346.569 165.518 346.149 165.422 345.801 165.242 cv
345.453 165.062 345.165 164.774 344.949 164.378 cv
344.949 165.362 li
343.869 165.362 li
343.869 156.242 li
344.949 156.242 li
344.949 159.794 li
f
354.261 165.962 mo
353.949 166.73 353.649 167.246 353.361 167.486 cv
353.073 167.726 352.689 167.846 352.209 167.846 cv
351.345 167.846 li
351.345 166.946 li
351.981 166.946 li
352.269 166.946 352.497 166.874 352.665 166.73 cv
352.833 166.586 353.013 166.262 353.217 165.734 cv
353.409 165.254 li
350.757 158.798 li
351.897 158.798 li
353.949 163.934 li
356.001 158.798 li
357.141 158.798 li
354.261 165.962 li
f
359.697 156.938 mo
359.697 158.798 li
361.917 158.798 li
361.917 159.638 li
359.697 159.638 li
359.697 163.202 li
359.697 163.742 359.769 164.09 359.913 164.234 cv
360.057 164.39 360.357 164.462 360.813 164.462 cv
361.917 164.462 li
361.917 165.362 li
360.813 165.362 li
359.973 165.362 359.397 165.206 359.085 164.894 cv
358.773 164.582 358.617 164.018 358.617 163.202 cv
358.617 159.638 li
357.825 159.638 li
357.825 158.798 li
358.617 158.798 li
358.617 156.938 li
359.697 156.938 li
f
368.949 161.81 mo
368.949 162.338 li
363.993 162.338 li
364.041 163.082 364.257 163.658 364.665 164.042 cv
365.061 164.426 365.613 164.618 366.333 164.618 cv
366.741 164.618 367.149 164.57 367.533 164.474 cv
367.917 164.378 368.313 164.222 368.697 164.006 cv
368.697 165.026 li
368.313 165.194 367.917 165.326 367.509 165.398 cv
367.101 165.47 366.681 165.518 366.273 165.518 cv
365.217 165.518 364.389 165.218 363.777 164.618 cv
363.165 164.018 362.865 163.19 362.865 162.146 cv
362.865 161.078 363.153 160.226 363.729 159.59 cv
364.305 158.966 365.097 158.642 366.081 158.642 cv
366.969 158.642 367.665 158.93 368.181 159.494 cv
368.685 160.07 368.949 160.838 368.949 161.81 cv
367.869 161.498 mo
367.857 160.91 367.689 160.442 367.377 160.082 cv
367.053 159.734 366.621 159.554 366.093 159.554 cv
365.493 159.554 365.013 159.734 364.653 160.07 cv
364.293 160.406 364.077 160.886 364.029 161.498 cv
367.869 161.498 li
f
374.901 158.99 mo
374.901 160.01 li
374.589 159.866 374.277 159.746 373.953 159.662 cv
373.617 159.59 373.281 159.542 372.933 159.542 cv
372.393 159.542 371.985 159.626 371.721 159.794 cv
371.457 159.962 371.325 160.202 371.325 160.526 cv
371.325 160.778 371.421 160.97 371.613 161.114 cv
371.805 161.258 372.189 161.402 372.765 161.522 cv
373.137 161.606 li
373.905 161.774 374.445 162.014 374.769 162.302 cv
375.081 162.602 375.249 163.022 375.249 163.55 cv
375.249 164.162 375.009 164.642 374.529 164.99 cv
374.049 165.35 373.377 165.518 372.537 165.518 cv
372.177 165.518 371.817 165.482 371.433 165.422 cv
371.049 165.362 370.653 165.266 370.233 165.122 cv
370.233 164.006 li
370.629 164.222 371.025 164.378 371.409 164.474 cv
371.793 164.582 372.177 164.63 372.561 164.63 cv
373.065 164.63 373.461 164.546 373.737 164.378 cv
374.001 164.21 374.145 163.958 374.145 163.634 cv
374.145 163.346 374.037 163.118 373.845 162.962 cv
373.653 162.806 373.221 162.65 372.549 162.506 cv
372.177 162.422 li
371.505 162.278 371.013 162.062 370.725 161.774 cv
370.425 161.486 370.281 161.09 370.281 160.574 cv
370.281 159.962 370.497 159.482 370.929 159.146 cv
371.361 158.81 371.985 158.642 372.801 158.642 cv
373.197 158.642 373.569 158.678 373.929 158.738 cv
374.277 158.798 374.601 158.882 374.901 158.99 cv
f
377.241 163.874 mo
378.477 163.874 li
378.477 165.362 li
377.241 165.362 li
377.241 163.874 li
377.241 159.158 mo
378.477 159.158 li
378.477 160.646 li
377.241 160.646 li
377.241 159.158 li
f
386.061 161.186 mo
386.061 164.39 li
387.957 164.39 li
388.593 164.39 389.061 164.258 389.373 163.994 cv
389.673 163.73 389.829 163.334 389.829 162.782 cv
389.829 162.242 389.673 161.846 389.373 161.582 cv
389.061 161.318 388.593 161.186 387.957 161.186 cv
386.061 161.186 li
386.061 157.586 mo
386.061 160.226 li
387.813 160.226 li
388.389 160.226 388.809 160.118 389.097 159.902 cv
389.385 159.686 389.529 159.362 389.529 158.906 cv
389.529 158.474 389.385 158.138 389.097 157.922 cv
388.809 157.706 388.389 157.586 387.813 157.586 cv
386.061 157.586 li
384.873 156.614 mo
387.897 156.614 li
388.797 156.614 389.493 156.806 389.985 157.178 cv
390.465 157.562 390.717 158.09 390.717 158.774 cv
390.717 159.314 390.585 159.746 390.333 160.058 cv
390.081 160.37 389.721 160.574 389.241 160.646 cv
389.817 160.778 390.273 161.042 390.597 161.438 cv
390.909 161.834 391.077 162.326 391.077 162.914 cv
391.077 163.706 390.801 164.306 390.273 164.726 cv
389.745 165.158 388.989 165.362 388.017 165.362 cv
384.873 165.362 li
384.873 156.614 li
f
grestore
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 133.612 mo
405.403 133.612 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
244.978 133.612 mo
241.478 133.612 li
f
244.978 133.612 mo
241.478 133.612 li
@
215.059 130.206 mo
214.447 130.206 213.991 130.506 213.679 131.106 cv
213.367 131.706 213.223 132.606 213.223 133.806 cv
213.223 135.006 213.367 135.906 213.679 136.506 cv
213.991 137.106 214.447 137.406 215.059 137.406 cv
215.671 137.406 216.127 137.106 216.439 136.506 cv
216.739 135.906 216.895 135.006 216.895 133.806 cv
216.895 132.606 216.739 131.706 216.439 131.106 cv
216.127 130.506 215.671 130.206 215.059 130.206 cv
215.059 129.27 mo
216.031 129.27 216.775 129.666 217.303 130.434 cv
217.819 131.214 218.083 132.342 218.083 133.806 cv
218.083 135.282 217.819 136.41 217.303 137.178 cv
216.775 137.946 216.031 138.33 215.059 138.33 cv
214.075 138.33 213.319 137.946 212.803 137.178 cv
212.287 136.41 212.035 135.282 212.035 133.806 cv
212.035 132.342 212.287 131.214 212.803 130.434 cv
213.319 129.666 214.075 129.27 215.059 129.27 cv
f
220.159 136.686 mo
221.395 136.686 li
221.395 138.174 li
220.159 138.174 li
220.159 136.686 li
f
226.507 134.022 mo
225.943 134.022 225.499 134.178 225.175 134.478 cv
224.851 134.778 224.695 135.186 224.695 135.714 cv
224.695 136.242 224.851 136.662 225.175 136.962 cv
225.499 137.262 225.943 137.406 226.507 137.406 cv
227.059 137.406 227.503 137.262 227.827 136.95 cv
228.151 136.65 228.319 136.242 228.319 135.714 cv
228.319 135.186 228.151 134.778 227.839 134.478 cv
227.515 134.178 227.071 134.022 226.507 134.022 cv
225.319 133.518 mo
224.815 133.398 224.419 133.158 224.131 132.81 cv
223.843 132.462 223.711 132.042 223.711 131.538 cv
223.711 130.842 223.951 130.29 224.455 129.882 cv
224.947 129.474 225.631 129.27 226.507 129.27 cv
227.371 129.27 228.055 129.474 228.559 129.882 cv
229.051 130.29 229.303 130.842 229.303 131.538 cv
229.303 132.042 229.159 132.462 228.871 132.81 cv
228.583 133.158 228.199 133.398 227.695 133.518 cv
228.259 133.65 228.703 133.914 229.027 134.298 cv
229.339 134.682 229.507 135.162 229.507 135.714 cv
229.507 136.566 229.243 137.214 228.727 137.658 cv
228.199 138.114 227.467 138.33 226.507 138.33 cv
225.535 138.33 224.791 138.114 224.275 137.658 cv
223.759 137.214 223.507 136.566 223.507 135.714 cv
223.507 135.162 223.663 134.682 223.987 134.298 cv
224.299 133.914 224.743 133.65 225.319 133.518 cv
224.887 131.646 mo
224.887 132.102 225.019 132.462 225.307 132.714 cv
225.595 132.966 225.991 133.086 226.507 133.086 cv
227.011 133.086 227.407 132.966 227.695 132.714 cv
227.983 132.462 228.127 132.102 228.127 131.646 cv
228.127 131.19 227.983 130.842 227.695 130.59 cv
227.407 130.338 227.011 130.206 226.507 130.206 cv
225.991 130.206 225.595 130.338 225.307 130.59 cv
225.019 130.842 224.887 131.19 224.887 131.646 cv
f
234.283 133.326 mo
233.755 133.326 233.335 133.518 233.023 133.878 cv
232.711 134.238 232.555 134.742 232.555 135.366 cv
232.555 136.002 232.711 136.506 233.023 136.866 cv
233.335 137.226 233.755 137.406 234.283 137.406 cv
234.811 137.406 235.231 137.226 235.543 136.866 cv
235.855 136.506 236.011 136.002 236.011 135.366 cv
236.011 134.742 235.855 134.238 235.543 133.878 cv
235.231 133.518 234.811 133.326 234.283 133.326 cv
236.635 129.618 mo
236.635 130.698 li
236.335 130.554 236.035 130.446 235.735 130.374 cv
235.423 130.302 235.123 130.266 234.835 130.266 cv
234.043 130.266 233.443 130.53 233.035 131.058 cv
232.627 131.586 232.387 132.39 232.339 133.446 cv
232.567 133.11 232.855 132.846 233.203 132.666 cv
233.551 132.486 233.935 132.39 234.355 132.39 cv
235.231 132.39 235.927 132.666 236.431 133.194 cv
236.935 133.722 237.199 134.454 237.199 135.366 cv
237.199 136.266 236.923 136.986 236.395 137.526 cv
235.867 138.066 235.159 138.33 234.283 138.33 cv
233.275 138.33 232.495 137.946 231.967 137.178 cv
231.427 136.41 231.163 135.282 231.163 133.806 cv
231.163 132.426 231.487 131.322 232.147 130.506 cv
232.795 129.69 233.683 129.27 234.787 129.27 cv
235.075 129.27 235.375 129.306 235.687 129.354 cv
235.987 129.414 236.299 129.498 236.635 129.618 cv
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 115.836 mo
405.403 115.836 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
244.978 115.836 mo
241.478 115.836 li
f
244.978 115.836 mo
241.478 115.836 li
@
215.059 112.43 mo
214.447 112.43 213.991 112.73 213.679 113.33 cv
213.367 113.93 213.223 114.83 213.223 116.03 cv
213.223 117.23 213.367 118.13 213.679 118.73 cv
213.991 119.33 214.447 119.63 215.059 119.63 cv
215.671 119.63 216.127 119.33 216.439 118.73 cv
216.739 118.13 216.895 117.23 216.895 116.03 cv
216.895 114.83 216.739 113.93 216.439 113.33 cv
216.127 112.73 215.671 112.43 215.059 112.43 cv
215.059 111.494 mo
216.031 111.494 216.775 111.89 217.303 112.658 cv
217.819 113.438 218.083 114.566 218.083 116.03 cv
218.083 117.506 217.819 118.634 217.303 119.402 cv
216.775 120.17 216.031 120.554 215.059 120.554 cv
214.075 120.554 213.319 120.17 212.803 119.402 cv
212.287 118.634 212.035 117.506 212.035 116.03 cv
212.035 114.566 212.287 113.438 212.803 112.658 cv
213.319 111.89 214.075 111.494 215.059 111.494 cv
f
220.159 118.91 mo
221.395 118.91 li
221.395 120.398 li
220.159 120.398 li
220.159 118.91 li
f
226.507 116.246 mo
225.943 116.246 225.499 116.402 225.175 116.702 cv
224.851 117.002 224.695 117.41 224.695 117.938 cv
224.695 118.466 224.851 118.886 225.175 119.186 cv
225.499 119.486 225.943 119.63 226.507 119.63 cv
227.059 119.63 227.503 119.486 227.827 119.174 cv
228.151 118.874 228.319 118.466 228.319 117.938 cv
228.319 117.41 228.151 117.002 227.839 116.702 cv
227.515 116.402 227.071 116.246 226.507 116.246 cv
225.319 115.742 mo
224.815 115.622 224.419 115.382 224.131 115.034 cv
223.843 114.686 223.711 114.266 223.711 113.762 cv
223.711 113.066 223.951 112.514 224.455 112.106 cv
224.947 111.698 225.631 111.494 226.507 111.494 cv
227.371 111.494 228.055 111.698 228.559 112.106 cv
229.051 112.514 229.303 113.066 229.303 113.762 cv
229.303 114.266 229.159 114.686 228.871 115.034 cv
228.583 115.382 228.199 115.622 227.695 115.742 cv
228.259 115.874 228.703 116.138 229.027 116.522 cv
229.339 116.906 229.507 117.386 229.507 117.938 cv
229.507 118.79 229.243 119.438 228.727 119.882 cv
228.199 120.338 227.467 120.554 226.507 120.554 cv
225.535 120.554 224.791 120.338 224.275 119.882 cv
223.759 119.438 223.507 118.79 223.507 117.938 cv
223.507 117.386 223.663 116.906 223.987 116.522 cv
224.299 116.138 224.743 115.874 225.319 115.742 cv
224.887 113.87 mo
224.887 114.326 225.019 114.686 225.307 114.938 cv
225.595 115.19 225.991 115.31 226.507 115.31 cv
227.011 115.31 227.407 115.19 227.695 114.938 cv
227.983 114.686 228.127 114.326 228.127 113.87 cv
228.127 113.414 227.983 113.066 227.695 112.814 cv
227.407 112.562 227.011 112.43 226.507 112.43 cv
225.991 112.43 225.595 112.562 225.307 112.814 cv
225.019 113.066 224.887 113.414 224.887 113.87 cv
f
234.139 116.246 mo
233.575 116.246 233.131 116.402 232.807 116.702 cv
232.483 117.002 232.327 117.41 232.327 117.938 cv
232.327 118.466 232.483 118.886 232.807 119.186 cv
233.131 119.486 233.575 119.63 234.139 119.63 cv
234.691 119.63 235.135 119.486 235.459 119.174 cv
235.783 118.874 235.951 118.466 235.951 117.938 cv
235.951 117.41 235.783 117.002 235.471 116.702 cv
235.147 116.402 234.703 116.246 234.139 116.246 cv
232.951 115.742 mo
232.447 115.622 232.051 115.382 231.763 115.034 cv
231.475 114.686 231.343 114.266 231.343 113.762 cv
231.343 113.066 231.583 112.514 232.087 112.106 cv
232.579 111.698 233.263 111.494 234.139 111.494 cv
235.003 111.494 235.687 111.698 236.191 112.106 cv
236.683 112.514 236.935 113.066 236.935 113.762 cv
236.935 114.266 236.791 114.686 236.503 115.034 cv
236.215 115.382 235.831 115.622 235.327 115.742 cv
235.891 115.874 236.335 116.138 236.659 116.522 cv
236.971 116.906 237.139 117.386 237.139 117.938 cv
237.139 118.79 236.875 119.438 236.359 119.882 cv
235.831 120.338 235.099 120.554 234.139 120.554 cv
233.167 120.554 232.423 120.338 231.907 119.882 cv
231.391 119.438 231.139 118.79 231.139 117.938 cv
231.139 117.386 231.295 116.906 231.619 116.522 cv
231.931 116.138 232.375 115.874 232.951 115.742 cv
232.519 113.87 mo
232.519 114.326 232.651 114.686 232.939 114.938 cv
233.227 115.19 233.623 115.31 234.139 115.31 cv
234.643 115.31 235.039 115.19 235.327 114.938 cv
235.615 114.686 235.759 114.326 235.759 113.87 cv
235.759 113.414 235.615 113.066 235.327 112.814 cv
235.039 112.562 234.643 112.43 234.139 112.43 cv
233.623 112.43 233.227 112.562 232.939 112.814 cv
232.651 113.066 232.519 113.414 232.519 113.87 cv
f
grestore
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 98.0597 mo
405.403 98.0597 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
244.978 98.0597 mo
241.478 98.0597 li
f
244.978 98.0597 mo
241.478 98.0597 li
@
215.059 94.6542 mo
214.447 94.6542 213.991 94.9542 213.679 95.5542 cv
213.367 96.1542 213.223 97.0542 213.223 98.2542 cv
213.223 99.4542 213.367 100.354 213.679 100.954 cv
213.991 101.554 214.447 101.854 215.059 101.854 cv
215.671 101.854 216.127 101.554 216.439 100.954 cv
216.739 100.354 216.895 99.4542 216.895 98.2542 cv
216.895 97.0542 216.739 96.1542 216.439 95.5542 cv
216.127 94.9542 215.671 94.6542 215.059 94.6542 cv
215.059 93.7182 mo
216.031 93.7182 216.775 94.1142 217.303 94.8822 cv
217.819 95.6622 218.083 96.7902 218.083 98.2542 cv
218.083 99.7302 217.819 100.858 217.303 101.626 cv
216.775 102.394 216.031 102.778 215.059 102.778 cv
214.075 102.778 213.319 102.394 212.803 101.626 cv
212.287 100.858 212.035 99.7302 212.035 98.2542 cv
212.035 96.7902 212.287 95.6622 212.803 94.8822 cv
213.319 94.1142 214.075 93.7182 215.059 93.7182 cv
f
220.159 101.134 mo
221.395 101.134 li
221.395 102.622 li
220.159 102.622 li
220.159 101.134 li
f
224.011 102.442 mo
224.011 101.362 li
224.299 101.506 224.599 101.614 224.911 101.686 cv
225.211 101.758 225.511 101.794 225.811 101.794 cv
226.579 101.794 227.179 101.542 227.587 101.014 cv
227.995 100.486 228.235 99.6942 228.307 98.6142 cv
228.067 98.9502 227.779 99.2142 227.443 99.3942 cv
227.095 99.5742 226.711 99.6582 226.291 99.6582 cv
225.403 99.6582 224.707 99.3942 224.203 98.8662 cv
223.699 98.3382 223.447 97.6182 223.447 96.6942 cv
223.447 95.8062 223.711 95.0862 224.239 94.5342 cv
224.767 93.9942 225.475 93.7182 226.363 93.7182 cv
227.371 93.7182 228.151 94.1142 228.679 94.8822 cv
229.207 95.6622 229.483 96.7902 229.483 98.2542 cv
229.483 99.6462 229.147 100.738 228.499 101.554 cv
227.839 102.37 226.963 102.778 225.859 102.778 cv
225.559 102.778 225.259 102.742 224.959 102.694 cv
224.647 102.646 224.335 102.562 224.011 102.442 cv
226.363 98.7342 mo
226.891 98.7342 227.311 98.5542 227.623 98.1942 cv
227.935 97.8342 228.091 97.3302 228.091 96.6942 cv
228.091 96.0702 227.935 95.5662 227.623 95.2062 cv
227.311 94.8462 226.891 94.6542 226.363 94.6542 cv
225.835 94.6542 225.415 94.8462 225.103 95.2062 cv
224.791 95.5662 224.635 96.0702 224.635 96.6942 cv
224.635 97.3302 224.791 97.8342 225.103 98.1942 cv
225.415 98.5542 225.835 98.7342 226.363 98.7342 cv
f
234.139 94.6542 mo
233.527 94.6542 233.071 94.9542 232.759 95.5542 cv
232.447 96.1542 232.303 97.0542 232.303 98.2542 cv
232.303 99.4542 232.447 100.354 232.759 100.954 cv
233.071 101.554 233.527 101.854 234.139 101.854 cv
234.751 101.854 235.207 101.554 235.519 100.954 cv
235.819 100.354 235.975 99.4542 235.975 98.2542 cv
235.975 97.0542 235.819 96.1542 235.519 95.5542 cv
235.207 94.9542 234.751 94.6542 234.139 94.6542 cv
234.139 93.7182 mo
235.111 93.7182 235.855 94.1142 236.383 94.8822 cv
236.899 95.6622 237.163 96.7902 237.163 98.2542 cv
237.163 99.7302 236.899 100.858 236.383 101.626 cv
235.855 102.394 235.111 102.778 234.139 102.778 cv
233.155 102.778 232.399 102.394 231.883 101.626 cv
231.367 100.858 231.115 99.7302 231.115 98.2542 cv
231.115 96.7902 231.367 95.6622 231.883 94.8822 cv
232.399 94.1142 233.155 93.7182 234.139 93.7182 cv
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 80.2837 mo
405.403 80.2837 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
244.978 80.2837 mo
241.478 80.2837 li
f
244.978 80.2837 mo
241.478 80.2837 li
@
215.059 76.8782 mo
214.447 76.8782 213.991 77.1782 213.679 77.7782 cv
213.367 78.3782 213.223 79.2782 213.223 80.4782 cv
213.223 81.6782 213.367 82.5782 213.679 83.1782 cv
213.991 83.7782 214.447 84.0782 215.059 84.0782 cv
215.671 84.0782 216.127 83.7782 216.439 83.1782 cv
216.739 82.5782 216.895 81.6782 216.895 80.4782 cv
216.895 79.2782 216.739 78.3782 216.439 77.7782 cv
216.127 77.1782 215.671 76.8782 215.059 76.8782 cv
215.059 75.9422 mo
216.031 75.9422 216.775 76.3382 217.303 77.1062 cv
217.819 77.8862 218.083 79.0142 218.083 80.4782 cv
218.083 81.9542 217.819 83.0822 217.303 83.8502 cv
216.775 84.6182 216.031 85.0022 215.059 85.0022 cv
214.075 85.0022 213.319 84.6182 212.803 83.8502 cv
212.287 83.0822 212.035 81.9542 212.035 80.4782 cv
212.035 79.0142 212.287 77.8862 212.803 77.1062 cv
213.319 76.3382 214.075 75.9422 215.059 75.9422 cv
f
220.159 83.3582 mo
221.395 83.3582 li
221.395 84.8462 li
220.159 84.8462 li
220.159 83.3582 li
f
224.011 84.6662 mo
224.011 83.5862 li
224.299 83.7302 224.599 83.8382 224.911 83.9102 cv
225.211 83.9822 225.511 84.0182 225.811 84.0182 cv
226.579 84.0182 227.179 83.7662 227.587 83.2382 cv
227.995 82.7102 228.235 81.9182 228.307 80.8382 cv
228.067 81.1742 227.779 81.4382 227.443 81.6182 cv
227.095 81.7982 226.711 81.8822 226.291 81.8822 cv
225.403 81.8822 224.707 81.6182 224.203 81.0902 cv
223.699 80.5622 223.447 79.8422 223.447 78.9182 cv
223.447 78.0302 223.711 77.3102 224.239 76.7582 cv
224.767 76.2182 225.475 75.9422 226.363 75.9422 cv
227.371 75.9422 228.151 76.3382 228.679 77.1062 cv
229.207 77.8862 229.483 79.0142 229.483 80.4782 cv
229.483 81.8702 229.147 82.9622 228.499 83.7782 cv
227.839 84.5942 226.963 85.0022 225.859 85.0022 cv
225.559 85.0022 225.259 84.9662 224.959 84.9182 cv
224.647 84.8702 224.335 84.7862 224.011 84.6662 cv
226.363 80.9582 mo
226.891 80.9582 227.311 80.7782 227.623 80.4182 cv
227.935 80.0582 228.091 79.5542 228.091 78.9182 cv
228.091 78.2942 227.935 77.7902 227.623 77.4302 cv
227.311 77.0702 226.891 76.8782 226.363 76.8782 cv
225.835 76.8782 225.415 77.0702 225.103 77.4302 cv
224.791 77.7902 224.635 78.2942 224.635 78.9182 cv
224.635 79.5542 224.791 80.0582 225.103 80.4182 cv
225.415 80.7782 225.835 80.9582 226.363 80.9582 cv
f
232.627 83.8502 mo
236.755 83.8502 li
236.755 84.8462 li
231.199 84.8462 li
231.199 83.8502 li
231.643 83.3942 232.255 82.7702 233.035 81.9782 cv
233.803 81.1982 234.295 80.6942 234.499 80.4662 cv
234.883 80.0462 235.147 79.6862 235.291 79.3862 cv
235.435 79.0982 235.519 78.7982 235.519 78.5102 cv
235.519 78.0542 235.351 77.6702 235.027 77.3822 cv
234.703 77.0942 234.283 76.9382 233.755 76.9382 cv
233.383 76.9382 232.987 77.0102 232.579 77.1302 cv
232.171 77.2622 231.727 77.4542 231.259 77.7182 cv
231.259 76.5182 li
231.739 76.3262 232.183 76.1822 232.591 76.0862 cv
232.999 75.9902 233.383 75.9422 233.731 75.9422 cv
234.631 75.9422 235.351 76.1702 235.891 76.6262 cv
236.431 77.0822 236.707 77.6822 236.707 78.4382 cv
236.707 78.7982 236.635 79.1462 236.503 79.4582 cv
236.371 79.7822 236.131 80.1662 235.771 80.5982 cv
235.675 80.7182 235.363 81.0422 234.835 81.5822 cv
234.307 82.1222 233.575 82.8782 232.627 83.8502 cv
f
grestore
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 62.5077 mo
405.403 62.5077 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
244.978 62.5077 mo
241.478 62.5077 li
f
244.978 62.5077 mo
241.478 62.5077 li
@
215.059 59.1022 mo
214.447 59.1022 213.991 59.4022 213.679 60.0022 cv
213.367 60.6022 213.223 61.5022 213.223 62.7022 cv
213.223 63.9022 213.367 64.8022 213.679 65.4022 cv
213.991 66.0022 214.447 66.3022 215.059 66.3022 cv
215.671 66.3022 216.127 66.0022 216.439 65.4022 cv
216.739 64.8022 216.895 63.9022 216.895 62.7022 cv
216.895 61.5022 216.739 60.6022 216.439 60.0022 cv
216.127 59.4022 215.671 59.1022 215.059 59.1022 cv
215.059 58.1662 mo
216.031 58.1662 216.775 58.5622 217.303 59.3302 cv
217.819 60.1102 218.083 61.2382 218.083 62.7022 cv
218.083 64.1782 217.819 65.3062 217.303 66.0742 cv
216.775 66.8422 216.031 67.2262 215.059 67.2262 cv
214.075 67.2262 213.319 66.8422 212.803 66.0742 cv
212.287 65.3062 212.035 64.1782 212.035 62.7022 cv
212.035 61.2382 212.287 60.1102 212.803 59.3302 cv
213.319 58.5622 214.075 58.1662 215.059 58.1662 cv
f
220.159 65.5822 mo
221.395 65.5822 li
221.395 67.0702 li
220.159 67.0702 li
220.159 65.5822 li
f
224.011 66.8902 mo
224.011 65.8102 li
224.299 65.9542 224.599 66.0622 224.911 66.1342 cv
225.211 66.2062 225.511 66.2422 225.811 66.2422 cv
226.579 66.2422 227.179 65.9902 227.587 65.4622 cv
227.995 64.9342 228.235 64.1422 228.307 63.0622 cv
228.067 63.3982 227.779 63.6622 227.443 63.8422 cv
227.095 64.0222 226.711 64.1062 226.291 64.1062 cv
225.403 64.1062 224.707 63.8422 224.203 63.3142 cv
223.699 62.7862 223.447 62.0662 223.447 61.1422 cv
223.447 60.2542 223.711 59.5342 224.239 58.9822 cv
224.767 58.4422 225.475 58.1662 226.363 58.1662 cv
227.371 58.1662 228.151 58.5622 228.679 59.3302 cv
229.207 60.1102 229.483 61.2382 229.483 62.7022 cv
229.483 64.0942 229.147 65.1862 228.499 66.0022 cv
227.839 66.8182 226.963 67.2262 225.859 67.2262 cv
225.559 67.2262 225.259 67.1902 224.959 67.1422 cv
224.647 67.0942 224.335 67.0102 224.011 66.8902 cv
226.363 63.1822 mo
226.891 63.1822 227.311 63.0022 227.623 62.6422 cv
227.935 62.2822 228.091 61.7782 228.091 61.1422 cv
228.091 60.5182 227.935 60.0142 227.623 59.6542 cv
227.311 59.2942 226.891 59.1022 226.363 59.1022 cv
225.835 59.1022 225.415 59.2942 225.103 59.6542 cv
224.791 60.0142 224.635 60.5182 224.635 61.1422 cv
224.635 61.7782 224.791 62.2822 225.103 62.6422 cv
225.415 63.0022 225.835 63.1822 226.363 63.1822 cv
f
234.859 59.3542 mo
231.871 64.0222 li
234.859 64.0222 li
234.859 59.3542 li
234.547 58.3222 mo
236.035 58.3222 li
236.035 64.0222 li
237.283 64.0222 li
237.283 65.0062 li
236.035 65.0062 li
236.035 67.0702 li
234.859 67.0702 li
234.859 65.0062 li
230.911 65.0062 li
230.911 63.8662 li
234.547 58.3222 li
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 44.7317 mo
405.403 44.7317 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
244.978 44.7317 mo
241.478 44.7317 li
f
244.978 44.7317 mo
241.478 44.7317 li
@
215.059 41.3262 mo
214.447 41.3262 213.991 41.6262 213.679 42.2262 cv
213.367 42.8262 213.223 43.7262 213.223 44.9262 cv
213.223 46.1262 213.367 47.0262 213.679 47.6262 cv
213.991 48.2262 214.447 48.5262 215.059 48.5262 cv
215.671 48.5262 216.127 48.2262 216.439 47.6262 cv
216.739 47.0262 216.895 46.1262 216.895 44.9262 cv
216.895 43.7262 216.739 42.8262 216.439 42.2262 cv
216.127 41.6262 215.671 41.3262 215.059 41.3262 cv
215.059 40.3902 mo
216.031 40.3902 216.775 40.7862 217.303 41.5542 cv
217.819 42.3342 218.083 43.4622 218.083 44.9262 cv
218.083 46.4022 217.819 47.5302 217.303 48.2982 cv
216.775 49.0662 216.031 49.4502 215.059 49.4502 cv
214.075 49.4502 213.319 49.0662 212.803 48.2982 cv
212.287 47.5302 212.035 46.4022 212.035 44.9262 cv
212.035 43.4622 212.287 42.3342 212.803 41.5542 cv
213.319 40.7862 214.075 40.3902 215.059 40.3902 cv
f
220.159 47.8062 mo
221.395 47.8062 li
221.395 49.2942 li
220.159 49.2942 li
220.159 47.8062 li
f
224.011 49.1142 mo
224.011 48.0342 li
224.299 48.1782 224.599 48.2862 224.911 48.3582 cv
225.211 48.4302 225.511 48.4662 225.811 48.4662 cv
226.579 48.4662 227.179 48.2142 227.587 47.6862 cv
227.995 47.1582 228.235 46.3662 228.307 45.2862 cv
228.067 45.6222 227.779 45.8862 227.443 46.0662 cv
227.095 46.2462 226.711 46.3302 226.291 46.3302 cv
225.403 46.3302 224.707 46.0662 224.203 45.5382 cv
223.699 45.0102 223.447 44.2902 223.447 43.3662 cv
223.447 42.4782 223.711 41.7582 224.239 41.2062 cv
224.767 40.6662 225.475 40.3902 226.363 40.3902 cv
227.371 40.3902 228.151 40.7862 228.679 41.5542 cv
229.207 42.3342 229.483 43.4622 229.483 44.9262 cv
229.483 46.3182 229.147 47.4102 228.499 48.2262 cv
227.839 49.0422 226.963 49.4502 225.859 49.4502 cv
225.559 49.4502 225.259 49.4142 224.959 49.3662 cv
224.647 49.3182 224.335 49.2342 224.011 49.1142 cv
226.363 45.4062 mo
226.891 45.4062 227.311 45.2262 227.623 44.8662 cv
227.935 44.5062 228.091 44.0022 228.091 43.3662 cv
228.091 42.7422 227.935 42.2382 227.623 41.8782 cv
227.311 41.5182 226.891 41.3262 226.363 41.3262 cv
225.835 41.3262 225.415 41.5182 225.103 41.8782 cv
224.791 42.2382 224.635 42.7422 224.635 43.3662 cv
224.635 44.0022 224.791 44.5062 225.103 44.8662 cv
225.415 45.2262 225.835 45.4062 226.363 45.4062 cv
f
234.283 44.4462 mo
233.755 44.4462 233.335 44.6382 233.023 44.9982 cv
232.711 45.3582 232.555 45.8622 232.555 46.4862 cv
232.555 47.1222 232.711 47.6262 233.023 47.9862 cv
233.335 48.3462 233.755 48.5262 234.283 48.5262 cv
234.811 48.5262 235.231 48.3462 235.543 47.9862 cv
235.855 47.6262 236.011 47.1222 236.011 46.4862 cv
236.011 45.8622 235.855 45.3582 235.543 44.9982 cv
235.231 44.6382 234.811 44.4462 234.283 44.4462 cv
236.635 40.7382 mo
236.635 41.8182 li
236.335 41.6742 236.035 41.5662 235.735 41.4942 cv
235.423 41.4222 235.123 41.3862 234.835 41.3862 cv
234.043 41.3862 233.443 41.6502 233.035 42.1782 cv
232.627 42.7062 232.387 43.5102 232.339 44.5662 cv
232.567 44.2302 232.855 43.9662 233.203 43.7862 cv
233.551 43.6062 233.935 43.5102 234.355 43.5102 cv
235.231 43.5102 235.927 43.7862 236.431 44.3142 cv
236.935 44.8422 237.199 45.5742 237.199 46.4862 cv
237.199 47.3862 236.923 48.1062 236.395 48.6462 cv
235.867 49.1862 235.159 49.4502 234.283 49.4502 cv
233.275 49.4502 232.495 49.0662 231.967 48.2982 cv
231.427 47.5302 231.163 46.4022 231.163 44.9262 cv
231.163 43.5462 231.487 42.4422 232.147 41.6262 cv
232.795 40.8102 233.683 40.3902 234.787 40.3902 cv
235.075 40.3902 235.375 40.4262 235.687 40.4742 cv
235.987 40.5342 236.299 40.6182 236.635 40.7382 cv
f
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 26.9557 mo
405.403 26.9557 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
244.978 26.9557 mo
241.478 26.9557 li
f
244.978 26.9557 mo
241.478 26.9557 li
@
215.059 23.5502 mo
214.447 23.5502 213.991 23.8502 213.679 24.4502 cv
213.367 25.0502 213.223 25.9502 213.223 27.1502 cv
213.223 28.3502 213.367 29.2502 213.679 29.8502 cv
213.991 30.4502 214.447 30.7502 215.059 30.7502 cv
215.671 30.7502 216.127 30.4502 216.439 29.8502 cv
216.739 29.2502 216.895 28.3502 216.895 27.1502 cv
216.895 25.9502 216.739 25.0502 216.439 24.4502 cv
216.127 23.8502 215.671 23.5502 215.059 23.5502 cv
215.059 22.6142 mo
216.031 22.6142 216.775 23.0102 217.303 23.7782 cv
217.819 24.5582 218.083 25.6862 218.083 27.1502 cv
218.083 28.6262 217.819 29.7542 217.303 30.5222 cv
216.775 31.2902 216.031 31.6742 215.059 31.6742 cv
214.075 31.6742 213.319 31.2902 212.803 30.5222 cv
212.287 29.7542 212.035 28.6262 212.035 27.1502 cv
212.035 25.6862 212.287 24.5582 212.803 23.7782 cv
213.319 23.0102 214.075 22.6142 215.059 22.6142 cv
f
220.159 30.0302 mo
221.395 30.0302 li
221.395 31.5182 li
220.159 31.5182 li
220.159 30.0302 li
f
224.011 31.3382 mo
224.011 30.2582 li
224.299 30.4022 224.599 30.5102 224.911 30.5822 cv
225.211 30.6542 225.511 30.6902 225.811 30.6902 cv
226.579 30.6902 227.179 30.4382 227.587 29.9102 cv
227.995 29.3822 228.235 28.5902 228.307 27.5102 cv
228.067 27.8462 227.779 28.1102 227.443 28.2902 cv
227.095 28.4702 226.711 28.5542 226.291 28.5542 cv
225.403 28.5542 224.707 28.2902 224.203 27.7622 cv
223.699 27.2342 223.447 26.5142 223.447 25.5902 cv
223.447 24.7022 223.711 23.9822 224.239 23.4302 cv
224.767 22.8902 225.475 22.6142 226.363 22.6142 cv
227.371 22.6142 228.151 23.0102 228.679 23.7782 cv
229.207 24.5582 229.483 25.6862 229.483 27.1502 cv
229.483 28.5422 229.147 29.6342 228.499 30.4502 cv
227.839 31.2662 226.963 31.6742 225.859 31.6742 cv
225.559 31.6742 225.259 31.6382 224.959 31.5902 cv
224.647 31.5422 224.335 31.4582 224.011 31.3382 cv
226.363 27.6302 mo
226.891 27.6302 227.311 27.4502 227.623 27.0902 cv
227.935 26.7302 228.091 26.2262 228.091 25.5902 cv
228.091 24.9662 227.935 24.4622 227.623 24.1022 cv
227.311 23.7422 226.891 23.5502 226.363 23.5502 cv
225.835 23.5502 225.415 23.7422 225.103 24.1022 cv
224.791 24.4622 224.635 24.9662 224.635 25.5902 cv
224.635 26.2262 224.791 26.7302 225.103 27.0902 cv
225.415 27.4502 225.835 27.6302 226.363 27.6302 cv
f
234.139 27.3662 mo
233.575 27.3662 233.131 27.5222 232.807 27.8222 cv
232.483 28.1222 232.327 28.5302 232.327 29.0582 cv
232.327 29.5862 232.483 30.0062 232.807 30.3062 cv
233.131 30.6062 233.575 30.7502 234.139 30.7502 cv
234.691 30.7502 235.135 30.6062 235.459 30.2942 cv
235.783 29.9942 235.951 29.5862 235.951 29.0582 cv
235.951 28.5302 235.783 28.1222 235.471 27.8222 cv
235.147 27.5222 234.703 27.3662 234.139 27.3662 cv
232.951 26.8622 mo
232.447 26.7422 232.051 26.5022 231.763 26.1542 cv
231.475 25.8062 231.343 25.3862 231.343 24.8822 cv
231.343 24.1862 231.583 23.6342 232.087 23.2262 cv
232.579 22.8182 233.263 22.6142 234.139 22.6142 cv
235.003 22.6142 235.687 22.8182 236.191 23.2262 cv
236.683 23.6342 236.935 24.1862 236.935 24.8822 cv
236.935 25.3862 236.791 25.8062 236.503 26.1542 cv
236.215 26.5022 235.831 26.7422 235.327 26.8622 cv
235.891 26.9942 236.335 27.2582 236.659 27.6422 cv
236.971 28.0262 237.139 28.5062 237.139 29.0582 cv
237.139 29.9102 236.875 30.5582 236.359 31.0022 cv
235.831 31.4582 235.099 31.6742 234.139 31.6742 cv
233.167 31.6742 232.423 31.4582 231.907 31.0022 cv
231.391 30.5582 231.139 29.9102 231.139 29.0582 cv
231.139 28.5062 231.295 28.0262 231.619 27.6422 cv
231.931 27.2582 232.375 26.9942 232.951 26.8622 cv
232.519 24.9902 mo
232.519 25.4462 232.651 25.8062 232.939 26.0582 cv
233.227 26.3102 233.623 26.4302 234.139 26.4302 cv
234.643 26.4302 235.039 26.3102 235.327 26.0582 cv
235.615 25.8062 235.759 25.4462 235.759 24.9902 cv
235.759 24.5342 235.615 24.1862 235.327 23.9342 cv
235.039 23.6822 234.643 23.5502 234.139 23.5502 cv
233.623 23.5502 233.227 23.6822 232.939 23.9342 cv
232.651 24.1862 232.519 24.5342 232.519 24.9902 cv
f
grestore
gsave
244.978 133.612 mo
405.403 133.612 li
405.403 9.17972 li
244.978 9.17972 li
244.978 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
244.978 9.17969 mo
405.403 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
244.978 9.17969 mo
241.478 9.17969 li
f
244.978 9.17969 mo
241.478 9.17969 li
@
212.731 12.7462 mo
214.663 12.7462 li
214.663 6.07416 li
212.563 6.4942 li
212.563 5.41418 li
214.651 4.9942 li
215.839 4.9942 li
215.839 12.7462 li
217.771 12.7462 li
217.771 13.7422 li
212.731 13.7422 li
212.731 12.7462 li
f
220.159 12.2542 mo
221.395 12.2542 li
221.395 13.7422 li
220.159 13.7422 li
220.159 12.2542 li
f
226.507 5.77417 mo
225.895 5.77417 225.439 6.07416 225.127 6.67419 cv
224.815 7.27417 224.671 8.17419 224.671 9.37418 cv
224.671 10.5742 224.815 11.4742 225.127 12.0742 cv
225.439 12.6742 225.895 12.9742 226.507 12.9742 cv
227.119 12.9742 227.575 12.6742 227.887 12.0742 cv
228.187 11.4742 228.343 10.5742 228.343 9.37418 cv
228.343 8.17419 228.187 7.27417 227.887 6.67419 cv
227.575 6.07416 227.119 5.77417 226.507 5.77417 cv
226.507 4.8382 mo
227.479 4.8382 228.223 5.23419 228.751 6.0022 cv
229.267 6.78217 229.531 7.91016 229.531 9.37418 cv
229.531 10.8502 229.267 11.9782 228.751 12.7462 cv
228.223 13.5142 227.479 13.8982 226.507 13.8982 cv
225.523 13.8982 224.767 13.5142 224.251 12.7462 cv
223.735 11.9782 223.483 10.8502 223.483 9.37418 cv
223.483 7.91016 223.735 6.78217 224.251 6.0022 cv
224.767 5.23419 225.523 4.8382 226.507 4.8382 cv
f
234.139 5.77417 mo
233.527 5.77417 233.071 6.07416 232.759 6.67419 cv
232.447 7.27417 232.303 8.17419 232.303 9.37418 cv
232.303 10.5742 232.447 11.4742 232.759 12.0742 cv
233.071 12.6742 233.527 12.9742 234.139 12.9742 cv
234.751 12.9742 235.207 12.6742 235.519 12.0742 cv
235.819 11.4742 235.975 10.5742 235.975 9.37418 cv
235.975 8.17419 235.819 7.27417 235.519 6.67419 cv
235.207 6.07416 234.751 5.77417 234.139 5.77417 cv
234.139 4.8382 mo
235.111 4.8382 235.855 5.23419 236.383 6.0022 cv
236.899 6.78217 237.163 7.91016 237.163 9.37418 cv
237.163 10.8502 236.899 11.9782 236.383 12.7462 cv
235.855 13.5142 235.111 13.8982 234.139 13.8982 cv
233.155 13.8982 232.399 13.5142 231.883 12.7462 cv
231.367 11.9782 231.115 10.8502 231.115 9.37418 cv
231.115 7.91016 231.367 6.78217 231.883 6.0022 cv
232.399 5.23419 233.155 4.8382 234.139 4.8382 cv
f
1 lw
2 lc
252.27 31.0886 mo
290.08 39.1411 li
338.694 40.2166 li
398.111 18.8854 li
.930816 .793027 0 0 cmyk
@
gsave
250.27 33.0885 mo
254.27 33.0885 li
254.27 29.0887 li
250.27 29.0887 li
250.27 33.0885 li
clp
252.27 29.5886 mo
250.77 32.5886 li
253.77 32.5886 li
cp
f
0 lc
0 lj
252.27 29.5886 mo
250.77 32.5886 li
253.77 32.5886 li
cp
@
grestore
gsave
288.08 41.1411 mo
292.08 41.1411 li
292.08 37.141 li
288.08 37.141 li
288.08 41.1411 li
clp
290.08 37.6411 mo
288.58 40.6411 li
291.58 40.6411 li
cp
f
0 lc
0 lj
290.08 37.6411 mo
288.58 40.6411 li
291.58 40.6411 li
cp
@
grestore
gsave
336.694 42.2166 mo
340.694 42.2166 li
340.694 38.2165 li
336.694 38.2165 li
336.694 42.2166 li
clp
338.694 38.7166 mo
337.194 41.7166 li
340.194 41.7166 li
cp
f
0 lc
0 lj
338.694 38.7166 mo
337.194 41.7166 li
340.194 41.7166 li
cp
@
grestore
gsave
396.111 20.8854 mo
400.111 20.8854 li
400.111 16.8853 li
396.111 16.8853 li
396.111 20.8854 li
clp
398.111 17.3854 mo
396.611 20.3854 li
399.611 20.3854 li
cp
f
0 lc
0 lj
398.111 17.3854 mo
396.611 20.3854 li
399.611 20.3854 li
cp
@
grestore
252.27 33.1062 mo
290.08 38.6701 li
338.694 32.7862 li
398.111 22.1029 li
1 /0 /CSD get_res sepcs
.498039 sep
@
gsave
250.27 35.1061 mo
254.27 35.1061 li
254.27 31.1062 li
250.27 31.1062 li
250.27 35.1061 li
clp
252.27 34.6062 mo
252.667 34.6062 253.049 34.4481 253.33 34.1668 cv
253.612 33.8855 253.77 33.504 253.77 33.1062 cv
253.77 32.7084 253.612 32.3268 253.33 32.0455 cv
253.049 31.7642 252.667 31.6062 252.27 31.6062 cv
251.872 31.6062 251.49 31.7642 251.209 32.0455 cv
250.928 32.3268 250.77 32.7084 250.77 33.1062 cv
250.77 33.504 250.928 33.8855 251.209 34.1668 cv
251.49 34.4481 251.872 34.6062 252.27 34.6062 cv
cp
f
0 lc
252.27 34.6062 mo
252.667 34.6062 253.049 34.4481 253.33 34.1668 cv
253.612 33.8855 253.77 33.504 253.77 33.1062 cv
253.77 32.7084 253.612 32.3268 253.33 32.0455 cv
253.049 31.7642 252.667 31.6062 252.27 31.6062 cv
251.872 31.6062 251.49 31.7642 251.209 32.0455 cv
250.928 32.3268 250.77 32.7084 250.77 33.1062 cv
250.77 33.504 250.928 33.8855 251.209 34.1668 cv
251.49 34.4481 251.872 34.6062 252.27 34.6062 cv
cp
@
grestore
gsave
288.08 40.6701 mo
292.08 40.6701 li
292.08 36.67 li
288.08 36.67 li
288.08 40.6701 li
clp
290.08 40.1701 mo
290.478 40.1701 290.86 40.012 291.141 39.7307 cv
291.422 39.4494 291.58 39.0679 291.58 38.6701 cv
291.58 38.2723 291.422 37.8907 291.141 37.6094 cv
290.86 37.3281 290.478 37.1701 290.08 37.1701 cv
289.683 37.1701 289.301 37.3281 289.02 37.6094 cv
288.738 37.8907 288.58 38.2723 288.58 38.6701 cv
288.58 39.0679 288.738 39.4494 289.02 39.7307 cv
289.301 40.012 289.683 40.1701 290.08 40.1701 cv
cp
f
0 lc
290.08 40.1701 mo
290.478 40.1701 290.86 40.012 291.141 39.7307 cv
291.422 39.4494 291.58 39.0679 291.58 38.6701 cv
291.58 38.2723 291.422 37.8907 291.141 37.6094 cv
290.86 37.3281 290.478 37.1701 290.08 37.1701 cv
289.683 37.1701 289.301 37.3281 289.02 37.6094 cv
288.738 37.8907 288.58 38.2723 288.58 38.6701 cv
288.58 39.0679 288.738 39.4494 289.02 39.7307 cv
289.301 40.012 289.683 40.1701 290.08 40.1701 cv
cp
@
grestore
gsave
336.694 34.7862 mo
340.694 34.7862 li
340.694 30.7861 li
336.694 30.7861 li
336.694 34.7862 li
clp
338.694 34.2862 mo
339.092 34.2862 339.473 34.1281 339.755 33.8469 cv
340.036 33.5656 340.194 33.184 340.194 32.7862 cv
340.194 32.3884 340.036 32.0068 339.755 31.7255 cv
339.473 31.4442 339.092 31.2862 338.694 31.2862 cv
338.296 31.2862 337.915 31.4442 337.633 31.7255 cv
337.352 32.0068 337.194 32.3884 337.194 32.7862 cv
337.194 33.184 337.352 33.5656 337.633 33.8469 cv
337.915 34.1281 338.296 34.2862 338.694 34.2862 cv
cp
f
0 lc
338.694 34.2862 mo
339.092 34.2862 339.473 34.1281 339.755 33.8469 cv
340.036 33.5656 340.194 33.184 340.194 32.7862 cv
340.194 32.3884 340.036 32.0068 339.755 31.7255 cv
339.473 31.4442 339.092 31.2862 338.694 31.2862 cv
338.296 31.2862 337.915 31.4442 337.633 31.7255 cv
337.352 32.0068 337.194 32.3884 337.194 32.7862 cv
337.194 33.184 337.352 33.5656 337.633 33.8469 cv
337.915 34.1281 338.296 34.2862 338.694 34.2862 cv
cp
@
grestore
gsave
396.111 24.1028 mo
400.111 24.1028 li
400.111 20.103 li
396.111 20.103 li
396.111 24.1028 li
clp
398.111 23.6029 mo
398.508 23.6029 398.89 23.4448 399.171 23.1635 cv
399.453 22.8822 399.611 22.5007 399.611 22.1029 cv
399.611 21.7051 399.453 21.3235 399.171 21.0422 cv
398.89 20.7609 398.508 20.6029 398.111 20.6029 cv
397.713 20.6029 397.331 20.7609 397.05 21.0422 cv
396.769 21.3235 396.611 21.7051 396.611 22.1029 cv
396.611 22.5007 396.769 22.8822 397.05 23.1635 cv
397.331 23.4448 397.713 23.6029 398.111 23.6029 cv
cp
f
0 lc
398.111 23.6029 mo
398.508 23.6029 398.89 23.4448 399.171 23.1635 cv
399.453 22.8822 399.611 22.5007 399.611 22.1029 cv
399.611 21.7051 399.453 21.3235 399.171 21.0422 cv
398.89 20.7609 398.508 20.6029 398.111 20.6029 cv
397.713 20.6029 397.331 20.7609 397.05 21.0422 cv
396.769 21.3235 396.611 21.7051 396.611 22.1029 cv
396.611 22.5007 396.769 22.8822 397.05 23.1635 cv
397.331 23.4448 397.713 23.6029 398.111 23.6029 cv
cp
@
grestore
252.27 32.7507 mo
290.08 42.3319 li
338.694 38.3679 li
398.111 22.2984 li
.926818 .245335 1 .155612 cmyk
@
gsave
250.343 34.4642 mo
254.196 34.4642 li
254.196 30.7507 li
250.343 30.7507 li
250.343 34.4642 li
clp
252.27 31.2507 mo
251.933 32.2871 li
250.843 32.2871 li
251.725 32.9277 li
251.388 33.9642 li
252.27 33.3236 li
253.151 33.9642 li
252.815 32.9277 li
253.696 32.2871 li
252.606 32.2871 li
cp
f
0 lc
2 lj
252.27 31.2507 mo
251.933 32.2871 li
250.843 32.2871 li
251.725 32.9277 li
251.388 33.9642 li
252.27 33.3236 li
253.151 33.9642 li
252.815 32.9277 li
253.696 32.2871 li
252.606 32.2871 li
cp
@
grestore
gsave
288.154 44.0455 mo
292.007 44.0455 li
292.007 40.332 li
288.154 40.332 li
288.154 44.0455 li
clp
290.08 40.8319 mo
289.744 41.8683 li
288.654 41.8683 li
289.535 42.5089 li
289.199 43.5454 li
290.08 42.9048 li
290.962 43.5454 li
290.625 42.5089 li
291.507 41.8683 li
290.417 41.8683 li
cp
f
0 lc
2 lj
290.08 40.8319 mo
289.744 41.8683 li
288.654 41.8683 li
289.535 42.5089 li
289.199 43.5454 li
290.08 42.9048 li
290.962 43.5454 li
290.625 42.5089 li
291.507 41.8683 li
290.417 41.8683 li
cp
@
grestore
gsave
336.767 40.0815 mo
340.62 40.0815 li
340.62 36.3678 li
336.767 36.3678 li
336.767 40.0815 li
clp
338.694 36.8679 mo
338.357 37.9044 li
337.267 37.9044 li
338.149 38.545 li
337.812 39.5814 li
338.694 38.9408 li
339.576 39.5814 li
339.239 38.545 li
340.121 37.9044 li
339.031 37.9044 li
cp
f
0 lc
2 lj
338.694 36.8679 mo
338.357 37.9044 li
337.267 37.9044 li
338.149 38.545 li
337.812 39.5814 li
338.694 38.9408 li
339.576 39.5814 li
339.239 38.545 li
340.121 37.9044 li
339.031 37.9044 li
cp
@
grestore
gsave
396.184 24.0118 mo
400.037 24.0118 li
400.037 20.2983 li
396.184 20.2983 li
396.184 24.0118 li
clp
398.111 20.7984 mo
397.774 21.8348 li
396.684 21.8348 li
397.566 22.4754 li
397.229 23.5119 li
398.111 22.8713 li
398.992 23.5119 li
398.656 22.4754 li
399.537 21.8348 li
398.447 21.8348 li
cp
f
0 lc
2 lj
398.111 20.7984 mo
397.774 21.8348 li
396.684 21.8348 li
397.566 22.4754 li
397.229 23.5119 li
398.111 22.8713 li
398.992 23.5119 li
398.656 22.4754 li
399.537 21.8348 li
398.447 21.8348 li
cp
@
grestore
252.27 24.6537 mo
290.08 27.8712 li
338.694 24.2271 li
398.111 17.4722 li
0 1 1 0 cmyk
@
gsave
250.27 26.6538 mo
254.27 26.6538 li
254.27 22.6537 li
250.27 22.6537 li
250.27 26.6538 li
clp
250.77 26.1537 mo
253.77 26.1537 li
253.77 23.1537 li
250.77 23.1537 li
cp
f
0 lc
0 lj
250.77 26.1537 mo
253.77 26.1537 li
253.77 23.1537 li
250.77 23.1537 li
cp
@
grestore
gsave
288.08 29.8712 mo
292.08 29.8712 li
292.08 25.8712 li
288.08 25.8712 li
288.08 29.8712 li
clp
288.58 29.3712 mo
291.58 29.3712 li
291.58 26.3712 li
288.58 26.3712 li
cp
f
0 lc
0 lj
288.58 29.3712 mo
291.58 29.3712 li
291.58 26.3712 li
288.58 26.3712 li
cp
@
grestore
gsave
336.694 26.2271 mo
340.694 26.2271 li
340.694 22.227 li
336.694 22.227 li
336.694 26.2271 li
clp
337.194 25.7271 mo
340.194 25.7271 li
340.194 22.7271 li
337.194 22.7271 li
cp
f
0 lc
0 lj
337.194 25.7271 mo
340.194 25.7271 li
340.194 22.7271 li
337.194 22.7271 li
cp
@
grestore
gsave
396.111 19.4722 mo
400.111 19.4722 li
400.111 15.4721 li
396.111 15.4721 li
396.111 19.4722 li
clp
396.611 18.9722 mo
399.611 18.9722 li
399.611 15.9722 li
396.611 15.9722 li
cp
f
0 lc
0 lj
396.611 18.9722 mo
399.611 18.9722 li
399.611 15.9722 li
396.611 15.9722 li
cp
@
grestore
.8 lw
0 lj
244.978 133.612 mo
244.978 9.17969 li
1 /0 /CSD get_res sepcs
1 sep
@
405.403 133.612 mo
405.403 9.17969 li
@
244.978 133.612 mo
405.403 133.612 li
@
244.978 9.17969 mo
405.403 9.17969 li
@
453.53 133.612 mo
613.955 133.612 li
613.955 9.17969 li
453.53 9.17969 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
0 lc
1 lj
[1 1.65 ] 0 dsh
460.822 133.612 mo
460.822 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
460.822 133.612 mo
460.822 137.112 li
1 /0 /CSD get_res sepcs
1 sep
f
0 lc
1 lj
460.822 133.612 mo
460.822 137.112 li
@
458.49 148.741 mo
460.422 148.741 li
460.422 142.069 li
458.322 142.489 li
458.322 141.409 li
460.41 140.989 li
461.598 140.989 li
461.598 148.741 li
463.53 148.741 li
463.53 149.737 li
458.49 149.737 li
458.49 148.741 li
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
497.282 133.612 mo
497.282 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
497.282 133.612 mo
497.282 137.112 li
f
497.282 133.612 mo
497.282 137.112 li
@
495.766 148.741 mo
499.894 148.741 li
499.894 149.737 li
494.338 149.737 li
494.338 148.741 li
494.782 148.285 495.394 147.661 496.174 146.869 cv
496.942 146.089 497.434 145.585 497.638 145.357 cv
498.022 144.937 498.286 144.577 498.43 144.277 cv
498.574 143.989 498.658 143.689 498.658 143.401 cv
498.658 142.945 498.49 142.561 498.166 142.273 cv
497.842 141.985 497.422 141.829 496.894 141.829 cv
496.522 141.829 496.126 141.901 495.718 142.021 cv
495.31 142.153 494.866 142.345 494.398 142.609 cv
494.398 141.409 li
494.878 141.217 495.322 141.073 495.73 140.977 cv
496.138 140.881 496.522 140.833 496.87 140.833 cv
497.77 140.833 498.49 141.061 499.03 141.517 cv
499.57 141.973 499.846 142.573 499.846 143.329 cv
499.846 143.689 499.774 144.037 499.642 144.349 cv
499.51 144.673 499.27 145.057 498.91 145.489 cv
498.814 145.609 498.502 145.933 497.974 146.473 cv
497.446 147.013 496.714 147.769 495.766 148.741 cv
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
533.743 133.612 mo
533.743 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
533.743 133.612 mo
533.743 137.112 li
f
533.743 133.612 mo
533.743 137.112 li
@
534.794 145.021 mo
535.358 145.141 535.802 145.393 536.114 145.777 cv
536.426 146.161 536.594 146.641 536.594 147.193 cv
536.594 148.057 536.294 148.729 535.706 149.197 cv
535.106 149.665 534.266 149.893 533.174 149.893 cv
532.802 149.893 532.418 149.857 532.034 149.785 cv
531.65 149.725 531.242 149.617 530.834 149.473 cv
530.834 148.333 li
531.158 148.525 531.518 148.669 531.914 148.765 cv
532.298 148.861 532.706 148.909 533.138 148.909 cv
533.882 148.909 534.446 148.765 534.83 148.477 cv
535.214 148.189 535.418 147.757 535.418 147.193 cv
535.418 146.689 535.238 146.281 534.878 145.993 cv
534.518 145.705 534.014 145.549 533.366 145.549 cv
532.346 145.549 li
532.346 144.577 li
533.414 144.577 li
533.99 144.577 534.434 144.469 534.746 144.229 cv
535.058 144.001 535.214 143.665 535.214 143.221 cv
535.214 142.777 535.046 142.429 534.734 142.189 cv
534.41 141.949 533.954 141.829 533.366 141.829 cv
533.042 141.829 532.694 141.865 532.322 141.937 cv
531.95 142.009 531.542 142.117 531.098 142.261 cv
531.098 141.205 li
531.542 141.085 531.962 140.989 532.358 140.929 cv
532.742 140.869 533.114 140.833 533.474 140.833 cv
534.362 140.833 535.07 141.037 535.598 141.445 cv
536.126 141.853 536.39 142.405 536.39 143.101 cv
536.39 143.581 536.246 143.989 535.97 144.325 cv
535.694 144.661 535.298 144.901 534.794 145.021 cv
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
570.203 133.612 mo
570.203 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
570.203 133.612 mo
570.203 137.112 li
f
570.203 133.612 mo
570.203 137.112 li
@
570.919 142.021 mo
567.931 146.689 li
570.919 146.689 li
570.919 142.021 li
570.607 140.989 mo
572.095 140.989 li
572.095 146.689 li
573.343 146.689 li
573.343 147.673 li
572.095 147.673 li
572.095 149.737 li
570.919 149.737 li
570.919 147.673 li
566.971 147.673 li
566.971 146.533 li
570.607 140.989 li
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
606.663 133.612 mo
606.663 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
606.663 133.612 mo
606.663 137.112 li
f
606.663 133.612 mo
606.663 137.112 li
@
604.139 140.989 mo
608.783 140.989 li
608.783 141.985 li
605.219 141.985 li
605.219 144.133 li
605.387 144.073 605.567 144.025 605.735 144.001 cv
605.903 143.977 606.083 143.953 606.251 143.953 cv
607.223 143.953 607.991 144.229 608.567 144.757 cv
609.143 145.297 609.431 146.017 609.431 146.929 cv
609.431 147.877 609.131 148.609 608.543 149.125 cv
607.955 149.641 607.127 149.893 606.071 149.893 cv
605.699 149.893 605.327 149.857 604.943 149.809 cv
604.559 149.749 604.175 149.665 603.767 149.533 cv
603.767 148.345 li
604.115 148.537 604.475 148.681 604.859 148.777 cv
605.231 148.873 605.627 148.909 606.047 148.909 cv
606.719 148.909 607.259 148.741 607.655 148.381 cv
608.039 148.021 608.243 147.541 608.243 146.929 cv
608.243 146.329 608.039 145.849 607.655 145.489 cv
607.259 145.129 606.719 144.949 606.047 144.949 cv
605.735 144.949 605.411 144.985 605.099 145.057 cv
604.787 145.129 604.463 145.237 604.139 145.381 cv
604.139 140.989 li
f
464.783 156.254 mo
464.255 157.166 463.871 158.054 463.619 158.93 cv
463.355 159.806 463.235 160.694 463.235 161.594 cv
463.235 162.506 463.355 163.394 463.619 164.27 cv
463.871 165.158 464.255 166.034 464.783 166.934 cv
463.847 166.934 li
463.259 166.01 462.815 165.122 462.527 164.234 cv
462.239 163.346 462.095 162.47 462.095 161.594 cv
462.095 160.73 462.239 159.854 462.527 158.966 cv
462.815 158.078 463.247 157.178 463.847 156.254 cv
464.783 156.254 li
f
471.599 159.05 mo
471.599 160.058 li
471.287 159.89 470.987 159.77 470.675 159.686 cv
470.363 159.602 470.063 159.554 469.751 159.554 cv
469.055 159.554 468.503 159.782 468.119 160.226 cv
467.735 160.67 467.543 161.294 467.543 162.086 cv
467.543 162.89 467.735 163.514 468.119 163.958 cv
468.503 164.402 469.055 164.618 469.751 164.618 cv
470.063 164.618 470.363 164.582 470.675 164.498 cv
470.987 164.414 471.287 164.282 471.599 164.114 cv
471.599 165.11 li
471.287 165.254 470.975 165.362 470.663 165.422 cv
470.339 165.482 469.991 165.518 469.631 165.518 cv
468.647 165.518 467.855 165.218 467.279 164.594 cv
466.691 163.982 466.403 163.142 466.403 162.086 cv
466.403 161.018 466.691 160.178 467.279 159.566 cv
467.867 158.954 468.671 158.642 469.703 158.642 cv
470.039 158.642 470.363 158.678 470.675 158.75 cv
470.987 158.822 471.299 158.918 471.599 159.05 cv
f
473.303 156.254 mo
474.239 156.254 li
474.815 157.178 475.259 158.078 475.547 158.966 cv
475.835 159.854 475.991 160.73 475.991 161.594 cv
475.991 162.47 475.835 163.346 475.547 164.234 cv
475.259 165.122 474.815 166.01 474.239 166.934 cv
473.303 166.934 li
473.819 166.034 474.203 165.158 474.467 164.27 cv
474.719 163.394 474.851 162.506 474.851 161.594 cv
474.851 160.694 474.719 159.806 474.467 158.93 cv
474.203 158.054 473.819 157.166 473.303 156.254 cv
f
478.199 156.614 mo
479.795 156.614 li
483.671 163.934 li
483.671 156.614 li
484.823 156.614 li
484.823 165.362 li
483.227 165.362 li
479.351 158.042 li
479.351 165.362 li
478.199 165.362 li
478.199 156.614 li
f
487.019 162.77 mo
487.019 158.798 li
488.099 158.798 li
488.099 162.734 li
488.099 163.358 488.219 163.814 488.459 164.126 cv
488.699 164.438 489.059 164.594 489.551 164.594 cv
490.127 164.594 490.595 164.414 490.931 164.042 cv
491.267 163.67 491.435 163.166 491.435 162.518 cv
491.435 158.798 li
492.515 158.798 li
492.515 165.362 li
491.435 165.362 li
491.435 164.354 li
491.171 164.762 490.859 165.05 490.523 165.242 cv
490.175 165.422 489.779 165.518 489.323 165.518 cv
488.567 165.518 487.991 165.29 487.607 164.822 cv
487.211 164.366 487.019 163.682 487.019 162.77 cv
489.731 158.642 mo
489.731 158.642 li
f
499.847 160.058 mo
500.111 159.578 500.435 159.23 500.807 158.99 cv
501.179 158.762 501.623 158.642 502.139 158.642 cv
502.811 158.642 503.339 158.882 503.711 159.362 cv
504.083 159.842 504.275 160.526 504.275 161.402 cv
504.275 165.362 li
503.195 165.362 li
503.195 161.438 li
503.195 160.814 503.075 160.346 502.859 160.034 cv
502.631 159.734 502.295 159.578 501.839 159.578 cv
501.275 159.578 500.831 159.77 500.507 160.142 cv
500.183 160.514 500.027 161.018 500.027 161.654 cv
500.027 165.362 li
498.947 165.362 li
498.947 161.438 li
498.947 160.814 498.827 160.346 498.611 160.034 cv
498.383 159.734 498.035 159.578 497.579 159.578 cv
497.027 159.578 496.583 159.77 496.259 160.142 cv
495.935 160.514 495.779 161.018 495.779 161.654 cv
495.779 165.362 li
494.699 165.362 li
494.699 158.798 li
495.779 158.798 li
495.779 159.818 li
496.019 159.422 496.319 159.122 496.667 158.93 cv
497.003 158.738 497.411 158.642 497.891 158.642 cv
498.371 158.642 498.767 158.762 499.103 159.002 cv
499.439 159.242 499.679 159.602 499.847 160.058 cv
f
511.139 162.086 mo
511.139 161.294 510.971 160.682 510.647 160.226 cv
510.311 159.77 509.867 159.542 509.303 159.542 cv
508.727 159.542 508.283 159.77 507.959 160.226 cv
507.623 160.682 507.467 161.294 507.467 162.086 cv
507.467 162.878 507.623 163.502 507.959 163.958 cv
508.283 164.414 508.727 164.63 509.303 164.63 cv
509.867 164.63 510.311 164.414 510.647 163.958 cv
510.971 163.502 511.139 162.878 511.139 162.086 cv
507.467 159.794 mo
507.683 159.41 507.971 159.122 508.319 158.93 cv
508.667 158.738 509.087 158.642 509.567 158.642 cv
510.359 158.642 511.007 158.966 511.511 159.59 cv
512.003 160.226 512.255 161.054 512.255 162.086 cv
512.255 163.118 512.003 163.958 511.511 164.582 cv
511.007 165.206 510.359 165.518 509.567 165.518 cv
509.087 165.518 508.667 165.422 508.319 165.242 cv
507.971 165.062 507.683 164.774 507.467 164.378 cv
507.467 165.362 li
506.387 165.362 li
506.387 156.242 li
507.467 156.242 li
507.467 159.794 li
f
519.659 161.81 mo
519.659 162.338 li
514.703 162.338 li
514.751 163.082 514.967 163.658 515.375 164.042 cv
515.771 164.426 516.323 164.618 517.043 164.618 cv
517.451 164.618 517.859 164.57 518.243 164.474 cv
518.627 164.378 519.023 164.222 519.407 164.006 cv
519.407 165.026 li
519.023 165.194 518.627 165.326 518.219 165.398 cv
517.811 165.47 517.391 165.518 516.983 165.518 cv
515.927 165.518 515.099 165.218 514.487 164.618 cv
513.875 164.018 513.575 163.19 513.575 162.146 cv
513.575 161.078 513.863 160.226 514.439 159.59 cv
515.015 158.966 515.807 158.642 516.791 158.642 cv
517.679 158.642 518.375 158.93 518.891 159.494 cv
519.395 160.07 519.659 160.838 519.659 161.81 cv
518.579 161.498 mo
518.567 160.91 518.399 160.442 518.087 160.082 cv
517.763 159.734 517.331 159.554 516.803 159.554 cv
516.203 159.554 515.723 159.734 515.363 160.07 cv
515.003 160.406 514.787 160.886 514.739 161.498 cv
518.579 161.498 li
f
525.227 159.806 mo
525.107 159.734 524.975 159.686 524.831 159.65 cv
524.687 159.626 524.531 159.602 524.363 159.602 cv
523.751 159.602 523.283 159.806 522.959 160.202 cv
522.623 160.598 522.467 161.162 522.467 161.906 cv
522.467 165.362 li
521.387 165.362 li
521.387 158.798 li
522.467 158.798 li
522.467 159.818 li
522.683 159.422 522.983 159.122 523.343 158.93 cv
523.703 158.738 524.147 158.642 524.675 158.642 cv
524.747 158.642 524.831 158.654 524.927 158.654 cv
525.011 158.666 525.107 158.678 525.227 158.702 cv
525.227 159.806 li
f
532.715 159.554 mo
532.139 159.554 531.683 159.782 531.347 160.238 cv
531.011 160.694 530.843 161.306 530.843 162.086 cv
530.843 162.878 530.999 163.49 531.335 163.946 cv
531.671 164.402 532.127 164.618 532.715 164.618 cv
533.291 164.618 533.747 164.402 534.083 163.946 cv
534.419 163.49 534.587 162.878 534.587 162.086 cv
534.587 161.318 534.419 160.694 534.083 160.238 cv
533.747 159.782 533.291 159.554 532.715 159.554 cv
532.715 158.642 mo
533.651 158.642 534.383 158.954 534.923 159.554 cv
535.451 160.166 535.727 161.006 535.727 162.086 cv
535.727 163.166 535.451 164.006 534.923 164.606 cv
534.383 165.218 533.651 165.518 532.715 165.518 cv
531.767 165.518 531.023 165.218 530.495 164.606 cv
529.967 164.006 529.703 163.166 529.703 162.086 cv
529.703 161.006 529.967 160.166 530.495 159.554 cv
531.023 158.954 531.767 158.642 532.715 158.642 cv
f
540.839 156.242 mo
540.839 157.142 li
539.807 157.142 li
539.423 157.142 539.147 157.226 539.003 157.382 cv
538.847 157.538 538.775 157.814 538.775 158.222 cv
538.775 158.798 li
540.551 158.798 li
540.551 159.638 li
538.775 159.638 li
538.775 165.362 li
537.695 165.362 li
537.695 159.638 li
536.663 159.638 li
536.663 158.798 li
537.695 158.798 li
537.695 158.342 li
537.695 157.622 537.863 157.082 538.199 156.746 cv
538.535 156.41 539.075 156.242 539.819 156.242 cv
540.839 156.242 li
f
546.599 164.378 mo
546.599 167.846 li
545.519 167.846 li
545.519 158.798 li
546.599 158.798 li
546.599 159.794 li
546.815 159.41 547.103 159.122 547.451 158.93 cv
547.799 158.738 548.219 158.642 548.699 158.642 cv
549.491 158.642 550.139 158.966 550.643 159.59 cv
551.135 160.226 551.387 161.054 551.387 162.086 cv
551.387 163.118 551.135 163.958 550.643 164.582 cv
550.139 165.206 549.491 165.518 548.699 165.518 cv
548.219 165.518 547.799 165.422 547.451 165.242 cv
547.103 165.062 546.815 164.774 546.599 164.378 cv
550.271 162.086 mo
550.271 161.294 550.103 160.682 549.779 160.226 cv
549.443 159.77 548.999 159.542 548.435 159.542 cv
547.859 159.542 547.415 159.77 547.091 160.226 cv
546.755 160.682 546.599 161.294 546.599 162.086 cv
546.599 162.878 546.755 163.502 547.091 163.958 cv
547.415 164.414 547.859 164.63 548.435 164.63 cv
548.999 164.63 549.443 164.414 549.779 163.958 cv
550.103 163.502 550.271 162.878 550.271 162.086 cv
f
556.163 162.062 mo
555.287 162.062 554.687 162.17 554.351 162.362 cv
554.015 162.566 553.847 162.902 553.847 163.382 cv
553.847 163.766 553.967 164.078 554.219 164.294 cv
554.471 164.522 554.819 164.63 555.251 164.63 cv
555.851 164.63 556.331 164.426 556.691 163.994 cv
557.051 163.574 557.231 163.01 557.231 162.302 cv
557.231 162.062 li
556.163 162.062 li
558.311 161.618 mo
558.311 165.362 li
557.231 165.362 li
557.231 164.366 li
556.979 164.774 556.667 165.062 556.307 165.242 cv
555.947 165.422 555.491 165.518 554.963 165.518 cv
554.291 165.518 553.751 165.338 553.355 164.966 cv
552.959 164.594 552.767 164.09 552.767 163.454 cv
552.767 162.722 553.007 162.17 553.511 161.786 cv
554.003 161.414 554.735 161.222 555.719 161.222 cv
557.231 161.222 li
557.231 161.114 li
557.231 160.622 557.063 160.238 556.739 159.962 cv
556.415 159.698 555.959 159.554 555.371 159.554 cv
554.987 159.554 554.627 159.602 554.267 159.698 cv
553.907 159.794 553.571 159.926 553.247 160.094 cv
553.247 159.098 li
553.631 158.954 554.015 158.834 554.387 158.762 cv
554.759 158.69 555.119 158.642 555.479 158.642 cv
556.427 158.642 557.135 158.894 557.603 159.386 cv
558.071 159.878 558.311 160.622 558.311 161.618 cv
f
565.259 159.05 mo
565.259 160.058 li
564.947 159.89 564.647 159.77 564.335 159.686 cv
564.023 159.602 563.723 159.554 563.411 159.554 cv
562.715 159.554 562.163 159.782 561.779 160.226 cv
561.395 160.67 561.203 161.294 561.203 162.086 cv
561.203 162.89 561.395 163.514 561.779 163.958 cv
562.163 164.402 562.715 164.618 563.411 164.618 cv
563.723 164.618 564.023 164.582 564.335 164.498 cv
564.647 164.414 564.947 164.282 565.259 164.114 cv
565.259 165.11 li
564.947 165.254 564.635 165.362 564.323 165.422 cv
563.999 165.482 563.651 165.518 563.291 165.518 cv
562.307 165.518 561.515 165.218 560.939 164.594 cv
560.351 163.982 560.063 163.142 560.063 162.086 cv
560.063 161.018 560.351 160.178 560.939 159.566 cv
561.527 158.954 562.331 158.642 563.363 158.642 cv
563.699 158.642 564.023 158.678 564.335 158.75 cv
564.647 158.822 564.959 158.918 565.259 159.05 cv
f
567.095 156.242 mo
568.175 156.242 li
568.175 161.63 li
571.391 158.798 li
572.771 158.798 li
569.291 161.87 li
572.915 165.362 li
571.511 165.362 li
568.175 162.158 li
568.175 165.362 li
567.095 165.362 li
567.095 156.242 li
f
579.695 161.81 mo
579.695 162.338 li
574.739 162.338 li
574.787 163.082 575.003 163.658 575.411 164.042 cv
575.807 164.426 576.359 164.618 577.079 164.618 cv
577.487 164.618 577.895 164.57 578.279 164.474 cv
578.663 164.378 579.059 164.222 579.443 164.006 cv
579.443 165.026 li
579.059 165.194 578.663 165.326 578.255 165.398 cv
577.847 165.47 577.427 165.518 577.019 165.518 cv
575.963 165.518 575.135 165.218 574.523 164.618 cv
573.911 164.018 573.611 163.19 573.611 162.146 cv
573.611 161.078 573.899 160.226 574.475 159.59 cv
575.051 158.966 575.843 158.642 576.827 158.642 cv
577.715 158.642 578.411 158.93 578.927 159.494 cv
579.431 160.07 579.695 160.838 579.695 161.81 cv
578.615 161.498 mo
578.603 160.91 578.435 160.442 578.123 160.082 cv
577.799 159.734 577.367 159.554 576.839 159.554 cv
576.239 159.554 575.759 159.734 575.399 160.07 cv
575.039 160.406 574.823 160.886 574.775 161.498 cv
578.615 161.498 li
f
582.527 156.938 mo
582.527 158.798 li
584.747 158.798 li
584.747 159.638 li
582.527 159.638 li
582.527 163.202 li
582.527 163.742 582.599 164.09 582.743 164.234 cv
582.887 164.39 583.187 164.462 583.643 164.462 cv
584.747 164.462 li
584.747 165.362 li
583.643 165.362 li
582.803 165.362 582.227 165.206 581.915 164.894 cv
581.603 164.582 581.447 164.018 581.447 163.202 cv
581.447 159.638 li
580.655 159.638 li
580.655 158.798 li
581.447 158.798 li
581.447 156.938 li
582.527 156.938 li
f
590.351 158.99 mo
590.351 160.01 li
590.039 159.866 589.727 159.746 589.403 159.662 cv
589.067 159.59 588.731 159.542 588.383 159.542 cv
587.843 159.542 587.435 159.626 587.171 159.794 cv
586.907 159.962 586.775 160.202 586.775 160.526 cv
586.775 160.778 586.871 160.97 587.063 161.114 cv
587.255 161.258 587.639 161.402 588.215 161.522 cv
588.587 161.606 li
589.355 161.774 589.895 162.014 590.219 162.302 cv
590.531 162.602 590.699 163.022 590.699 163.55 cv
590.699 164.162 590.459 164.642 589.979 164.99 cv
589.499 165.35 588.827 165.518 587.987 165.518 cv
587.627 165.518 587.267 165.482 586.883 165.422 cv
586.499 165.362 586.103 165.266 585.683 165.122 cv
585.683 164.006 li
586.079 164.222 586.475 164.378 586.859 164.474 cv
587.243 164.582 587.627 164.63 588.011 164.63 cv
588.515 164.63 588.911 164.546 589.187 164.378 cv
589.451 164.21 589.595 163.958 589.595 163.634 cv
589.595 163.346 589.487 163.118 589.295 162.962 cv
589.103 162.806 588.671 162.65 587.999 162.506 cv
587.627 162.422 li
586.955 162.278 586.463 162.062 586.175 161.774 cv
585.875 161.486 585.731 161.09 585.731 160.574 cv
585.731 159.962 585.947 159.482 586.379 159.146 cv
586.811 158.81 587.435 158.642 588.251 158.642 cv
588.647 158.642 589.019 158.678 589.379 158.738 cv
589.727 158.798 590.051 158.882 590.351 158.99 cv
f
592.691 163.874 mo
593.927 163.874 li
593.927 165.362 li
592.691 165.362 li
592.691 163.874 li
592.691 159.158 mo
593.927 159.158 li
593.927 160.646 li
592.691 160.646 li
592.691 159.158 li
f
601.511 157.586 mo
601.511 160.874 li
602.999 160.874 li
603.551 160.874 603.971 160.742 604.271 160.454 cv
604.571 160.166 604.727 159.758 604.727 159.23 cv
604.727 158.702 604.571 158.306 604.271 158.018 cv
603.971 157.73 603.551 157.586 602.999 157.586 cv
601.511 157.586 li
600.323 156.614 mo
602.999 156.614 li
603.971 156.614 604.715 156.842 605.219 157.286 cv
605.723 157.73 605.975 158.378 605.975 159.23 cv
605.975 160.094 605.723 160.754 605.219 161.186 cv
604.715 161.63 603.971 161.846 602.999 161.846 cv
601.511 161.846 li
601.511 165.362 li
600.323 165.362 li
600.323 156.614 li
f
grestore
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
453.53 125.699 mo
613.955 125.699 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
453.53 125.699 mo
450.03 125.699 li
f
453.53 125.699 mo
450.03 125.699 li
@
423.612 122.293 mo
423 122.293 422.544 122.593 422.232 123.193 cv
421.92 123.793 421.776 124.693 421.776 125.893 cv
421.776 127.093 421.92 127.993 422.232 128.593 cv
422.544 129.193 423 129.493 423.612 129.493 cv
424.224 129.493 424.68 129.193 424.992 128.593 cv
425.292 127.993 425.448 127.093 425.448 125.893 cv
425.448 124.693 425.292 123.793 424.992 123.193 cv
424.68 122.593 424.224 122.293 423.612 122.293 cv
423.612 121.357 mo
424.584 121.357 425.328 121.753 425.856 122.521 cv
426.372 123.301 426.636 124.429 426.636 125.893 cv
426.636 127.369 426.372 128.497 425.856 129.265 cv
425.328 130.033 424.584 130.417 423.612 130.417 cv
422.628 130.417 421.872 130.033 421.356 129.265 cv
420.84 128.497 420.588 127.369 420.588 125.893 cv
420.588 124.429 420.84 123.301 421.356 122.521 cv
421.872 121.753 422.628 121.357 423.612 121.357 cv
f
428.712 128.773 mo
429.948 128.773 li
429.948 130.261 li
428.712 130.261 li
428.712 128.773 li
f
435.06 126.109 mo
434.496 126.109 434.052 126.265 433.728 126.565 cv
433.404 126.865 433.248 127.273 433.248 127.801 cv
433.248 128.329 433.404 128.749 433.728 129.049 cv
434.052 129.349 434.496 129.493 435.06 129.493 cv
435.612 129.493 436.056 129.349 436.38 129.037 cv
436.704 128.737 436.872 128.329 436.872 127.801 cv
436.872 127.273 436.704 126.865 436.392 126.565 cv
436.068 126.265 435.624 126.109 435.06 126.109 cv
433.872 125.605 mo
433.368 125.485 432.972 125.245 432.684 124.897 cv
432.396 124.549 432.264 124.129 432.264 123.625 cv
432.264 122.929 432.504 122.377 433.008 121.969 cv
433.5 121.561 434.184 121.357 435.06 121.357 cv
435.924 121.357 436.608 121.561 437.112 121.969 cv
437.604 122.377 437.856 122.929 437.856 123.625 cv
437.856 124.129 437.712 124.549 437.424 124.897 cv
437.136 125.245 436.752 125.485 436.248 125.605 cv
436.812 125.737 437.256 126.001 437.58 126.385 cv
437.892 126.769 438.06 127.249 438.06 127.801 cv
438.06 128.653 437.796 129.301 437.28 129.745 cv
436.752 130.201 436.02 130.417 435.06 130.417 cv
434.088 130.417 433.344 130.201 432.828 129.745 cv
432.312 129.301 432.06 128.653 432.06 127.801 cv
432.06 127.249 432.216 126.769 432.54 126.385 cv
432.852 126.001 433.296 125.737 433.872 125.605 cv
433.44 123.733 mo
433.44 124.189 433.572 124.549 433.86 124.801 cv
434.148 125.053 434.544 125.173 435.06 125.173 cv
435.564 125.173 435.96 125.053 436.248 124.801 cv
436.536 124.549 436.68 124.189 436.68 123.733 cv
436.68 123.277 436.536 122.929 436.248 122.677 cv
435.96 122.425 435.564 122.293 435.06 122.293 cv
434.544 122.293 434.148 122.425 433.86 122.677 cv
433.572 122.929 433.44 123.277 433.44 123.733 cv
f
443.412 122.545 mo
440.424 127.213 li
443.412 127.213 li
443.412 122.545 li
443.1 121.513 mo
444.588 121.513 li
444.588 127.213 li
445.836 127.213 li
445.836 128.197 li
444.588 128.197 li
444.588 130.261 li
443.412 130.261 li
443.412 128.197 li
439.464 128.197 li
439.464 127.057 li
443.1 121.513 li
f
grestore
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
453.53 96.5691 mo
613.955 96.5691 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
453.53 96.5691 mo
450.03 96.5691 li
f
453.53 96.5691 mo
450.03 96.5691 li
@
423.612 93.1636 mo
423 93.1636 422.544 93.4636 422.232 94.0636 cv
421.92 94.6636 421.776 95.5636 421.776 96.7636 cv
421.776 97.9636 421.92 98.8636 422.232 99.4636 cv
422.544 100.064 423 100.364 423.612 100.364 cv
424.224 100.364 424.68 100.064 424.992 99.4636 cv
425.292 98.8636 425.448 97.9636 425.448 96.7636 cv
425.448 95.5636 425.292 94.6636 424.992 94.0636 cv
424.68 93.4636 424.224 93.1636 423.612 93.1636 cv
423.612 92.2276 mo
424.584 92.2276 425.328 92.6236 425.856 93.3916 cv
426.372 94.1716 426.636 95.2996 426.636 96.7636 cv
426.636 98.2396 426.372 99.3676 425.856 100.136 cv
425.328 100.904 424.584 101.288 423.612 101.288 cv
422.628 101.288 421.872 100.904 421.356 100.136 cv
420.84 99.3676 420.588 98.2396 420.588 96.7636 cv
420.588 95.2996 420.84 94.1716 421.356 93.3916 cv
421.872 92.6236 422.628 92.2276 423.612 92.2276 cv
f
428.712 99.6436 mo
429.948 99.6436 li
429.948 101.132 li
428.712 101.132 li
428.712 99.6436 li
f
435.06 96.9796 mo
434.496 96.9796 434.052 97.1356 433.728 97.4356 cv
433.404 97.7356 433.248 98.1436 433.248 98.6716 cv
433.248 99.1996 433.404 99.6196 433.728 99.9196 cv
434.052 100.22 434.496 100.364 435.06 100.364 cv
435.612 100.364 436.056 100.22 436.38 99.9076 cv
436.704 99.6076 436.872 99.1996 436.872 98.6716 cv
436.872 98.1436 436.704 97.7356 436.392 97.4356 cv
436.068 97.1356 435.624 96.9796 435.06 96.9796 cv
433.872 96.4756 mo
433.368 96.3556 432.972 96.1156 432.684 95.7676 cv
432.396 95.4196 432.264 94.9996 432.264 94.4956 cv
432.264 93.7996 432.504 93.2476 433.008 92.8396 cv
433.5 92.4316 434.184 92.2276 435.06 92.2276 cv
435.924 92.2276 436.608 92.4316 437.112 92.8396 cv
437.604 93.2476 437.856 93.7996 437.856 94.4956 cv
437.856 94.9996 437.712 95.4196 437.424 95.7676 cv
437.136 96.1156 436.752 96.3556 436.248 96.4756 cv
436.812 96.6076 437.256 96.8716 437.58 97.2556 cv
437.892 97.6396 438.06 98.1196 438.06 98.6716 cv
438.06 99.5236 437.796 100.172 437.28 100.616 cv
436.752 101.072 436.02 101.288 435.06 101.288 cv
434.088 101.288 433.344 101.072 432.828 100.616 cv
432.312 100.172 432.06 99.5236 432.06 98.6716 cv
432.06 98.1196 432.216 97.6396 432.54 97.2556 cv
432.852 96.8716 433.296 96.6076 433.872 96.4756 cv
433.44 94.6036 mo
433.44 95.0596 433.572 95.4196 433.86 95.6716 cv
434.148 95.9236 434.544 96.0436 435.06 96.0436 cv
435.564 96.0436 435.96 95.9236 436.248 95.6716 cv
436.536 95.4196 436.68 95.0596 436.68 94.6036 cv
436.68 94.1476 436.536 93.7996 436.248 93.5476 cv
435.96 93.2956 435.564 93.1636 435.06 93.1636 cv
434.544 93.1636 434.148 93.2956 433.86 93.5476 cv
433.572 93.7996 433.44 94.1476 433.44 94.6036 cv
f
442.692 96.9796 mo
442.128 96.9796 441.684 97.1356 441.36 97.4356 cv
441.036 97.7356 440.88 98.1436 440.88 98.6716 cv
440.88 99.1996 441.036 99.6196 441.36 99.9196 cv
441.684 100.22 442.128 100.364 442.692 100.364 cv
443.244 100.364 443.688 100.22 444.012 99.9076 cv
444.336 99.6076 444.504 99.1996 444.504 98.6716 cv
444.504 98.1436 444.336 97.7356 444.024 97.4356 cv
443.7 97.1356 443.256 96.9796 442.692 96.9796 cv
441.504 96.4756 mo
441 96.3556 440.604 96.1156 440.316 95.7676 cv
440.028 95.4196 439.896 94.9996 439.896 94.4956 cv
439.896 93.7996 440.136 93.2476 440.64 92.8396 cv
441.132 92.4316 441.816 92.2276 442.692 92.2276 cv
443.556 92.2276 444.24 92.4316 444.744 92.8396 cv
445.236 93.2476 445.488 93.7996 445.488 94.4956 cv
445.488 94.9996 445.344 95.4196 445.056 95.7676 cv
444.768 96.1156 444.384 96.3556 443.88 96.4756 cv
444.444 96.6076 444.888 96.8716 445.212 97.2556 cv
445.524 97.6396 445.692 98.1196 445.692 98.6716 cv
445.692 99.5236 445.428 100.172 444.912 100.616 cv
444.384 101.072 443.652 101.288 442.692 101.288 cv
441.72 101.288 440.976 101.072 440.46 100.616 cv
439.944 100.172 439.692 99.5236 439.692 98.6716 cv
439.692 98.1196 439.848 97.6396 440.172 97.2556 cv
440.484 96.8716 440.928 96.6076 441.504 96.4756 cv
441.072 94.6036 mo
441.072 95.0596 441.204 95.4196 441.492 95.6716 cv
441.78 95.9236 442.176 96.0436 442.692 96.0436 cv
443.196 96.0436 443.592 95.9236 443.88 95.6716 cv
444.168 95.4196 444.312 95.0596 444.312 94.6036 cv
444.312 94.1476 444.168 93.7996 443.88 93.5476 cv
443.592 93.2956 443.196 93.1636 442.692 93.1636 cv
442.176 93.1636 441.78 93.2956 441.492 93.5476 cv
441.204 93.7996 441.072 94.1476 441.072 94.6036 cv
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
453.53 67.4393 mo
613.955 67.4393 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
453.53 67.4393 mo
450.03 67.4393 li
f
453.53 67.4393 mo
450.03 67.4393 li
@
423.612 64.0338 mo
423 64.0338 422.544 64.3338 422.232 64.9338 cv
421.92 65.5338 421.776 66.4338 421.776 67.6338 cv
421.776 68.8338 421.92 69.7338 422.232 70.3338 cv
422.544 70.9338 423 71.2338 423.612 71.2338 cv
424.224 71.2338 424.68 70.9338 424.992 70.3338 cv
425.292 69.7338 425.448 68.8338 425.448 67.6338 cv
425.448 66.4338 425.292 65.5338 424.992 64.9338 cv
424.68 64.3338 424.224 64.0338 423.612 64.0338 cv
423.612 63.0978 mo
424.584 63.0978 425.328 63.4938 425.856 64.2618 cv
426.372 65.0418 426.636 66.1698 426.636 67.6338 cv
426.636 69.1098 426.372 70.2378 425.856 71.0058 cv
425.328 71.7738 424.584 72.1578 423.612 72.1578 cv
422.628 72.1578 421.872 71.7738 421.356 71.0058 cv
420.84 70.2378 420.588 69.1098 420.588 67.6338 cv
420.588 66.1698 420.84 65.0418 421.356 64.2618 cv
421.872 63.4938 422.628 63.0978 423.612 63.0978 cv
f
428.712 70.5138 mo
429.948 70.5138 li
429.948 72.0018 li
428.712 72.0018 li
428.712 70.5138 li
f
432.564 71.8218 mo
432.564 70.7418 li
432.852 70.8858 433.152 70.9938 433.464 71.0658 cv
433.764 71.1378 434.064 71.1738 434.364 71.1738 cv
435.132 71.1738 435.732 70.9218 436.14 70.3938 cv
436.548 69.8658 436.788 69.0738 436.86 67.9938 cv
436.62 68.3298 436.332 68.5938 435.996 68.7738 cv
435.648 68.9538 435.264 69.0378 434.844 69.0378 cv
433.956 69.0378 433.26 68.7738 432.756 68.2458 cv
432.252 67.7178 432 66.9978 432 66.0738 cv
432 65.1858 432.264 64.4658 432.792 63.9138 cv
433.32 63.3738 434.028 63.0978 434.916 63.0978 cv
435.924 63.0978 436.704 63.4938 437.232 64.2618 cv
437.76 65.0418 438.036 66.1698 438.036 67.6338 cv
438.036 69.0258 437.7 70.1178 437.052 70.9338 cv
436.392 71.7498 435.516 72.1578 434.412 72.1578 cv
434.112 72.1578 433.812 72.1218 433.512 72.0738 cv
433.2 72.0258 432.888 71.9418 432.564 71.8218 cv
434.916 68.1138 mo
435.444 68.1138 435.864 67.9338 436.176 67.5738 cv
436.488 67.2138 436.644 66.7098 436.644 66.0738 cv
436.644 65.4498 436.488 64.9458 436.176 64.5858 cv
435.864 64.2258 435.444 64.0338 434.916 64.0338 cv
434.388 64.0338 433.968 64.2258 433.656 64.5858 cv
433.344 64.9458 433.188 65.4498 433.188 66.0738 cv
433.188 66.7098 433.344 67.2138 433.656 67.5738 cv
433.968 67.9338 434.388 68.1138 434.916 68.1138 cv
f
441.18 71.0058 mo
445.308 71.0058 li
445.308 72.0018 li
439.752 72.0018 li
439.752 71.0058 li
440.196 70.5498 440.808 69.9258 441.588 69.1338 cv
442.356 68.3538 442.848 67.8498 443.052 67.6218 cv
443.436 67.2018 443.7 66.8418 443.844 66.5418 cv
443.988 66.2538 444.072 65.9538 444.072 65.6658 cv
444.072 65.2098 443.904 64.8258 443.58 64.5378 cv
443.256 64.2498 442.836 64.0938 442.308 64.0938 cv
441.936 64.0938 441.54 64.1658 441.132 64.2858 cv
440.724 64.4178 440.28 64.6098 439.812 64.8738 cv
439.812 63.6738 li
440.292 63.4818 440.736 63.3378 441.144 63.2418 cv
441.552 63.1458 441.936 63.0978 442.284 63.0978 cv
443.184 63.0978 443.904 63.3258 444.444 63.7818 cv
444.984 64.2378 445.26 64.8378 445.26 65.5938 cv
445.26 65.9538 445.188 66.3018 445.056 66.6138 cv
444.924 66.9378 444.684 67.3218 444.324 67.7538 cv
444.228 67.8738 443.916 68.1978 443.388 68.7378 cv
442.86 69.2778 442.128 70.0338 441.18 71.0058 cv
f
grestore
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
453.53 38.3095 mo
613.955 38.3095 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
453.53 38.3095 mo
450.03 38.3095 li
f
453.53 38.3095 mo
450.03 38.3095 li
@
423.612 34.904 mo
423 34.904 422.544 35.204 422.232 35.804 cv
421.92 36.404 421.776 37.304 421.776 38.504 cv
421.776 39.704 421.92 40.604 422.232 41.204 cv
422.544 41.804 423 42.104 423.612 42.104 cv
424.224 42.104 424.68 41.804 424.992 41.204 cv
425.292 40.604 425.448 39.704 425.448 38.504 cv
425.448 37.304 425.292 36.404 424.992 35.804 cv
424.68 35.204 424.224 34.904 423.612 34.904 cv
423.612 33.968 mo
424.584 33.968 425.328 34.364 425.856 35.132 cv
426.372 35.912 426.636 37.04 426.636 38.504 cv
426.636 39.98 426.372 41.108 425.856 41.876 cv
425.328 42.644 424.584 43.028 423.612 43.028 cv
422.628 43.028 421.872 42.644 421.356 41.876 cv
420.84 41.108 420.588 39.98 420.588 38.504 cv
420.588 37.04 420.84 35.912 421.356 35.132 cv
421.872 34.364 422.628 33.968 423.612 33.968 cv
f
428.712 41.384 mo
429.948 41.384 li
429.948 42.872 li
428.712 42.872 li
428.712 41.384 li
f
432.564 42.692 mo
432.564 41.612 li
432.852 41.756 433.152 41.864 433.464 41.936 cv
433.764 42.008 434.064 42.044 434.364 42.044 cv
435.132 42.044 435.732 41.792 436.14 41.264 cv
436.548 40.736 436.788 39.944 436.86 38.864 cv
436.62 39.2 436.332 39.464 435.996 39.644 cv
435.648 39.824 435.264 39.908 434.844 39.908 cv
433.956 39.908 433.26 39.644 432.756 39.116 cv
432.252 38.588 432 37.868 432 36.944 cv
432 36.056 432.264 35.336 432.792 34.784 cv
433.32 34.244 434.028 33.968 434.916 33.968 cv
435.924 33.968 436.704 34.364 437.232 35.132 cv
437.76 35.912 438.036 37.04 438.036 38.504 cv
438.036 39.896 437.7 40.988 437.052 41.804 cv
436.392 42.62 435.516 43.028 434.412 43.028 cv
434.112 43.028 433.812 42.992 433.512 42.944 cv
433.2 42.896 432.888 42.812 432.564 42.692 cv
434.916 38.984 mo
435.444 38.984 435.864 38.804 436.176 38.444 cv
436.488 38.084 436.644 37.58 436.644 36.944 cv
436.644 36.32 436.488 35.816 436.176 35.456 cv
435.864 35.096 435.444 34.904 434.916 34.904 cv
434.388 34.904 433.968 35.096 433.656 35.456 cv
433.344 35.816 433.188 36.32 433.188 36.944 cv
433.188 37.58 433.344 38.084 433.656 38.444 cv
433.968 38.804 434.388 38.984 434.916 38.984 cv
f
442.836 38.024 mo
442.308 38.024 441.888 38.216 441.576 38.576 cv
441.264 38.936 441.108 39.44 441.108 40.064 cv
441.108 40.7 441.264 41.204 441.576 41.564 cv
441.888 41.924 442.308 42.104 442.836 42.104 cv
443.364 42.104 443.784 41.924 444.096 41.564 cv
444.408 41.204 444.564 40.7 444.564 40.064 cv
444.564 39.44 444.408 38.936 444.096 38.576 cv
443.784 38.216 443.364 38.024 442.836 38.024 cv
445.188 34.316 mo
445.188 35.396 li
444.888 35.252 444.588 35.144 444.288 35.072 cv
443.976 35 443.676 34.964 443.388 34.964 cv
442.596 34.964 441.996 35.228 441.588 35.756 cv
441.18 36.284 440.94 37.088 440.892 38.144 cv
441.12 37.808 441.408 37.544 441.756 37.364 cv
442.104 37.184 442.488 37.088 442.908 37.088 cv
443.784 37.088 444.48 37.364 444.984 37.892 cv
445.488 38.42 445.752 39.152 445.752 40.064 cv
445.752 40.964 445.476 41.684 444.948 42.224 cv
444.42 42.764 443.712 43.028 442.836 43.028 cv
441.828 43.028 441.048 42.644 440.52 41.876 cv
439.98 41.108 439.716 39.98 439.716 38.504 cv
439.716 37.124 440.04 36.02 440.7 35.204 cv
441.348 34.388 442.236 33.968 443.34 33.968 cv
443.628 33.968 443.928 34.004 444.24 34.052 cv
444.54 34.112 444.852 34.196 445.188 34.316 cv
f
gsave
453.53 133.612 mo
613.955 133.612 li
613.955 9.17972 li
453.53 9.17972 li
453.53 133.612 li
clp
1 lw
[1 1.65 ] 0 dsh
453.53 9.17969 mo
613.955 9.17969 li
1 /0 /CSD get_res sepcs
.137255 sep
@
grestore
453.53 9.17969 mo
450.03 9.17969 li
f
453.53 9.17969 mo
450.03 9.17969 li
@
421.284 12.7462 mo
423.216 12.7462 li
423.216 6.07416 li
421.116 6.4942 li
421.116 5.41418 li
423.204 4.9942 li
424.392 4.9942 li
424.392 12.7462 li
426.324 12.7462 li
426.324 13.7422 li
421.284 13.7422 li
421.284 12.7462 li
f
428.712 12.2542 mo
429.948 12.2542 li
429.948 13.7422 li
428.712 13.7422 li
428.712 12.2542 li
f
435.06 5.77417 mo
434.448 5.77417 433.992 6.07416 433.68 6.67419 cv
433.368 7.27417 433.224 8.17419 433.224 9.37418 cv
433.224 10.5742 433.368 11.4742 433.68 12.0742 cv
433.992 12.6742 434.448 12.9742 435.06 12.9742 cv
435.672 12.9742 436.128 12.6742 436.44 12.0742 cv
436.74 11.4742 436.896 10.5742 436.896 9.37418 cv
436.896 8.17419 436.74 7.27417 436.44 6.67419 cv
436.128 6.07416 435.672 5.77417 435.06 5.77417 cv
435.06 4.8382 mo
436.032 4.8382 436.776 5.23419 437.304 6.0022 cv
437.82 6.78217 438.084 7.91016 438.084 9.37418 cv
438.084 10.8502 437.82 11.9782 437.304 12.7462 cv
436.776 13.5142 436.032 13.8982 435.06 13.8982 cv
434.076 13.8982 433.32 13.5142 432.804 12.7462 cv
432.288 11.9782 432.036 10.8502 432.036 9.37418 cv
432.036 7.91016 432.288 6.78217 432.804 6.0022 cv
433.32 5.23419 434.076 4.8382 435.06 4.8382 cv
f
442.692 5.77417 mo
442.08 5.77417 441.624 6.07416 441.312 6.67419 cv
441 7.27417 440.856 8.17419 440.856 9.37418 cv
440.856 10.5742 441 11.4742 441.312 12.0742 cv
441.624 12.6742 442.08 12.9742 442.692 12.9742 cv
443.304 12.9742 443.76 12.6742 444.072 12.0742 cv
444.372 11.4742 444.528 10.5742 444.528 9.37418 cv
444.528 8.17419 444.372 7.27417 444.072 6.67419 cv
443.76 6.07416 443.304 5.77417 442.692 5.77417 cv
442.692 4.8382 mo
443.664 4.8382 444.408 5.23419 444.936 6.0022 cv
445.452 6.78217 445.716 7.91016 445.716 9.37418 cv
445.716 10.8502 445.452 11.9782 444.936 12.7462 cv
444.408 13.5142 443.664 13.8982 442.692 13.8982 cv
441.708 13.8982 440.952 13.5142 440.436 12.7462 cv
439.92 11.9782 439.668 10.8502 439.668 9.37418 cv
439.668 7.91016 439.92 6.78217 440.436 6.0022 cv
440.952 5.23419 441.708 4.8382 442.692 4.8382 cv
f
1 lw
2 lc
460.822 107.704 mo
497.282 19.6664 li
533.743 19.4261 li
570.203 17.7075 li
606.663 19.062 li
.930816 .793027 0 0 cmyk
@
gsave
458.822 109.704 mo
462.822 109.704 li
462.822 105.704 li
458.822 105.704 li
458.822 109.704 li
clp
460.822 106.204 mo
459.322 109.204 li
462.322 109.204 li
cp
f
0 lc
0 lj
460.822 106.204 mo
459.322 109.204 li
462.322 109.204 li
cp
@
grestore
gsave
495.282 21.6665 mo
499.282 21.6665 li
499.282 17.6664 li
495.282 17.6664 li
495.282 21.6665 li
clp
497.282 18.1664 mo
495.782 21.1664 li
498.782 21.1664 li
cp
f
0 lc
0 lj
497.282 18.1664 mo
495.782 21.1664 li
498.782 21.1664 li
cp
@
grestore
gsave
531.743 21.4262 mo
535.743 21.4262 li
535.743 17.4261 li
531.743 17.4261 li
531.743 21.4262 li
clp
533.743 17.9261 mo
532.243 20.9261 li
535.243 20.9261 li
cp
f
0 lc
0 lj
533.743 17.9261 mo
532.243 20.9261 li
535.243 20.9261 li
cp
@
grestore
gsave
568.203 19.7075 mo
572.203 19.7075 li
572.203 15.7076 li
568.203 15.7076 li
568.203 19.7075 li
clp
570.203 16.2075 mo
568.703 19.2075 li
571.703 19.2075 li
cp
f
0 lc
0 lj
570.203 16.2075 mo
568.703 19.2075 li
571.703 19.2075 li
cp
@
grestore
gsave
604.663 21.062 mo
608.663 21.062 li
608.663 17.062 li
604.663 17.062 li
604.663 21.062 li
clp
606.663 17.562 mo
605.163 20.562 li
608.163 20.562 li
cp
f
0 lc
0 lj
606.663 17.562 mo
605.163 20.562 li
608.163 20.562 li
cp
@
grestore
460.822 122.021 mo
497.282 24.3709 li
533.743 22.492 li
570.203 19.5353 li
606.663 21.8876 li
1 /0 /CSD get_res sepcs
.498039 sep
@
gsave
458.822 124.021 mo
462.822 124.021 li
462.822 120.021 li
458.822 120.021 li
458.822 124.021 li
clp
460.822 123.521 mo
461.22 123.521 461.602 123.363 461.883 123.082 cv
462.164 122.801 462.322 122.419 462.322 122.021 cv
462.322 121.623 462.164 121.242 461.883 120.961 cv
461.602 120.679 461.22 120.521 460.822 120.521 cv
460.424 120.521 460.043 120.679 459.761 120.961 cv
459.48 121.242 459.322 121.623 459.322 122.021 cv
459.322 122.419 459.48 122.801 459.761 123.082 cv
460.043 123.363 460.424 123.521 460.822 123.521 cv
cp
f
0 lc
460.822 123.521 mo
461.22 123.521 461.602 123.363 461.883 123.082 cv
462.164 122.801 462.322 122.419 462.322 122.021 cv
462.322 121.623 462.164 121.242 461.883 120.961 cv
461.602 120.679 461.22 120.521 460.822 120.521 cv
460.424 120.521 460.043 120.679 459.761 120.961 cv
459.48 121.242 459.322 121.623 459.322 122.021 cv
459.322 122.419 459.48 122.801 459.761 123.082 cv
460.043 123.363 460.424 123.521 460.822 123.521 cv
cp
@
grestore
gsave
495.282 26.371 mo
499.282 26.371 li
499.282 22.3709 li
495.282 22.3709 li
495.282 26.371 li
clp
497.282 25.8709 mo
497.68 25.8709 498.062 25.7128 498.343 25.4315 cv
498.624 25.1502 498.782 24.7687 498.782 24.3709 cv
498.782 23.9731 498.624 23.5915 498.343 23.3102 cv
498.062 23.0289 497.68 22.8709 497.282 22.8709 cv
496.885 22.8709 496.503 23.0289 496.222 23.3102 cv
495.94 23.5915 495.782 23.9731 495.782 24.3709 cv
495.782 24.7687 495.94 25.1502 496.222 25.4315 cv
496.503 25.7128 496.885 25.8709 497.282 25.8709 cv
cp
f
0 lc
497.282 25.8709 mo
497.68 25.8709 498.062 25.7128 498.343 25.4315 cv
498.624 25.1502 498.782 24.7687 498.782 24.3709 cv
498.782 23.9731 498.624 23.5915 498.343 23.3102 cv
498.062 23.0289 497.68 22.8709 497.282 22.8709 cv
496.885 22.8709 496.503 23.0289 496.222 23.3102 cv
495.94 23.5915 495.782 23.9731 495.782 24.3709 cv
495.782 24.7687 495.94 25.1502 496.222 25.4315 cv
496.503 25.7128 496.885 25.8709 497.282 25.8709 cv
cp
@
grestore
gsave
531.743 24.492 mo
535.743 24.492 li
535.743 20.4919 li
531.743 20.4919 li
531.743 24.492 li
clp
533.743 23.992 mo
534.141 23.992 534.522 23.8339 534.803 23.5526 cv
535.085 23.2713 535.243 22.8898 535.243 22.492 cv
535.243 22.0942 535.085 21.7126 534.803 21.4313 cv
534.522 21.15 534.141 20.992 533.743 20.992 cv
533.345 20.992 532.963 21.15 532.682 21.4313 cv
532.401 21.7126 532.243 22.0942 532.243 22.492 cv
532.243 22.8898 532.401 23.2713 532.682 23.5526 cv
532.963 23.8339 533.345 23.992 533.743 23.992 cv
cp
f
0 lc
533.743 23.992 mo
534.141 23.992 534.522 23.8339 534.803 23.5526 cv
535.085 23.2713 535.243 22.8898 535.243 22.492 cv
535.243 22.0942 535.085 21.7126 534.803 21.4313 cv
534.522 21.15 534.141 20.992 533.743 20.992 cv
533.345 20.992 532.963 21.15 532.682 21.4313 cv
532.401 21.7126 532.243 22.0942 532.243 22.492 cv
532.243 22.8898 532.401 23.2713 532.682 23.5526 cv
532.963 23.8339 533.345 23.992 533.743 23.992 cv
cp
@
grestore
gsave
568.203 21.5353 mo
572.203 21.5353 li
572.203 17.5352 li
568.203 17.5352 li
568.203 21.5353 li
clp
570.203 21.0353 mo
570.601 21.0353 570.982 20.8772 571.263 20.5959 cv
571.545 20.3146 571.703 19.9331 571.703 19.5353 cv
571.703 19.1375 571.545 18.7559 571.263 18.4746 cv
570.982 18.1933 570.601 18.0353 570.203 18.0353 cv
569.805 18.0353 569.423 18.1933 569.142 18.4746 cv
568.861 18.7559 568.703 19.1375 568.703 19.5353 cv
568.703 19.9331 568.861 20.3146 569.142 20.5959 cv
569.423 20.8772 569.805 21.0353 570.203 21.0353 cv
cp
f
0 lc
570.203 21.0353 mo
570.601 21.0353 570.982 20.8772 571.263 20.5959 cv
571.545 20.3146 571.703 19.9331 571.703 19.5353 cv
571.703 19.1375 571.545 18.7559 571.263 18.4746 cv
570.982 18.1933 570.601 18.0353 570.203 18.0353 cv
569.805 18.0353 569.423 18.1933 569.142 18.4746 cv
568.861 18.7559 568.703 19.1375 568.703 19.5353 cv
568.703 19.9331 568.861 20.3146 569.142 20.5959 cv
569.423 20.8772 569.805 21.0353 570.203 21.0353 cv
cp
@
grestore
gsave
604.663 23.8876 mo
608.663 23.8876 li
608.663 19.8875 li
604.663 19.8875 li
604.663 23.8876 li
clp
606.663 23.3876 mo
607.061 23.3876 607.443 23.2295 607.724 22.9482 cv
608.005 22.6669 608.163 22.2854 608.163 21.8876 cv
608.163 21.4898 608.005 21.1082 607.724 20.8269 cv
607.443 20.5456 607.061 20.3876 606.663 20.3876 cv
606.265 20.3876 605.884 20.5456 605.602 20.8269 cv
605.321 21.1082 605.163 21.4898 605.163 21.8876 cv
605.163 22.2854 605.321 22.6669 605.602 22.9482 cv
605.884 23.2295 606.265 23.3876 606.663 23.3876 cv
cp
f
0 lc
606.663 23.3876 mo
607.061 23.3876 607.443 23.2295 607.724 22.9482 cv
608.005 22.6669 608.163 22.2854 608.163 21.8876 cv
608.163 21.4898 608.005 21.1082 607.724 20.8269 cv
607.443 20.5456 607.061 20.3876 606.663 20.3876 cv
606.265 20.3876 605.884 20.5456 605.602 20.8269 cv
605.321 21.1082 605.163 21.4898 605.163 21.8876 cv
605.163 22.2854 605.321 22.6669 605.602 22.9482 cv
605.884 23.2295 606.265 23.3876 606.663 23.3876 cv
cp
@
grestore
460.822 128.022 mo
497.282 24.5238 li
533.743 22.827 li
570.203 19.6082 li
606.663 22.1643 li
.926818 .245335 1 .155612 cmyk
@
gsave
458.896 129.736 mo
462.749 129.736 li
462.749 126.022 li
458.896 126.022 li
458.896 129.736 li
clp
460.822 126.522 mo
460.485 127.559 li
459.396 127.559 li
460.277 128.199 li
459.94 129.236 li
460.822 128.595 li
461.704 129.236 li
461.367 128.199 li
462.249 127.559 li
461.159 127.559 li
cp
f
0 lc
2 lj
460.822 126.522 mo
460.485 127.559 li
459.396 127.559 li
460.277 128.199 li
459.94 129.236 li
460.822 128.595 li
461.704 129.236 li
461.367 128.199 li
462.249 127.559 li
461.159 127.559 li
cp
@
grestore
gsave
495.356 26.2374 mo
499.209 26.2374 li
499.209 22.5239 li
495.356 22.5239 li
495.356 26.2374 li
clp
497.282 23.0238 mo
496.946 24.0602 li
495.856 24.0602 li
496.738 24.7008 li
496.401 25.7373 li
497.282 25.0967 li
498.164 25.7373 li
497.827 24.7008 li
498.709 24.0602 li
497.619 24.0602 li
cp
f
0 lc
2 lj
497.282 23.0238 mo
496.946 24.0602 li
495.856 24.0602 li
496.738 24.7008 li
496.401 25.7373 li
497.282 25.0967 li
498.164 25.7373 li
497.827 24.7008 li
498.709 24.0602 li
497.619 24.0602 li
cp
@
grestore
gsave
531.816 24.5405 mo
535.669 24.5405 li
535.669 20.827 li
531.816 20.827 li
531.816 24.5405 li
clp
533.743 21.327 mo
533.406 22.3634 li
532.316 22.3634 li
533.198 23.004 li
532.861 24.0405 li
533.743 23.3999 li
534.624 24.0405 li
534.288 23.004 li
535.169 22.3634 li
534.079 22.3634 li
cp
f
0 lc
2 lj
533.743 21.327 mo
533.406 22.3634 li
532.316 22.3634 li
533.198 23.004 li
532.861 24.0405 li
533.743 23.3999 li
534.624 24.0405 li
534.288 23.004 li
535.169 22.3634 li
534.079 22.3634 li
cp
@
grestore
gsave
568.276 21.3217 mo
572.129 21.3217 li
572.129 17.6082 li
568.276 17.6082 li
568.276 21.3217 li
clp
570.203 18.1082 mo
569.866 19.1447 li
568.776 19.1447 li
569.658 19.7852 li
569.321 20.8217 li
570.203 20.1811 li
571.084 20.8217 li
570.748 19.7852 li
571.629 19.1447 li
570.54 19.1447 li
cp
f
0 lc
2 lj
570.203 18.1082 mo
569.866 19.1447 li
568.776 19.1447 li
569.658 19.7852 li
569.321 20.8217 li
570.203 20.1811 li
571.084 20.8217 li
570.748 19.7852 li
571.629 19.1447 li
570.54 19.1447 li
cp
@
grestore
gsave
604.737 23.8779 mo
608.59 23.8779 li
608.59 20.1643 li
604.737 20.1643 li
604.737 23.8779 li
clp
606.663 20.6643 mo
606.326 21.7007 li
605.237 21.7007 li
606.118 22.3413 li
605.781 23.3778 li
606.663 22.7372 li
607.545 23.3778 li
607.208 22.3413 li
608.09 21.7007 li
607 21.7007 li
cp
f
0 lc
2 lj
606.663 20.6643 mo
606.326 21.7007 li
605.237 21.7007 li
606.118 22.3413 li
605.781 23.3778 li
606.663 22.7372 li
607.545 23.3778 li
607.208 22.3413 li
608.09 21.7007 li
607 21.7007 li
cp
@
grestore
460.822 106.116 mo
497.282 18.7488 li
533.743 17.7876 li
570.203 16.2291 li
606.663 18.5741 li
0 1 1 0 cmyk
@
gsave
458.822 108.116 mo
462.822 108.116 li
462.822 104.116 li
458.822 104.116 li
458.822 108.116 li
clp
459.322 107.616 mo
462.322 107.616 li
462.322 104.616 li
459.322 104.616 li
cp
f
0 lc
0 lj
459.322 107.616 mo
462.322 107.616 li
462.322 104.616 li
459.322 104.616 li
cp
@
grestore
gsave
495.282 20.7488 mo
499.282 20.7488 li
499.282 16.7487 li
495.282 16.7487 li
495.282 20.7488 li
clp
495.782 20.2488 mo
498.782 20.2488 li
498.782 17.2488 li
495.782 17.2488 li
cp
f
0 lc
0 lj
495.782 20.2488 mo
498.782 20.2488 li
498.782 17.2488 li
495.782 17.2488 li
cp
@
grestore
gsave
531.743 19.7875 mo
535.743 19.7875 li
535.743 15.7876 li
531.743 15.7876 li
531.743 19.7875 li
clp
532.243 19.2876 mo
535.243 19.2876 li
535.243 16.2876 li
532.243 16.2876 li
cp
f
0 lc
0 lj
532.243 19.2876 mo
535.243 19.2876 li
535.243 16.2876 li
532.243 16.2876 li
cp
@
grestore
gsave
568.203 18.229 mo
572.203 18.229 li
572.203 14.2291 li
568.203 14.2291 li
568.203 18.229 li
clp
568.703 17.7291 mo
571.703 17.7291 li
571.703 14.7291 li
568.703 14.7291 li
cp
f
0 lc
0 lj
568.703 17.7291 mo
571.703 17.7291 li
571.703 14.7291 li
568.703 14.7291 li
cp
@
grestore
gsave
604.663 20.574 mo
608.663 20.574 li
608.663 16.5741 li
604.663 16.5741 li
604.663 20.574 li
clp
605.163 20.0741 mo
608.163 20.0741 li
608.163 17.0741 li
605.163 17.0741 li
cp
f
0 lc
0 lj
605.163 20.0741 mo
608.163 20.0741 li
608.163 17.0741 li
605.163 17.0741 li
cp
@
grestore
gsave
-56.7249 521.128 mo
688.475 521.128 li
688.475 -60.6316 li
-56.7249 -60.6316 li
-56.7249 521.128 li
clp
.8 lw
0 lj
453.53 133.612 mo
453.53 9.17969 li
1 /0 /CSD get_res sepcs
1 sep
@
613.955 133.612 mo
613.955 9.17969 li
@
453.53 133.612 mo
613.955 133.612 li
@
453.53 9.17969 mo
613.955 9.17969 li
@
526.988 216.553 mo
119.038 216.553 li
118.315 216.551 117.867 216.375 117.591 216.099 cv
117.315 215.823 117.139 215.376 117.138 214.653 cv
117.138 198.228 li
117.139 197.504 117.315 197.057 117.591 196.781 cv
117.867 196.505 118.315 196.33 119.038 196.328 cv
526.988 196.328 li
527.711 196.33 528.158 196.505 528.434 196.781 cv
528.71 197.057 528.886 197.504 528.888 198.228 cv
528.888 214.653 li
528.886 215.376 528.71 215.823 528.434 216.099 cv
528.158 216.375 527.711 216.551 526.988 216.553 cv
/1 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
526.997 217.553 mo
526.994 217.553 526.991 217.553 526.988 217.553 cv
119.038 217.553 li
119.034 217.553 119.031 217.553 119.028 217.553 cv
118.155 217.553 117.406 217.328 116.884 216.806 cv
116.36 216.282 116.136 215.53 116.138 214.653 cv
116.138 198.228 li
116.136 197.351 116.36 196.598 116.884 196.074 cv
117.406 195.552 118.155 195.328 119.027 195.328 cv
119.03 195.328 119.034 195.328 119.038 195.328 cv
526.988 195.328 li
526.991 195.328 526.995 195.328 526.998 195.328 cv
527.871 195.328 528.619 195.552 529.141 196.074 cv
529.665 196.598 529.89 197.351 529.888 198.228 cv
529.888 214.653 li
529.89 215.53 529.665 216.282 529.141 216.806 cv
528.619 217.328 527.87 217.553 526.997 217.553 cv
119.038 216.553 mo
526.988 216.553 li
527.711 216.551 528.158 216.375 528.434 216.099 cv
528.71 215.823 528.886 215.376 528.888 214.653 cv
528.888 198.228 li
528.886 197.504 528.71 197.057 528.434 196.781 cv
528.158 196.505 527.711 196.33 526.988 196.328 cv
119.038 196.328 li
118.315 196.33 117.867 196.505 117.591 196.781 cv
117.315 197.057 117.139 197.504 117.138 198.228 cv
117.138 214.653 li
117.139 215.376 117.315 215.823 117.591 216.099 cv
117.867 216.375 118.315 216.551 119.038 216.553 cv
119.038 216.553 li
1 /1 /CSD get_res sepcs
.160784 sep
f
1 lw
1 lj
121.438 205.553 mo
145.438 205.553 li
.930816 .793027 0 0 cmyk
@
133.438 204.053 mo
131.938 207.053 li
134.938 207.053 li
cp
f
0 lc
0 lj
133.438 204.053 mo
131.938 207.053 li
134.938 207.053 li
cp
@
157.402 201.977 mo
157.402 205.265 li
158.89 205.265 li
159.442 205.265 159.862 205.133 160.162 204.845 cv
160.462 204.557 160.618 204.149 160.618 203.621 cv
160.618 203.093 160.462 202.697 160.162 202.409 cv
159.862 202.121 159.442 201.977 158.89 201.977 cv
157.402 201.977 li
156.214 201.005 mo
158.89 201.005 li
159.862 201.005 160.606 201.233 161.11 201.677 cv
161.614 202.121 161.866 202.769 161.866 203.621 cv
161.866 204.485 161.614 205.145 161.11 205.577 cv
160.606 206.021 159.862 206.237 158.89 206.237 cv
157.402 206.237 li
157.402 209.753 li
156.214 209.753 li
156.214 201.005 li
.750271 .679713 .654902 .901946 cmyk
f
167.206 204.197 mo
167.086 204.125 166.954 204.077 166.81 204.041 cv
166.666 204.017 166.51 203.993 166.342 203.993 cv
165.73 203.993 165.262 204.197 164.938 204.593 cv
164.602 204.989 164.446 205.553 164.446 206.297 cv
164.446 209.753 li
163.366 209.753 li
163.366 203.189 li
164.446 203.189 li
164.446 204.209 li
164.662 203.813 164.962 203.513 165.322 203.321 cv
165.682 203.129 166.126 203.033 166.654 203.033 cv
166.726 203.033 166.81 203.045 166.906 203.045 cv
166.99 203.057 167.086 203.069 167.206 203.093 cv
167.206 204.197 li
f
173.95 206.201 mo
173.95 206.729 li
168.994 206.729 li
169.042 207.473 169.258 208.049 169.666 208.433 cv
170.062 208.817 170.614 209.009 171.334 209.009 cv
171.742 209.009 172.15 208.961 172.534 208.865 cv
172.918 208.769 173.314 208.613 173.698 208.397 cv
173.698 209.417 li
173.314 209.585 172.918 209.717 172.51 209.789 cv
172.102 209.861 171.682 209.909 171.274 209.909 cv
170.218 209.909 169.39 209.609 168.778 209.009 cv
168.166 208.409 167.866 207.581 167.866 206.537 cv
167.866 205.469 168.154 204.617 168.73 203.981 cv
169.306 203.357 170.098 203.033 171.082 203.033 cv
171.97 203.033 172.666 203.321 173.182 203.885 cv
173.686 204.461 173.95 205.229 173.95 206.201 cv
172.87 205.889 mo
172.858 205.301 172.69 204.833 172.378 204.473 cv
172.054 204.125 171.622 203.945 171.094 203.945 cv
170.494 203.945 170.014 204.125 169.654 204.461 cv
169.294 204.797 169.078 205.277 169.03 205.889 cv
172.87 205.889 li
f
180.442 203.441 mo
180.442 204.449 li
180.13 204.281 179.83 204.161 179.518 204.077 cv
179.206 203.993 178.906 203.945 178.594 203.945 cv
177.898 203.945 177.346 204.173 176.962 204.617 cv
176.578 205.061 176.386 205.685 176.386 206.477 cv
176.386 207.281 176.578 207.905 176.962 208.349 cv
177.346 208.793 177.898 209.009 178.594 209.009 cv
178.906 209.009 179.206 208.973 179.518 208.889 cv
179.83 208.805 180.13 208.673 180.442 208.505 cv
180.442 209.501 li
180.13 209.645 179.818 209.753 179.506 209.813 cv
179.182 209.873 178.834 209.909 178.474 209.909 cv
177.49 209.909 176.698 209.609 176.122 208.985 cv
175.534 208.373 175.246 207.533 175.246 206.477 cv
175.246 205.409 175.534 204.569 176.122 203.957 cv
176.71 203.345 177.514 203.033 178.546 203.033 cv
178.882 203.033 179.206 203.069 179.518 203.141 cv
179.83 203.213 180.142 203.309 180.442 203.441 cv
f
182.314 203.189 mo
183.394 203.189 li
183.394 209.753 li
182.314 209.753 li
182.314 203.189 li
182.314 200.633 mo
183.394 200.633 li
183.394 202.001 li
182.314 202.001 li
182.314 200.633 li
f
189.838 203.381 mo
189.838 204.401 li
189.526 204.257 189.214 204.137 188.89 204.053 cv
188.554 203.981 188.218 203.933 187.87 203.933 cv
187.33 203.933 186.922 204.017 186.658 204.185 cv
186.394 204.353 186.262 204.593 186.262 204.917 cv
186.262 205.169 186.358 205.361 186.55 205.505 cv
186.742 205.649 187.126 205.793 187.702 205.913 cv
188.074 205.997 li
188.842 206.165 189.382 206.405 189.706 206.693 cv
190.018 206.993 190.186 207.413 190.186 207.941 cv
190.186 208.553 189.946 209.033 189.466 209.381 cv
188.986 209.741 188.314 209.909 187.474 209.909 cv
187.114 209.909 186.754 209.873 186.37 209.813 cv
185.986 209.753 185.59 209.657 185.17 209.513 cv
185.17 208.397 li
185.566 208.613 185.962 208.769 186.346 208.865 cv
186.73 208.973 187.114 209.021 187.498 209.021 cv
188.002 209.021 188.398 208.937 188.674 208.769 cv
188.938 208.601 189.082 208.349 189.082 208.025 cv
189.082 207.737 188.974 207.509 188.782 207.353 cv
188.59 207.197 188.158 207.041 187.486 206.897 cv
187.114 206.813 li
186.442 206.669 185.95 206.453 185.662 206.165 cv
185.362 205.877 185.218 205.481 185.218 204.965 cv
185.218 204.353 185.434 203.873 185.866 203.537 cv
186.298 203.201 186.922 203.033 187.738 203.033 cv
188.134 203.033 188.506 203.069 188.866 203.129 cv
189.214 203.189 189.538 203.273 189.838 203.381 cv
f
191.902 203.189 mo
192.982 203.189 li
192.982 209.753 li
191.902 209.753 li
191.902 203.189 li
191.902 200.633 mo
192.982 200.633 li
192.982 202.001 li
191.902 202.001 li
191.902 200.633 li
f
197.782 203.945 mo
197.206 203.945 196.75 204.173 196.414 204.629 cv
196.078 205.085 195.91 205.697 195.91 206.477 cv
195.91 207.269 196.066 207.881 196.402 208.337 cv
196.738 208.793 197.194 209.009 197.782 209.009 cv
198.358 209.009 198.814 208.793 199.15 208.337 cv
199.486 207.881 199.654 207.269 199.654 206.477 cv
199.654 205.709 199.486 205.085 199.15 204.629 cv
198.814 204.173 198.358 203.945 197.782 203.945 cv
197.782 203.033 mo
198.718 203.033 199.45 203.345 199.99 203.945 cv
200.518 204.557 200.794 205.397 200.794 206.477 cv
200.794 207.557 200.518 208.397 199.99 208.997 cv
199.45 209.609 198.718 209.909 197.782 209.909 cv
196.834 209.909 196.09 209.609 195.562 208.997 cv
195.034 208.397 194.77 207.557 194.77 206.477 cv
194.77 205.397 195.034 204.557 195.562 203.945 cv
196.09 203.345 196.834 203.033 197.782 203.033 cv
f
208.042 205.793 mo
208.042 209.753 li
206.962 209.753 li
206.962 205.829 li
206.962 205.205 206.83 204.749 206.59 204.437 cv
206.35 204.125 205.99 203.969 205.51 203.969 cv
204.922 203.969 204.466 204.161 204.13 204.533 cv
203.794 204.905 203.626 205.409 203.626 206.045 cv
203.626 209.753 li
202.546 209.753 li
202.546 203.189 li
203.626 203.189 li
203.626 204.209 li
203.878 203.825 204.178 203.525 204.538 203.333 cv
204.886 203.141 205.294 203.033 205.75 203.033 cv
206.494 203.033 207.07 203.273 207.454 203.741 cv
207.838 204.209 208.042 204.893 208.042 205.793 cv
f
2 lc
1 lj
233.053 205.553 mo
257.053 205.553 li
.531487 .446418 .445197 .0943618 cmyk
@
245.053 207.053 mo
245.451 207.053 245.833 206.895 246.114 206.613 cv
246.395 206.332 246.553 205.95 246.553 205.553 cv
246.553 205.155 246.395 204.773 246.114 204.492 cv
245.833 204.211 245.451 204.053 245.053 204.053 cv
244.655 204.053 244.274 204.211 243.993 204.492 cv
243.711 204.773 243.553 205.155 243.553 205.553 cv
243.553 205.95 243.711 206.332 243.993 206.613 cv
244.274 206.895 244.655 207.053 245.053 207.053 cv
cp
f
0 lc
245.053 207.053 mo
245.451 207.053 245.833 206.895 246.114 206.613 cv
246.395 206.332 246.553 205.95 246.553 205.553 cv
246.553 205.155 246.395 204.773 246.114 204.492 cv
245.833 204.211 245.451 204.053 245.053 204.053 cv
244.655 204.053 244.274 204.211 243.993 204.492 cv
243.711 204.773 243.553 205.155 243.553 205.553 cv
243.553 205.95 243.711 206.332 243.993 206.613 cv
244.274 206.895 244.655 207.053 245.053 207.053 cv
cp
@
271.981 205.649 mo
272.233 205.745 272.485 205.925 272.725 206.201 cv
272.965 206.489 273.205 206.873 273.445 207.365 cv
274.645 209.753 li
273.373 209.753 li
272.257 207.509 li
271.969 206.933 271.681 206.537 271.417 206.345 cv
271.141 206.153 270.769 206.057 270.301 206.057 cv
269.017 206.057 li
269.017 209.753 li
267.829 209.753 li
267.829 201.005 li
270.505 201.005 li
271.501 201.005 272.245 201.221 272.737 201.629 cv
273.229 202.049 273.481 202.685 273.481 203.525 cv
273.481 204.077 273.349 204.545 273.097 204.905 cv
272.833 205.265 272.461 205.517 271.981 205.649 cv
269.017 201.977 mo
269.017 205.085 li
270.505 205.085 li
271.069 205.085 271.501 204.953 271.789 204.689 cv
272.077 204.425 272.233 204.041 272.233 203.525 cv
272.233 203.021 272.077 202.637 271.789 202.373 cv
271.501 202.109 271.069 201.977 270.505 201.977 cv
269.017 201.977 li
.750271 .679713 .654902 .901946 cmyk
f
281.737 206.201 mo
281.737 206.729 li
276.781 206.729 li
276.829 207.473 277.045 208.049 277.453 208.433 cv
277.849 208.817 278.401 209.009 279.121 209.009 cv
279.529 209.009 279.937 208.961 280.321 208.865 cv
280.705 208.769 281.101 208.613 281.485 208.397 cv
281.485 209.417 li
281.101 209.585 280.705 209.717 280.297 209.789 cv
279.889 209.861 279.469 209.909 279.061 209.909 cv
278.005 209.909 277.177 209.609 276.565 209.009 cv
275.953 208.409 275.653 207.581 275.653 206.537 cv
275.653 205.469 275.941 204.617 276.517 203.981 cv
277.093 203.357 277.885 203.033 278.869 203.033 cv
279.757 203.033 280.453 203.321 280.969 203.885 cv
281.473 204.461 281.737 205.229 281.737 206.201 cv
280.657 205.889 mo
280.645 205.301 280.477 204.833 280.165 204.473 cv
279.841 204.125 279.409 203.945 278.881 203.945 cv
278.281 203.945 277.801 204.125 277.441 204.461 cv
277.081 204.797 276.865 205.277 276.817 205.889 cv
280.657 205.889 li
f
288.229 203.441 mo
288.229 204.449 li
287.917 204.281 287.617 204.161 287.305 204.077 cv
286.993 203.993 286.693 203.945 286.381 203.945 cv
285.685 203.945 285.133 204.173 284.749 204.617 cv
284.365 205.061 284.173 205.685 284.173 206.477 cv
284.173 207.281 284.365 207.905 284.749 208.349 cv
285.133 208.793 285.685 209.009 286.381 209.009 cv
286.693 209.009 286.993 208.973 287.305 208.889 cv
287.617 208.805 287.917 208.673 288.229 208.505 cv
288.229 209.501 li
287.917 209.645 287.605 209.753 287.293 209.813 cv
286.969 209.873 286.621 209.909 286.261 209.909 cv
285.277 209.909 284.485 209.609 283.909 208.985 cv
283.321 208.373 283.033 207.533 283.033 206.477 cv
283.033 205.409 283.321 204.569 283.909 203.957 cv
284.497 203.345 285.301 203.033 286.333 203.033 cv
286.669 203.033 286.993 203.069 287.305 203.141 cv
287.617 203.213 287.929 203.309 288.229 203.441 cv
f
293.089 206.453 mo
292.213 206.453 291.613 206.561 291.277 206.753 cv
290.941 206.957 290.773 207.293 290.773 207.773 cv
290.773 208.157 290.893 208.469 291.145 208.685 cv
291.397 208.913 291.745 209.021 292.177 209.021 cv
292.777 209.021 293.257 208.817 293.617 208.385 cv
293.977 207.965 294.157 207.401 294.157 206.693 cv
294.157 206.453 li
293.089 206.453 li
295.237 206.009 mo
295.237 209.753 li
294.157 209.753 li
294.157 208.757 li
293.905 209.165 293.593 209.453 293.233 209.633 cv
292.873 209.813 292.417 209.909 291.889 209.909 cv
291.217 209.909 290.677 209.729 290.281 209.357 cv
289.885 208.985 289.693 208.481 289.693 207.845 cv
289.693 207.113 289.933 206.561 290.437 206.177 cv
290.929 205.805 291.661 205.613 292.645 205.613 cv
294.157 205.613 li
294.157 205.505 li
294.157 205.013 293.989 204.629 293.665 204.353 cv
293.341 204.089 292.885 203.945 292.297 203.945 cv
291.913 203.945 291.553 203.993 291.193 204.089 cv
290.833 204.185 290.497 204.317 290.173 204.485 cv
290.173 203.489 li
290.557 203.345 290.941 203.225 291.313 203.153 cv
291.685 203.081 292.045 203.033 292.405 203.033 cv
293.353 203.033 294.061 203.285 294.529 203.777 cv
294.997 204.269 295.237 205.013 295.237 206.009 cv
f
297.457 200.633 mo
298.537 200.633 li
298.537 209.753 li
297.457 209.753 li
297.457 200.633 li
f
300.793 200.633 mo
301.873 200.633 li
301.873 209.753 li
300.793 209.753 li
300.793 200.633 li
f
2 lc
326.997 205.553 mo
350.997 205.553 li
.926818 .245335 1 .155612 cmyk
@
338.997 204.053 mo
338.66 205.089 li
337.57 205.089 li
338.452 205.73 li
338.115 206.766 li
338.997 206.126 li
339.879 206.766 li
339.542 205.73 li
340.424 205.089 li
339.334 205.089 li
cp
f
0 lc
2 lj
338.997 204.053 mo
338.66 205.089 li
337.57 205.089 li
338.452 205.73 li
338.115 206.766 li
338.997 206.126 li
339.879 206.766 li
339.542 205.73 li
340.424 205.089 li
339.334 205.089 li
cp
@
361.773 201.005 mo
366.801 201.005 li
366.801 202.001 li
362.961 202.001 li
362.961 204.581 li
366.429 204.581 li
366.429 205.577 li
362.961 205.577 li
362.961 209.753 li
361.773 209.753 li
361.773 201.005 li
.750271 .679713 .654902 .901946 cmyk
f
368.985 208.757 mo
370.917 208.757 li
370.917 202.085 li
368.817 202.505 li
368.817 201.425 li
370.905 201.005 li
372.093 201.005 li
372.093 208.757 li
374.025 208.757 li
374.025 209.753 li
368.985 209.753 li
368.985 208.757 li
f
375.717 205.985 mo
378.873 205.985 li
378.873 206.945 li
375.717 206.945 li
375.717 205.985 li
f
384.777 203.381 mo
384.777 204.401 li
384.465 204.257 384.153 204.137 383.829 204.053 cv
383.493 203.981 383.157 203.933 382.809 203.933 cv
382.269 203.933 381.861 204.017 381.597 204.185 cv
381.333 204.353 381.201 204.593 381.201 204.917 cv
381.201 205.169 381.297 205.361 381.489 205.505 cv
381.681 205.649 382.065 205.793 382.641 205.913 cv
383.013 205.997 li
383.781 206.165 384.321 206.405 384.645 206.693 cv
384.957 206.993 385.125 207.413 385.125 207.941 cv
385.125 208.553 384.885 209.033 384.405 209.381 cv
383.925 209.741 383.253 209.909 382.413 209.909 cv
382.053 209.909 381.693 209.873 381.309 209.813 cv
380.925 209.753 380.529 209.657 380.109 209.513 cv
380.109 208.397 li
380.505 208.613 380.901 208.769 381.285 208.865 cv
381.669 208.973 382.053 209.021 382.437 209.021 cv
382.941 209.021 383.337 208.937 383.613 208.769 cv
383.877 208.601 384.021 208.349 384.021 208.025 cv
384.021 207.737 383.913 207.509 383.721 207.353 cv
383.529 207.197 383.097 207.041 382.425 206.897 cv
382.053 206.813 li
381.381 206.669 380.889 206.453 380.601 206.165 cv
380.301 205.877 380.157 205.481 380.157 204.965 cv
380.157 204.353 380.373 203.873 380.805 203.537 cv
381.237 203.201 381.861 203.033 382.677 203.033 cv
383.073 203.033 383.445 203.069 383.805 203.129 cv
384.153 203.189 384.477 203.273 384.777 203.381 cv
f
391.569 203.441 mo
391.569 204.449 li
391.257 204.281 390.957 204.161 390.645 204.077 cv
390.333 203.993 390.033 203.945 389.721 203.945 cv
389.025 203.945 388.473 204.173 388.089 204.617 cv
387.705 205.061 387.513 205.685 387.513 206.477 cv
387.513 207.281 387.705 207.905 388.089 208.349 cv
388.473 208.793 389.025 209.009 389.721 209.009 cv
390.033 209.009 390.333 208.973 390.645 208.889 cv
390.957 208.805 391.257 208.673 391.569 208.505 cv
391.569 209.501 li
391.257 209.645 390.945 209.753 390.633 209.813 cv
390.309 209.873 389.961 209.909 389.601 209.909 cv
388.617 209.909 387.825 209.609 387.249 208.985 cv
386.661 208.373 386.373 207.533 386.373 206.477 cv
386.373 205.409 386.661 204.569 387.249 203.957 cv
387.837 203.345 388.641 203.033 389.673 203.033 cv
390.009 203.033 390.333 203.069 390.645 203.141 cv
390.957 203.213 391.269 203.309 391.569 203.441 cv
f
395.985 203.945 mo
395.409 203.945 394.953 204.173 394.617 204.629 cv
394.281 205.085 394.113 205.697 394.113 206.477 cv
394.113 207.269 394.269 207.881 394.605 208.337 cv
394.941 208.793 395.397 209.009 395.985 209.009 cv
396.561 209.009 397.017 208.793 397.353 208.337 cv
397.689 207.881 397.857 207.269 397.857 206.477 cv
397.857 205.709 397.689 205.085 397.353 204.629 cv
397.017 204.173 396.561 203.945 395.985 203.945 cv
395.985 203.033 mo
396.921 203.033 397.653 203.345 398.193 203.945 cv
398.721 204.557 398.997 205.397 398.997 206.477 cv
398.997 207.557 398.721 208.397 398.193 208.997 cv
397.653 209.609 396.921 209.909 395.985 209.909 cv
395.037 209.909 394.293 209.609 393.765 208.997 cv
393.237 208.397 392.973 207.557 392.973 206.477 cv
392.973 205.397 393.237 204.557 393.765 203.945 cv
394.293 203.345 395.037 203.033 395.985 203.033 cv
f
404.589 204.197 mo
404.469 204.125 404.337 204.077 404.193 204.041 cv
404.049 204.017 403.893 203.993 403.725 203.993 cv
403.113 203.993 402.645 204.197 402.321 204.593 cv
401.985 204.989 401.829 205.553 401.829 206.297 cv
401.829 209.753 li
400.749 209.753 li
400.749 203.189 li
401.829 203.189 li
401.829 204.209 li
402.045 203.813 402.345 203.513 402.705 203.321 cv
403.065 203.129 403.509 203.033 404.037 203.033 cv
404.109 203.033 404.193 203.045 404.289 203.045 cv
404.373 203.057 404.469 203.069 404.589 203.093 cv
404.589 204.197 li
f
411.333 206.201 mo
411.333 206.729 li
406.377 206.729 li
406.425 207.473 406.641 208.049 407.049 208.433 cv
407.445 208.817 407.997 209.009 408.717 209.009 cv
409.125 209.009 409.533 208.961 409.917 208.865 cv
410.301 208.769 410.697 208.613 411.081 208.397 cv
411.081 209.417 li
410.697 209.585 410.301 209.717 409.893 209.789 cv
409.485 209.861 409.065 209.909 408.657 209.909 cv
407.601 209.909 406.773 209.609 406.161 209.009 cv
405.549 208.409 405.249 207.581 405.249 206.537 cv
405.249 205.469 405.537 204.617 406.113 203.981 cv
406.689 203.357 407.481 203.033 408.465 203.033 cv
409.353 203.033 410.049 203.321 410.565 203.885 cv
411.069 204.461 411.333 205.229 411.333 206.201 cv
410.253 205.889 mo
410.241 205.301 410.073 204.833 409.761 204.473 cv
409.437 204.125 409.005 203.945 408.477 203.945 cv
407.877 203.945 407.397 204.125 407.037 204.461 cv
406.677 204.797 406.461 205.277 406.413 205.889 cv
410.253 205.889 li
f
2 lc
1 lj
435.988 205.553 mo
459.988 205.553 li
0 1 1 0 cmyk
@
446.488 207.053 mo
449.488 207.053 li
449.488 204.053 li
446.488 204.053 li
cp
f
0 lc
0 lj
446.488 207.053 mo
449.488 207.053 li
449.488 204.053 li
446.488 204.053 li
cp
@
473.692 202.169 mo
472.084 206.525 li
475.3 206.525 li
473.692 202.169 li
473.02 201.005 mo
474.364 201.005 li
477.7 209.753 li
476.464 209.753 li
475.672 207.509 li
471.724 207.509 li
470.932 209.753 li
469.684 209.753 li
473.02 201.005 li
.750271 .679713 .654902 .901946 cmyk
f
483.652 203.441 mo
483.652 204.449 li
483.34 204.281 483.04 204.161 482.728 204.077 cv
482.416 203.993 482.116 203.945 481.804 203.945 cv
481.108 203.945 480.556 204.173 480.172 204.617 cv
479.788 205.061 479.596 205.685 479.596 206.477 cv
479.596 207.281 479.788 207.905 480.172 208.349 cv
480.556 208.793 481.108 209.009 481.804 209.009 cv
482.116 209.009 482.416 208.973 482.728 208.889 cv
483.04 208.805 483.34 208.673 483.652 208.505 cv
483.652 209.501 li
483.34 209.645 483.028 209.753 482.716 209.813 cv
482.392 209.873 482.044 209.909 481.684 209.909 cv
480.7 209.909 479.908 209.609 479.332 208.985 cv
478.744 208.373 478.456 207.533 478.456 206.477 cv
478.456 205.409 478.744 204.569 479.332 203.957 cv
479.92 203.345 480.724 203.033 481.756 203.033 cv
482.092 203.033 482.416 203.069 482.728 203.141 cv
483.04 203.213 483.352 203.309 483.652 203.441 cv
f
490.252 203.441 mo
490.252 204.449 li
489.94 204.281 489.64 204.161 489.328 204.077 cv
489.016 203.993 488.716 203.945 488.404 203.945 cv
487.708 203.945 487.156 204.173 486.772 204.617 cv
486.388 205.061 486.196 205.685 486.196 206.477 cv
486.196 207.281 486.388 207.905 486.772 208.349 cv
487.156 208.793 487.708 209.009 488.404 209.009 cv
488.716 209.009 489.016 208.973 489.328 208.889 cv
489.64 208.805 489.94 208.673 490.252 208.505 cv
490.252 209.501 li
489.94 209.645 489.628 209.753 489.316 209.813 cv
488.992 209.873 488.644 209.909 488.284 209.909 cv
487.3 209.909 486.508 209.609 485.932 208.985 cv
485.344 208.373 485.056 207.533 485.056 206.477 cv
485.056 205.409 485.344 204.569 485.932 203.957 cv
486.52 203.345 487.324 203.033 488.356 203.033 cv
488.692 203.033 489.016 203.069 489.328 203.141 cv
489.64 203.213 489.952 203.309 490.252 203.441 cv
f
492.016 207.161 mo
492.016 203.189 li
493.096 203.189 li
493.096 207.125 li
493.096 207.749 493.216 208.205 493.456 208.517 cv
493.696 208.829 494.056 208.985 494.548 208.985 cv
495.124 208.985 495.592 208.805 495.928 208.433 cv
496.264 208.061 496.432 207.557 496.432 206.909 cv
496.432 203.189 li
497.512 203.189 li
497.512 209.753 li
496.432 209.753 li
496.432 208.745 li
496.168 209.153 495.856 209.441 495.52 209.633 cv
495.172 209.813 494.776 209.909 494.32 209.909 cv
493.564 209.909 492.988 209.681 492.604 209.213 cv
492.208 208.757 492.016 208.073 492.016 207.161 cv
494.728 203.033 mo
494.728 203.033 li
f
503.536 204.197 mo
503.416 204.125 503.284 204.077 503.14 204.041 cv
502.996 204.017 502.84 203.993 502.672 203.993 cv
502.06 203.993 501.592 204.197 501.268 204.593 cv
500.932 204.989 500.776 205.553 500.776 206.297 cv
500.776 209.753 li
499.696 209.753 li
499.696 203.189 li
500.776 203.189 li
500.776 204.209 li
500.992 203.813 501.292 203.513 501.652 203.321 cv
502.012 203.129 502.456 203.033 502.984 203.033 cv
503.056 203.033 503.14 203.045 503.236 203.045 cv
503.32 203.057 503.416 203.069 503.536 203.093 cv
503.536 204.197 li
f
507.652 206.453 mo
506.776 206.453 506.176 206.561 505.84 206.753 cv
505.504 206.957 505.336 207.293 505.336 207.773 cv
505.336 208.157 505.456 208.469 505.708 208.685 cv
505.96 208.913 506.308 209.021 506.74 209.021 cv
507.34 209.021 507.82 208.817 508.18 208.385 cv
508.54 207.965 508.72 207.401 508.72 206.693 cv
508.72 206.453 li
507.652 206.453 li
509.8 206.009 mo
509.8 209.753 li
508.72 209.753 li
508.72 208.757 li
508.468 209.165 508.156 209.453 507.796 209.633 cv
507.436 209.813 506.98 209.909 506.452 209.909 cv
505.78 209.909 505.24 209.729 504.844 209.357 cv
504.448 208.985 504.256 208.481 504.256 207.845 cv
504.256 207.113 504.496 206.561 505 206.177 cv
505.492 205.805 506.224 205.613 507.208 205.613 cv
508.72 205.613 li
508.72 205.505 li
508.72 205.013 508.552 204.629 508.228 204.353 cv
507.904 204.089 507.448 203.945 506.86 203.945 cv
506.476 203.945 506.116 203.993 505.756 204.089 cv
505.396 204.185 505.06 204.317 504.736 204.485 cv
504.736 203.489 li
505.12 203.345 505.504 203.225 505.876 203.153 cv
506.248 203.081 506.608 203.033 506.968 203.033 cv
507.916 203.033 508.624 203.285 509.092 203.777 cv
509.56 204.269 509.8 205.013 509.8 206.009 cv
f
516.748 203.441 mo
516.748 204.449 li
516.436 204.281 516.136 204.161 515.824 204.077 cv
515.512 203.993 515.212 203.945 514.9 203.945 cv
514.204 203.945 513.652 204.173 513.268 204.617 cv
512.884 205.061 512.692 205.685 512.692 206.477 cv
512.692 207.281 512.884 207.905 513.268 208.349 cv
513.652 208.793 514.204 209.009 514.9 209.009 cv
515.212 209.009 515.512 208.973 515.824 208.889 cv
516.136 208.805 516.436 208.673 516.748 208.505 cv
516.748 209.501 li
516.436 209.645 516.124 209.753 515.812 209.813 cv
515.488 209.873 515.14 209.909 514.78 209.909 cv
513.796 209.909 513.004 209.609 512.428 208.985 cv
511.84 208.373 511.552 207.533 511.552 206.477 cv
511.552 205.409 511.84 204.569 512.428 203.957 cv
513.016 203.345 513.82 203.033 514.852 203.033 cv
515.188 203.033 515.512 203.069 515.824 203.141 cv
516.136 203.213 516.448 203.309 516.748 203.441 cv
f
521.356 210.353 mo
521.044 211.121 520.744 211.637 520.456 211.877 cv
520.168 212.117 519.784 212.237 519.304 212.237 cv
518.44 212.237 li
518.44 211.337 li
519.076 211.337 li
519.364 211.337 519.592 211.265 519.76 211.121 cv
519.928 210.977 520.108 210.653 520.312 210.125 cv
520.504 209.645 li
517.852 203.189 li
518.992 203.189 li
521.044 208.325 li
523.096 203.189 li
524.236 203.189 li
521.356 210.353 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
